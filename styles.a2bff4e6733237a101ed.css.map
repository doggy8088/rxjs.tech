{"version":3,"file":"styles.a2bff4e6733237a101ed.css","mappings":"AA2BE,gBC4uOF,CC/jOI,kLAzEF,4CAEA,qBDmGF,CCpBI,yHAjFF,4CAEA,qBDuGF,CEzHM,oPA7DJ,kFAIA,gDAGA,qBF+MF,CElJM,iKApEJ,oFAIA,gDAGA,qBFoNF,CE/IM,0JA5EJ,oFAIA,gDAGA,qBFyNF,CExHE,aAGM,oPA3FN,2CFgOA,CE9HM,iKAlGN,2CFmOA,CEzHM,0JA1GN,0CFsOA,CACF,CG/MM,gPAnCJ,2CAEA,qBH4PF,CGlNM,wJA5CJ,2CAEA,qBHgQF,CIjMM,sPA1CJ,4CAEA,qBJsPF,CIrMM,2JAnDJ,4CAEA,qBJ0PF,CKvSE;EAA0C,KLooB5C,CKnoBE;EAAwC,KLsoB1C,CMtkBE,WACE,iBN6xBJ,CMzxBI,qCACE,YN4xBN,CMxxBE,mBACE,kBACA,kBACA,qBACA,kBACA,qCACA,oBACA,gBACA,mBACA,uBACA,mBN2xBJ,CMxxBE,mFAEE,eN2xBJ,CMtxBE,oCAEE,cNwxBJ,CMr4BE,oCACE,UATS,CAUT,WAVS,CAWT,gBNw4BJ,CMp4BI,oDACE,QNs4BN,CMj4BI,oDACE,WNm4BN,CM93BI,qDACE,UNg4BN,CM33BI,+DACE,UACA,WN63BN,CMx3BI,oDACE,WN03BN,CMr3BI,8DACE,WACA,UNu3BN,CMj3BM,uEACE,SNm3BR,CM92BM,iFACE,UACA,UNg3BR,CM32BM,sEACE,UN62BR,CMx2BM,gFACE,WACA,SN02BR,CM76BE,qCACE,UAVW,CAWX,WAXW,CAYX,gBNg7BJ,CM56BI,qDACE,SN86BN,CMz6BI,qDACE,YN26BN,CMt6BI,sDACE,UNw6BN,CMn6BI,gEACE,UACA,WNq6BN,CMh6BI,qDACE,WNk6BN,CM75BI,+DACE,WACA,UN+5BN,CMz5BM,wEACE,UN25BR,CMt5BM,kFACE,UACA,WNw5BR,CMn5BM,uEACE,WNq5BR,CMh5BM,iFACE,WACA,UNk5BR,CMr9BE,oCACE,UARS,CAST,WATS,CAUT,gBNw9BJ,CMp9BI,oDACE,SNs9BN,CMj9BI,oDACE,YNm9BN,CM98BI,qDACE,UNg9BN,CM38BI,+DACE,UACA,WN68BN,CMx8BI,oDACE,WN08BN,CMr8BI,8DACE,WACA,UNu8BN,CMj8BM,uEACE,UNm8BR,CM97BM,iFACE,UACA,WNg8BR,CM37BM,sEACE,WN67BR,CMx7BM,gFACE,WACA,UN07BR,COh7BI,wEACE,gBPwnCN,CQ7oCI,4BACE,WRwhDN,CQthDM,yCACE,WRwhDR,CShjDI,yBACE,eTozDN,CU3tDI,+BACE,WVokEN,CUjkEI,+FAEE,YVokEN,CU/jEI,kCACE,UACA,YVkkEN,CUvjEI,iNACE,QV8jEN,CWpuEE,2BACE,eXk8EJ,CWh8EE,yCACE,WXm8EJ,CW72EI,0BA1FF,2BACE,eX28EF,CWz8EA,yCACE,WX48EF,CACF,CYh7EI,eACE,eZ+7EN,CM5xEE,mBACE,eAlMU,CAmMV,cApMQ,CAqMR,4CNyyEJ,CMtyEE,oCAEE,aNwyEJ,CMryEE,oCACE,cNwyEJ,Ca50EE,yCCnGE,oDAcF,sBDuFE,ebg1EJ,Ca70EE,sCCxGE,oDAcF,sBD4FE,ebi1EJ,Ca90EE,6CC7GE,oDAcF,sBDiGE,ebk1EJ,Ca/0EE,6CClHE,oDAcF,sBDsGE,ebm1EJ,Ca70EE,2BC1HE,iEDmIA,eby0EJ,Cat0EE,2BCtIE,iED+IA,ebk0EJ,Ca/zEE,6BClJE,oDAcF,qBdw8EF,Cah0EE,sCCtJE,oDAcF,qBd68EF,Cal0EI,4CACE,ebo0EN,Cah0EE,wBC9JE,oDAcF,qBdq9EF,Caj0EE,8CClKE,sDAcF,sBDsJE,ebq0EJ,Cal0EE,8CCvKE,oDAcF,sBD2JE,ebs0EJ,Can0EE,8CC5KE,oDAcF,uBDgKE,ebu0EJ,Cap0EE,8CCjLE,oDAcF,sBDqKE,ebw0EJ,CezjFE,4BD8DE,oDAcF,qBdk/EF,CgB36EE,4GAGI,6CACA,eACA,ehB66EN,CiB3jFE,6BACE,4CjBkkFJ,CiB/jFE,gBAEI,eACA,ejBikFN,CiB7jFE,iCACE,cjBgkFJ,CiB7jFE,qCAEE,cjBgkFJ,CkB1gFE,cACE,4ClB6gFJ,CkBzgFE,yCACE,gBlB4gFJ,CmB1hFE,UACE,eACA,enB6hFJ,CmB3hFI,+EAEE,cnB6hFN,CoB3lFE,WACE,4CpB8lFJ,CoB3lFE,iBACE,eACA,epB8lFJ,CoB3lFE,2BACE,cpB8lFJ,CqBt9EE,cACE,4CrBy9EJ,CqBt9EE,mBACE,crBy9EJ,CqBt9EE,qDAGI,eACA,erBw9EN,CqBp9EE,8BAEI,cA3L6B,CA4L7B,erBs9EN,CsB3oFE,kBR6DE,oDAcF,qBdqkFF,CQ3mFE,4BAEI,6CACA,eACA,eR6mFN,CQzmFE,6BMgBE,oDAcF,qBdglFF,CC5gFE,gBa3FE,iBAiBU,CAhBV,eAiBY,CAhBZ,iBAiBY,CAhBZ,4CAiBY,CAGd,qBdwlFF,CChhFE,wBACE,wBDmhFJ,CC7gFI,kEACE,cAvB2B,CAwB3B,iBDihFN,CC7gFI,gFACE,aACA,WDghFN,CC9gFM,oGACE,eACA,iBDihFR,CC5gFE,sBACE,eAEA,qCD8gFJ,CC1gFI,kLAzEF,4CAEA,qBDulFF,CCxgFI,yHAjFF,4CAEA,qBD2lFF,CCrgFE,8BACE,cACA,oBDwgFJ,CCrgFE,sBACE,aDwgFJ,CCrgFE,0BAGE,gBDsgFJ,CCngFE,kCACE,aA/EoB,CAgFpB,wBAzEqB,CA6ErB,+BDmgFJ,CEzoFI,0DACE,qBF4oFN,CEzoFI,wDACE,iBF2oFN,CEvoFM,oPA7DJ,oFAIA,gDAGA,qBFmsFF,CEtoFM,iKApEJ,oFAIA,gDAGA,qBFwsFF,CEnoFM,0JA5EJ,oFAIA,gDAGA,qBF6sFF,CEjoFI,wDACE,aFmoFN,CEhoFI,4DAGE,aFgoFN,CE7nFI,oEACE,wBAjDmB,CAqDnB,+BF4nFN,CEtnFE,aAGM,oPA3FN,2CFotFA,CElnFM,iKAlGN,2CFutFA,CE7mFM,0JA1GN,2CF0tFA,CACF,CG7sFI,sDACE,qBH+sFN,CG5sFI,sDACE,cACA,gBH8sFN,CG1sFM,gPAnCJ,2CAEA,qBHgvFF,CGtsFM,wJA5CJ,2CAEA,qBHovFF,CI/rFI,yDACE,aJksFN,CI/rFI,yDACE,cACA,iBJisFN,CI7rFM,sPA1CJ,4CAEA,qBJ0uFF,CIzrFM,2JAnDJ,4CAEA,qBJ8uFF,CuBlzFE,4CAGE,cvBozFJ,CwBxzFE,gEARA,mBACA,gBACA,uBAQE,cACA,qBxB6zFJ,CwB1zFI,8FACE,cxB6zFN,CyBpwFE,wBACE,mBzBuwFJ,C0BnyFE,eAEI,6CACA,eACA,e1BqyFN,CS5yFE,4DAGI,6CACA,cT8yFN,C2BvxFE,8BACE,4C3B8xFJ,C2B3xFE,oBACE,c3B8xFJ,C4B9rFE,uDC7FE,4C7BqyFJ,C4BxsFE,6BAGI,eACA,e5BosFN,CUjwFE,8CACE,4CVowFJ,CUjwFE,gBAEI,eACA,eVmwFN,CU/vFE,0BACE,eVkwFJ,CU/vFE,sBACE,cVkwFJ,CU/vFE,yBAEI,eACA,eViwFN,C8BxvFE,4CAHE,4C9BqwFJ,C8BlwFE,6BAGI,eACA,e9B8vFN,CW50FE,6GGUE,oDAcF,sBHhBE,QXg1FJ,C+Bt4FE,aACE,6CACA,cAtBQ,CAuBR,eAtBe,CAuBf,kB/By4FJ,C+Bt4FE,qBACE,cAxBgB,CAyBhB,eAvBA,CAwBA,kB/By4FJ,CgCx3FE,gCACE,4ChC+3FJ,CgC13FI,8BACE,chC63FN,CwB/6FE,wCARA,mBACA,gBACA,uBAQE,cACA,qBxBm7FJ,CwBh7FI,uDACE,cxBk7FN,CgCn4FI,gCACE,chCq4FN,CwB57FE,0CARA,mBACA,gBACA,uBAQE,cACA,qBxBg8FJ,CwB77FI,yDACE,cxB+7FN,CgC34FI,8BACE,6CACA,eACA,ehC64FN,CgCv4FI,qCACE,chC04FN,CwB/8FE,+CARA,mBACA,gBACA,uBAQE,cACA,qBxBm9FJ,CgC74FI,qGACE,chCk5FN,CwB59FE,iDARA,mBACA,gBACA,uBAQE,cACA,qBxBg+FJ,CwB79FI,gEACE,cxB+9FN,CgCx5FI,qCACE,4CA1CU,CA2CV,eACA,ehC05FN,CiCl8FE,YAEI,6CACA,cjCo8FN,CkCt+FE,oBpB8DE,oDAcF,qBd+5FF,CmCn+FE,qBAEI,6CACA,cnCq+FN,CmCj+FE,4BACE,cAEE,oBACA,kBACA,enCm+FN,CYn/FE,UACE,4CZs/FJ,CYn/FE,qCAEE,gBACA,cZs/FJ,CoCjhGE,YACE,gBAIA,iBpCihGJ,CoC1gGI,wBACE,uBpC4gGN,CoCxgGE,iCACE,gBpC2gGJ,CoCxgGE,oBACE,kBACA,kBACA,oBAEA,wDACA,kBpC0gGJ,CqCngGI,8CDHE,YpCygGN,CqC1iGE,qBACE,SACA,mBACA,WACA,YACA,gBACA,UACA,kBACA,UAIA,mBAGA,UAGA,wBACA,oBrCsiGJ,CsC5iGE,mDAEE,oBAGA,MACA,OACA,YACA,UtC4iGJ,CsCxiGE,uBACE,eACA,YtC2iGJ,CsCziGI,6BAGE,YtCyiGN,CsC1hGE,8CANE,aACA,kBACA,YtC8iGJ,CsC1iGE,kBAIE,oBACA,sBAMA,eACA,etC8hGJ,CsC3hGE,sBAEE,kBACA,MACA,SACA,OACA,QAEA,YApEuB,CAqEvB,oBACA,wCACA,kDACA,StC4hGJ,CsC1hGI,mDACE,StC4hGN,CsCvhGM,6EAGE,UtCuhGR,CsClhGE,2BACE,0BtCqhGJ,CsC7gGI,iGACE,StCghGN,CsC1gGE,6CACE,kBACA,YA3Gc,CAgHd,aAIA,sBAGA,cACA,ctCogGJ,CsChgGE,wBACE,eAKA,WAKA,iBtC2/FJ,CKloGE,+BACE,WLqoGJ,CK/nGE,yCAyCA,wBACA,iCAxCE,sBACA,yBLmoGJ,CK1nGE,iDA6BA,wBACA,iCA5BE,kBL8nGJ,CKpnGE;EAA0C,KLwnG5C,CKvnGE;EAAwC,KL0nG1C,CKxnGE,oDAEE,qGLynGJ,CKtnGE,0DAEE,iGLwnGJ,CuCtoGE,8CACE,iBvC6oGJ,CwClqGE,oBAII,+BxCkqGN,CiCpqGE,YACE,qBjCuqGJ,CiC3pGI,4LAHE,0BjCwqGN,CiCrqGI,uBAEE,qBjCmqGN,CiChqGI,gCACE,qBjCkqGN,CiC9pGE,gEACE,ajCiqGJ,CiC9pGE,+DACE,ajCiqGJ,CiC9pGE,6DACE,ajCiqGJ,CkCrsGE,oBACE,qBlCwsGJ,CkCrsGE,2CACE,qBlCwsGJ,CyCnsGE,qBACE,qBzCssGJ,CyCpsGI,2BACE,azCssGN,CyClsGE,8BACE,azCqsGJ,CyClsGE,0FAEE,kBzCqsGJ,CyC7rGE,wJAIE,kBzCgsGJ,CyC7rGE,oFAEE,kBzCgsGJ,CyC3rGI,0HACE,kBzC+rGN,C0CxuGE,oBAIE,yBACA,qB1CwuGJ,C0CjuGI,kBCkIF,iF3CmmGF,C0CruGI,kBCkIF,gG3CumGF,C0CzuGI,kBCkIF,gG3C2mGF,C0C7uGI,kBCkIF,gG3C+mGF,C0CjvGI,kBCkIF,iG3CmnGF,C0CrvGI,kBCkIF,iG3CunGF,C0CzvGI,kBCkIF,kG3C2nGF,C0C7vGI,kBCkIF,sG3C+nGF,C0CjwGI,kBCkIF,sG3CmoGF,C0CrwGI,kBCkIF,sG3CuoGF,C0CzwGI,mBCkIF,uG3C2oGF,C0C7wGI,mBCkIF,uG3C+oGF,C0CjxGI,mBCkIF,uG3CmpGF,C0CrxGI,mBCkIF,uG3CupGF,C0CzxGI,mBCkIF,uG3C2pGF,C0C7xGI,mBCkIF,uG3C+pGF,C0CjyGI,mBCkIF,wG3CmqGF,C0CryGI,mBCkIF,wG3CuqGF,C0CzyGI,mBCkIF,wG3C2qGF,C0C7yGI,mBCkIF,wG3C+qGF,C0CjzGI,mBCkIF,yG3CmrGF,C0CrzGI,mBCkIF,yG3CurGF,C0CzzGI,mBCkIF,yG3C2rGF,C0C7zGI,mBCkIF,yG3C+rGF,C0Cj0GI,mBCkIF,yG3CmsGF,C0C9zGI,yBACE,Y1Ci0GN,C4C31GE,wBAEE,gBACA,qB5C61GJ,C2CjsGE,sDAXA,iG3C+sGF,C4Cz1GI,8EACE,e5C21GN,C4Cz1GM,wGACE,qB5C21GR,CMttGE,mBACE,WACA,kBNytGJ,CqCh1GI,6C/B0HE,kBACA,eNytGN,CMptGI,qCACE,mBACA,UNutGN,CMltGI,mCACE,WACA,kBNqtGN,CMhtGI,uCAWI,mBAMF,qBNosGN,Ce/3GE,4B4BkJA,yG5BhJE,gBACA,qBfk4GJ,CgBhzGE,iDAKE,cACA,sBhB+yGJ,CgB/0GE,qFACE,ahBi1GJ,CgB/0GE,kFACE,ahBi1GJ,CgB/0GE,4EACE,ahBi1GJ,CgB70GI,glBAEE,qBhB80GN,CgBj5GE,mKACE,wBhBm5GJ,CgBh5GE,gKACE,wBhBk5GJ,CgB/4GE,0JACE,wBhBi5GJ,CgB94GE,2LACE,4BhBg5GJ,CgB/zGI,6GACE,UAxGY,CAyGZ,6BhBi0GN,CgB7zGE,0BACE,ehBg0GJ,CgB3zGE,8CACE,4BhB8zGJ,CgB3zGE,2DAEE,sBACA,qBhB6zGJ,CgBl3GE,iTACE,UhB03GJ,CgBt3GI,4vBAEE,qBhBu3GN,CgBp4GE,2GACE,wBhBs4GJ,CgBp4GE,uGACE,wBhBs4GJ,CgBp4GE,+FACE,wBhBs4GJ,CgBl4GI,4vBAEE,gChBm4GN,CgB75GE,iiBAnBA,mChBy7GF,C2CvzGE,iGAXA,iF3Cs0GF,C2C3zGE,iDAXA,gG3C00GF,C2C/zGE,kFAXA,sG3C60GF,C2Cl0GE,qEAXA,iF3Cg1GF,C2Cr0GE,mFAXA,kG3Co1GF,C2Cz0GE,qJAXA,uG3Cu1GF,C2C50GE,2HAXA,iF3C01GF,COz+GE,uDoC+IA,gG3C+1GF,COz+GE,iHAEE,eP4+GJ,COz+GE,mBACE,qBP4+GJ,CO1+GI,oDACE,gCP4+GN,COx+GE,uCACE,sBACA,eP2+GJ,COz+GI,wEACE,qBP2+GN,COv+GE,mFACE,qCP0+GJ,COv+GE,6FACE,iBACA,sCP0+GJ,COt+GI,8GACE,iBACA,kBACA,oCPy+GN,COr+GE,2BACE,yBACA,qBPw+GJ,COt+GI,iEACE,qBPw+GN,COp+GE,4BACE,sBACA,qBPu+GJ,COr+GI,kEACE,ePu+GN,COp+GI,sDACE,wBPs+GN,COl+GE,iHAEE,gCPq+GJ,CiB3iHE,UAEE,gBACA,qBjB6iHJ,C2Cp5GE,wCAXA,gG3Ck6GF,C2Cv5GE,sDAXA,iF3Cq6GF,CiB3iHE,mBACE,qBjB8iHJ,CkB5iHE,oBACE,4BlB+iHJ,CkB5iHE,wBACE,YlB+iHJ,CkB5iHE,6BAGE,wBlB6iHJ,CkB1iHE,wBACE,wBlB6iHJ,CkBziHI,4HACE,wBlB4iHN,CkBziHI,0HACE,wBlB2iHN,CkBxiHI,sHACE,wBlB0iHN,CkBniHM,gJACE,wBlBsiHR,CkBjiHM,sEACE,oBlBmiHR,CkB/hHI,2CACE,qBlBiiHN,CkB3hHE,kCACE,qBlB8hHJ,CkBzhHI,mKACE,kBlB6hHN,CkB1hHI,iKACE,kBlB6hHN,CkB1hHI,6JACE,kBlB6hHN,CmBrkHE,4BA5CA,wBAyCwB,CAxCxB,qBnBqnHF,CmBnnHE,6CACE,qBAsCsB,CArCtB,UnBqnHJ,CmB1kHM,2DwBmGJ,gG3C0+GF,CmBzkHM,2EACE,WnB2kHR,CmBvkHI,8CACE,UnBykHN,CmBtkHI,kCACE,enBwkHN,CmBnkHI,0DAnEF,wBAyBE,CAxBF,UnB0oHF,CmBxoHE,2EACE,UAoBsB,CAnBtB,UnB0oHJ,CmBpnHE,8EAVA,mCnBioHF,CmB3kHI,uDAvEF,wBAyBE,CAxBF,UnBqpHF,CmBnpHE,wEACE,UAoBsB,CAnBtB,UnBqpHJ,CmB/nHE,2EAVA,mCnB4oHF,CmBllHI,yDA3EF,wBAyBE,CAxBF,UnBgqHF,CmB9pHE,0EACE,UAoBsB,CAnBtB,UnBgqHJ,CmB1oHE,6EAVA,mCnBupHF,CoBxqHE,WACE,epB2qHJ,CoBxqHE,uJAIE,kBpB2qHJ,CoBxqHE,wFAEE,mCpB2qHJ,CoBxqHE,iBACE,qBpB2qHJ,CoBxqHE,2BACE,qBpB2qHJ,CqBtoHE,oBACE,oBrByoHJ,CqBpoHE,+HAGE,qBrBuoHJ,CqBpoHE,yCACE,0BrBuoHJ,CqBpoHE,oDAEE,qBrBuoHJ,CqBpoHE,gEAEE,sBACA,wBrBuoHJ,CqB9nHE,mMACE,qBrBqoHJ,CqBloHE,8BAOI,qBrB+nHN,CqBtrHE,uGAkEI,4BrBwnHN,CqB1rHE,mIA2EM,4BrBmnHR,CqBjiHE,mCACE,6BrBoiHJ,CqBjiHE,sFAEE,6BrBoiHJ,CqBjiHE,4GAEE,6ErBoiHJ,CqBjiHE,4GAEE,8ErBoiHJ,CqBjiHE,4IAEE,kBrBoiHJ,CqBjiHE,sIAEE,kBrBoiHJ,CqB/vHE,4BACE,yBACA,UrBkwHJ,CqB/vHE,wDAII,mCrB+vHN,CqBtvHE,oDACE,+BrByvHJ,CqBxuHE,weARM,mCrBsvHR,CqBrpHE,wBsBWA,kGtBTE,sBACA,qBrBwpHJ,CqBvlHE,sEACE,6BrBylHJ,CqBtlHE,4JAEE,6BrBwlHJ,CqBrlHE,kLAEE,6ErBulHJ,CqBplHE,kLAEE,8ErBslHJ,CqBnlHE,kNAEE,kBrBqlHJ,CqBllHE,4MAEE,kBrBolHJ,CqB/yHE,+DACE,yBACA,UrBizHJ,CqB9yHE,2FAII,mCrB6yHN,CqBpyHE,uFACE,+BrBsyHJ,CqBrxHE,ilBARM,mCrBkyHR,CqB7nHE,oEACE,6BrB+nHJ,CqB5nHE,wJAEE,6BrB8nHJ,CqB3nHE,8KAEE,6ErB6nHJ,CqB1nHE,8KAEE,8ErB4nHJ,CqBznHE,8MAEE,kBrB2nHJ,CqBxnHE,wMAEE,kBrB0nHJ,CqBr1HE,6DACE,yBACA,UrBu1HJ,CqBp1HE,yFAII,mCrBm1HN,CqB10HE,qFACE,+BrB40HJ,CqB3zHE,2kBARM,mCrBw0HR,CqBztHE,8BsBHA,yG3CguHF,CqBztHE,8BACE,arB4tHJ,CqB1tHI,yCACE,arB4tHN,CqBztHI,uCACE,arB2tHN,CqBvtHE,sCACE,qBrB0tHJ,CsB/3HE,sBqBiJA,0GrB/IE,gBACA,qBtBk4HJ,C6C14HE,aACE,gC7C64HJ,C6C14HE,sBACE,kC7C64HJ,CQ34HE,qBAEE,gBACA,qBR64HJ,C2CtvHE,mDAXA,gG3CowHF,CQ74HE,gBACE,gCRg5HJ,C8Ch6HM,mStCoBF,0BRg5HJ,CQ34HE,qBACE,oGAEE,eR64HJ,CACF,CQ14HE,kCACE,qBR44HJ,CQz4HE,uEAEE,qBR44HJ,CQz4HE,gDACE,qBR44HJ,CQ14HI,0KAEE,aR44HN,CCz5HE,gCACE,oBDg6HJ,CC75HE,kDACE,aDg6HJ,CC95HI,6DACE,aDg6HN,CC75HI,2DACE,aD+5HN,CC35HE,6CACE,aD85HJ,CC35HE,uBACE,gCD85HJ,CC15HI,mDACE,wBD65HN,CC35HM,8DACE,wBD65HR,CC15HM,4DACE,wBD45HR,CCt5HI,4GACE,aDy5HN,CCt5HI,uHACE,aDw5HN,CCz4HM,uVAEE,aDk5HR,CC94HI,uIAEE,wBDg5HN,CC54HE,WACE,aD+4HJ,CEr+HI,oGACE,qBF2+HN,CEx+HI,4DACE,gCF0+HN,CEv+HI,oF6CzBF,4FACA,yBACA,0B/CmgIF,CgD7/HI,8DACE,gChDggIN,CgD7/HI,sFDZF,4FACA,yBACA,0B/C4gIF,CG9/HI,qDACE,gCHigIN,CG9/HI,6EACE,gCHggIN,CG7/HI,iEACE,gCH+/HN,CG3/HM,8EACE,qBH6/HR,CG1/HM,yFACE,4BH4/HR,CIxgII,2DACE,qBJ2gIN,CIxgII,iEACE,qBJ0gIN,CItgIM,6EACE,aJwgIR,CIrgIM,wFACE,aJugIR,CI7/HM,qMACE,aJkgIR,CI7/HM,iFACE,qBJ+/HR,CI5/HM,mFACE,qBJ8/HR,CiDljII,sBACE,ajDqjIN,CiDljII,qBACE,ajDojIN,CiDjjII,mBACE,ajDmjIN,CyBvjIE,mEACE,qBzB0jIJ,CyBvjIE,uHAEE,qBzB0jIJ,CyBvjIE,mBACE,mBzB0jIJ,CkD5kIE,gCzBqBI,qBzB0jIN,CkD3kIE,qCzBiBI,qBzB6jIN,CkD1kIE,8CzBaI,qBzBgkIN,CkDzkIE,yCzBSI,qBzBmkIN,CyBhjIE,8CACE,mBzBmjIJ,CyBhjIE,uFAEE,mBzBmjIJ,CyBhjIE,0FACE,azBmjIJ,CgC7lII,8DACE,qBhCmmIN,CgChmII,8BACE,qBhCkmIN,CgC9lIE,wBACE,qBhCimIJ,CgC3lII,gMACE,0BhCkmIN,CgC7lII,+GACE,0BhCgmIN,C0B5nIE,gBAEE,e1B8nIJ,C2Cp+HE,8CAXA,iG3Ck/HF,C0B9nIE,eACE,uBACA,qB1BioIJ,C0B9nIM,qHAGE,qB1BgoIR,C0B3nIE,yDAEE,qB1B8nIJ,C0BvnII,uLACE,0B1B6nIN,CSzpIE,eACE,eT4pIJ,CSzpIE,4DAEE,qBT4pIJ,CSzpIE,kDAEE,qCACA,sCT4pIJ,CSzpIE,yCAEE,oCT4pIJ,CSxpII,uMAIE,4BT2pIN,CmDzqIE,6BACE,YnD4qIJ,CmDzqIE,yBACE,wBnD4qIJ,CmDzqIE,6BACE,wBnD4qIJ,CmDxqII,0DACE,YnD2qIN,CmDxqII,sDACE,wBnD0qIN,CmDvqII,0DACE,wBnDyqIN,CmDpqII,wDACE,YnDuqIN,CmDpqII,oDACE,wBnDsqIN,CmDnqII,wDACE,wBnDqqIN,CoDttII,iDACE,cpDytIN,CoDttII,uEACE,cpDwtIN,CoDrtII,mEACE,cpDutIN,CqDhtIE,wBACE,4BrDmtIJ,CqDxuIE,wEACE,oBrD2uIJ,CqDxuIE,2SAIE,wBrDwuIJ,CqDhvIE,uEACE,oBrDkvIJ,CqD/uIE,uSAIE,wBrD+uIJ,CqDvvIE,qEACE,oBrDyvIJ,CqDtvIE,+RAIE,wBrDsvIJ,CqDrtIM,4IAEE,4BrDutIR,CqDptIM,wIAEE,gCrDstIR,CqDntIM,8DACE,qBrDqtIR,CqD/sII,sCACE,qBrDitIN,C2BlwIE,kBACE,qB3BqwIJ,C2BlwIE,wBACE,qB3BqwIJ,C2BlwIE,uCACE,qB3BqwIJ,C2BlwIE,kBACE,qB3BqwIJ,C2BlwIE,kBACE,e3BqwIJ,C2C9nIE,gDAXA,iG3C4oIF,C2BrwII,qEACE,0B3BuwIN,C2BjwIM,0DACE,a3BowIR,C2BjwIM,yDACE,a3BmwIR,C2B3vII,wHACE,a3BgwIN,C2B7vII,kEACE,qB3B+vIN,CsDzyIE,sBACE,wBALmC,CAMnC,qBtD4yIJ,CsDzyIE,YAEE,qBtD4yIJ,CsD1yII,wCAHA,qBtDgzIJ,CsDzyII,kCX6HF,wG3C+qIF,CsDryIE,iBACE,sCtDwyIJ,CsDhyIE,2DACE,qCAhCmB,CAiCnB,iBtDuyIJ,CsDryII,0CACE,iBACA,sCtDuyIN,CsDnyIE,sCAQI,+BtD+xIN,C6Bx1II,sDACE,wB7B21IN,C6Bx1II,oDAGE,oC7Bw1IN,C6Br1II,kDAGE,wB7Bq1IN,C6Bl2II,kEACE,wB7Bo2IN,C6Bj2II,gEAGE,oC7Bi2IN,C6B91II,8DAGE,wB7B81IN,C6B32II,+DACE,wB7B62IN,C6B12II,6DAGE,oC7B02IN,C6Bv2II,2DAGE,wB7Bu2IN,C6Bl0II,wDAGE,qB7Bk0IN,C6B9zIE,wBc2FA,iGdzFE,wB7Bi0IJ,C6B9zIE,sBACE,gC7Bi0IJ,C4Bv1IE,6BACE,gC5B01IJ,C4Bt4IE,wGAGE,wB5By4IJ,C4Bt4IE,0CACE,U5Bw4IJ,C4Br4IE,oCAGE,mC5Bq4IJ,C4Bl5IE,qGAGE,wB5Bq5IJ,C4Bl5IE,yCACE,U5Bo5IJ,C4Bj5IE,mCAGE,mC5Bi5IJ,C4B95IE,+FAGE,wB5Bi6IJ,C4B95IE,uCACE,U5Bg6IJ,C4B75IE,iCAGE,mC5B65IJ,C4B72II,oGACE,gC5Bi3IN,C4Br2IM,6LACE,gC5B62IR,C4Bv2II,6CAGE,gC5Bw2IN,C4B91IM,oJAEE,gC5Bg2IR,C4B51IQ,4KAEE,gC5B81IV,C4Bx1IM,6EACE,4BA9EiB,CA+EjB,4B5B01IR,C4Br1IQ,4KACE,4B5Bu1IV,C4Bp1IQ,oNACE,4B5Bs1IV,C4Bh1IE,gDACE,2B5Bm1IJ,C4B10IE,yCACE,8GAIA,qH5B00IJ,C4Bh0IE,uCACE,8G5Bm0IJ,CUj9II,mKAIE,gCVi9IN,CU98II,2CACE,cVg9IN,CU18II,qBACE,uBACE,eV48IN,CACF,CUz8II,qEAIE,qBVy8IN,CUt8II,gCAGE,iCACA,UVs8IN,CUn8II,+HAGE,yBACA,UVq8IN,CUj8IM,2CACE,UVm8IR,CUh8IM,gKAGE,yBACA,UVk8IR,CU77IM,yCACE,UV+7IR,CU57IM,0JAGE,yBACA,UV87IR,CU17II,4CACE,6BACA,aV47IN,CUz7II,uDACE,qBV27IN,CUx7II,sDACE,aV07IN,CUt7IE,8CACE,qBVy7IJ,CUt7IE,kCACE,iCVy7IJ,CUt7IE,wGAGE,gCVy7IJ,CuD5hJE,uBAYI,avDohJN,C8B5hJE,iCAEE,uC9B+hJJ,C8B3hJI,+FAEE,oCAVY,CAWZ,kB9B8hJN,C8B1hJE,6BACE,qB9B6hJJ,C8B3hJI,+DACE,qB9B6hJN,C8BzhJE,mCACE,4B9B4hJJ,C8BzhJE,uEACE,4B9B4hJJ,C8BxhJE,gGAEE,mBACA,e9B2hJJ,C8B7+IM,grBACE,mC9Bo/IR,C8B//IE,kFACE,wB9BigJJ,C8BlgJE,gVACE,qB9BogJJ,C8B3/IM,wqBACE,mC9BigJR,C8B5gJE,gFACE,wB9B8gJJ,C8B/gJE,wUACE,qB9BihJJ,C8BxgJM,wpBACE,qC9B8gJR,C8BzhJE,4EACE,wB9B2hJJ,C8B5hJE,wTACE,qB9B8hJJ,C8BrhJM,wwBACE,mC9B2hJR,C8BhhJE,gXACE,wB9BkhJJ,C8B9gJE,sSACE,U9BghJJ,C8B9gJI,0WACE,wB9BghJN,C8B3gJE,0tBAIE,iB9BghJJ,C8B7gJE,wdAEE,+B9BghJJ,C8B3gJE,weAGE,oC9B+gJJ,C8B1jJM,gwBACE,mC9BgkJR,C8BrjJE,0WACE,wB9BujJJ,C8BnjJE,kSACE,U9BqjJJ,C8BnjJI,sWACE,wB9BqjJN,C8BhjJE,ktBAIE,iB9BqjJJ,C8BljJE,odAEE,+B9BqjJJ,C8BhjJE,keAGE,oC9BojJJ,C8B/lJM,gvBACE,qC9BqmJR,C8B1lJE,8VACE,wB9B4lJJ,C8BxlJE,0RACE,U9B0lJJ,C8BxlJI,8VACE,wB9B0lJN,C8BrlJE,ksBAIE,iB9B0lJJ,C8BvlJE,4cAEE,+B9B0lJJ,C8BrlJE,sdAGE,oC9BylJJ,CW/qJE,aACE,mBACA,qBXkrJJ,CWhrJI,yBApCF,mBACA,UXutJF,CWhrJI,wBAxCF,mBACA,UX2tJF,CWhrJI,sBA5CF,mBACA,UX+tJF,CW3tJE,4HAGE,6BX6tJJ,CW1tJE,4MAKE,aX4tJJ,CWztJE,gCACE,wBX2tJJ,C+B9uJE,aACE,4B/BivJJ,CYzvJE,UACE,eZ4vJJ,CYzvJE,qCAEE,qBZ4vJJ,CmClwJE,yBAGE,yBACA,mBQ6IF,kG3CunJF,CmC/vJE,4BACE,anCkwJJ,CwDxxJA,KACE,gGACA,SACA,UCmBS,CDlBT,eACA,mCACA,iCxD0yJF,CwDvyJA,GACE,qBACA,eACA,gBACA,YxD0yJF,CwDxyJE,qCANF,GAOI,YxD2yJF,CACF,CwDxyJA,GACE,eACA,gBACA,mBACA,UxD2yJF,CwDxyJA,GACE,eAEA,axD4yJF,CwDxyJA,MALE,gBAEA,UxDkzJF,CwD/yJA,GACE,eAEA,YxD4yJF,CwDjyJA,MANE,eACA,gBACA,aACA,UxDmzJF,CwDhzJA,GACE,axD+yJF,CwDvyJE,qCADF,eAEI,YxD2yJF,CACF,CwDxyJA,yBACE,YxD2yJF,CwDxyJA,mBACE,eACA,iBAEA,exD2yJF,CwD1yJE,wDAFA,mBxD+yJF,CwDvyJE,WACE,YxD0yJJ,CwDtyJA,KACE,QxDyyJF,CwDtyJA,EACE,oBxDyyJF,CwDtyJA,eACE,eACA,gBACA,WACA,+FC7FU,CD8FV,yBACA,cxDyyJF,CwDtyJA,OACE,exDyyJF,CwDtyJA,MACE,yBAEA,iBACA,exDyyJF,CwDtyJA,eACE,gBACA,kBACA,exDyyJF,CwDtyJA,GACE,gBACA,iBACA,mBxDyyJF,CwDvyJE,KACE,QxDyyJJ,CwDryJA,GACE,eACA,gBACA,kBACA,exDwyJF,CwDryJA,+BAEE,cACA,UClHS,CDmHT,iBACA,cACA,cACA,wBC1He,CD2Hf,iBxDwyJF,CwDryJA,oCAVE,qCxDozJF,CwD1yJA,KAEE,axDwyJF,CwDryJA,mBACE,axDwyJF,CwDvyJE,yBACE,axDyyJJ,CwDryJA,UACE,cACA,mBACA,8BACA,gBACA,kBACA,axDwyJF,C0D18JA,aACI,iB1Dg9JJ,C0D98JI,iBACI,oB1Dg9JR,C0D78JI,6BACI,e1D+8JR,C0D78JQ,sCACI,WACA,eACA,wBDDL,CCEK,0BACA,oBACA,gB1D+8JZ,C0D38JY,uCACI,mBACA,WACA,gB1D68JhB,C0D18JY,4EACI,S1D48JhB,C0Dz8JY,sCACI,e1D28JhB,C0Dp8JA,UAEI,gB1Du8JJ,C0Dn8JQ,mBACI,oBACA,eACA,e1Dq8JZ,C0Dl8JQ,mBACI,+B1Do8JZ,C0Dj8JQ,mBACI,qB1Dm8JZ,C0Dh8JQ,mBACI,a1Dk8JZ,C0D/7JQ,8BACI,kB1Di8JZ,C0D77JY,8BACI,Y1D+7JhB,C0D17JY,8BACI,iB1D47JhB,C0Dt7JI,kDACI,8BACA,eACA,iBACA,kB1Dw7JR,C2D3gKE,qCAEE,W3D6gKJ,C2DzgKA,iBACE,iBACA,sB3D4gKF,C2DzgKA,0BACE,SACE,Y3D4gKF,C2DzgKA,iBACE,iBACA,sB3D4gKF,CACF,C2DzgKA,mBACE,WACA,Y3D2gKF,C2DxgKA,wBACE,c3D2gKF,C2DxgKA,4BACE,WACA,cACA,WACA,cACA,kB3D2gKF,C4DhjKA,gCAEE,yB5DkjKF,C6DpjKA,OAEE,iBACA,OACA,aAEA,wBJMK,CILL,aJUS,CITT,e7DujKF,C6DrjKE,yBATA,kBAIA,S7D8jKF,C6DpjKE,qBACE,cACA,kB7DsjKJ,C6DnjKE,SACE,aJJO,CIKP,gBACA,qBACA,WACA,iB7DqjKJ,C6DpjKI,eACE,yB7DsjKN,C6DpjKI,iBACE,oB7DsjKN,C6DnjKE,gBACE,c7DqjKJ,C6DnjKE,UACE,eACA,yBACA,gBACA,e7DqjKJ,C6DnjKE,SACE,kBACA,iB7DqjKJ,C6DnjKI,0BAJF,SAKI,e7DsjKJ,CACF,C6DnjKE,sBAGE,aAEA,uBAEA,gBACA,e7DmjKJ,C6DjjKI,yBACE,2BACA,U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BrE8iMN,CqE3iME,kBACI,sBrE8iMN,CqE3iME,uEACI,uBrE8iMN,CqE3iME,6BACI,yCrE8iMN,CqE3iME,IACI,wBrE8iMN,CqE3iME,EACI,QrE8iMN,CqE3iME,0BACI,uBrE8iMN,CqEriME,0CACI,sBrE4iMN,CqExiME,qBACI,kBrE2iMN,CqExiME,wCACI,erE2iMN,CqExiME,iBACI,gBrE2iMN,CqExiME,UACI,crE2iMN,CqExiME,cACI,qBrE2iMN,CqEviMM,qCACI,uBrE0iMV,CqEviMM,mCACI,oBrEyiMV,CqEtiMM,oBAEI,UrEwiMV,CqEpiME,kCALQ,yBrE6iMV,CqEliMU,kEACI,iBrEqiMd,CqEliMU,4DACI,erEoiMd,CqE/hME,kBACI,qBACA,0BACA,qBACA,oBACA,uBrEkiMN,CqE/hME,qBACI,wBrEkiMN,CACF,CsE9oMA,gBACI,aACA,cACA,eACA,UbkBO,CajBP,WACA,qBtEmpMJ,CsEjpMI,wCACI,+BACA,oCtEmpMR,CsEjpMQ,oRACI,atEmpMZ,CsE/oMI,0CACI,+BACA,oCtEipMR,CsE/oMQ,gSACI,atEipMZ,CsE7oMI,sCACI,+BACA,oCtE+oMR,CsE7oMQ,wQACI,atE+oMZ,CsE3oMI,oBACI,SACA,gBtE6oMR,CuElrMA,cACE,WvEqrMF,CuEprME,8BACE,kBACA,YACA,cvEsrMJ,CuErrMI,oCACE,wBvEurMN,CuElrMA,YACE,aACA,kBvEqrMF,CuEnrME,qCAJF,YAKI,sBACA,sBvEsrMF,CACF,CuEprME,eACE,iBvEsrMJ,CuEhrME,0BACE,iBvEmrMJ,CuEjrMI,uCACI,UvEmrMR,CuE/qME,2BACE,yBACA,eACA,UvEirMJ,CuE7qMI,2BACE,aACA,evE+qMN,CuE5qMI,2BACE,eACA,gBACA,evE8qMN,CuE1qME,uBACE,cACA,eACA,evE4qMJ,CuEzqME,6BACE,mBvE2qMJ,CuExqME,4BACE,cvE0qMJ,CuEpqMM,mGACE,SvEyqMR,CuEpqME,4BACE,aACA,cvEsqMJ,CuErqMI,2CACE,SvEuqMN,CuEnqME,4BACE,gBvEqqMJ,CuEnqMI,oCACE,eACA,gBvEqqMN,CuEpqMM,uCACE,SACA,UvEsqMR,CuEjqME,gCACE,kCvEmqMJ,CuEhqME,0DACE,kBACA,avEkqMJ,CuE7pMA,qBACE,4BvEgqMF,CwE7wME,iCACE,UxEixMJ,CwE1wMI,8CACI,WACA,mBxE8wMR,CwE3wMI,gCACI,WxE6wMR,CwE1wMI,iCACE,aACA,sBACA,axE4wMN,CwE1wMM,oCACE,exE4wMR,CwEvwMA,YACE,aACA,axE0wMF,CwExwME,0BAJF,YAKM,sBACA,gBxE2wMJ,CACF,CwEzwME,uDACI,UxE2wMN,CwErwMA,cACE,iBxEywMF,CwEtwMA,iBACE,aACA,iBACA,QxEywMF,CwEvwME,4GALF,iBAQI,gBxEwwMF,CACF,CwEnwMA,aACE,iBxEuwMF,CwErwME,mBACE,mEACA,sBACA,sBACA,afxCO,CeyCP,eACA,YACA,iBACA,aACA,sBACA,kBxEuwMJ,CwEpwMI,8CACE,af9CU,Ce+CV,cxEuwMN,CwErwMI,qCACE,aflDU,CemDV,cxEwwMN,CwEtwMI,yCACE,aftDU,CeuDV,cxEywMN,CwEvwMI,oCACE,af1DU,Ce2DV,cxE0wMN,CwEvwMI,yBACE,yBACA,sExEywMN,CwErwME,6BACE,afrEY,CesEZ,eACA,SACA,kBACA,QACA,SxEuwMJ,CwE/vMA,QACE,kBACA,wCACA,UfxGM,CeyGN,qBACA,eACA,gBACA,iBACA,kBACA,UxEowMF,CwE/vMI,YACE,exEiwMN,CwE/vMM,mBACE,WxEiwMR,CwErwMI,kBACE,kBxEuwMN,CwErwMM,yBACE,WxEuwMR,CwE3wMI,kBACE,kBxE6wMN,CwE3wMM,yBACE,WxE6wMR,CwEjxMI,aACE,kBxEmxMN,CwEjxMM,oBACE,WxEmxMR,CwEvxMI,cACE,kBxEyxMN,CwEvxMM,qBACE,WxEyxMR,CwE7xMI,kBACE,kBxE+xMN,CwE7xMM,yBACE,WxE+xMR,CwEnyMI,iBACE,kBxEqyMN,CwEnyMM,wBACE,WxEqyMR,CwEzyMI,aACE,kBxE2yMN,CwEzyMM,oBACE,WxE2yMR,CwE/yMI,cACE,kBxEizMN,CwE/yMM,qBACE,WxEizMR,CwErzMI,YACE,kBxEuzMN,CwErzMM,mBACE,WxEuzMR,CwE3zMI,YACE,kBxE6zMN,CwE3zMM,mBACE,WxE6zMR,CwEj0MI,mBACE,kBxEm0MN,CwEj0MM,0BACE,WxEm0MR,CwEv0MI,eACE,kBxEy0MN,CwEv0MM,sBACE,YxEy0MR,CwE9zME,uBACE,WxEm0MJ,CwEj0MI,+BACE,gBxEm0MN,CwE/zME,yBACE,UxEi0MJ,CwE3zMA,wBACE,gBACA,qBACA,UACA,exE+zMF,CwE7zME,qCANF,wBAOQ,iBxEg0MN,CACF,CwE9zME,2BACE,eACA,aACA,iBACA,UACA,WACA,UACA,gBACA,gBACA,uBACA,kBxEg0MJ,CwE9zMI,mCACE,gBxEg0MN,CwE9zMI,6BACE,afnJU,CeoJV,qBACA,iBACA,eACA,qBACA,mBACA,gBACA,sBxEg0MN,CwE9zMM,mCACE,kBfnKO,CeoKP,axEg0MR,CwE3zMM,iDACE,4BxE6zMR,CwE1zMM,mDACE,iBxE4zMR,CwEtzMA,oEAEE,eACA,iBACA,YxEyzMF,CwEpzMI,+CACE,uBxEuzMN,CwElzMA,YACE,exEqzMF,CwElzMA,WACE,4BxEqzMF,CwEhzME,WACE,QxEmzMJ,CwEhzME,iBACE,8BxEkzMJ,CwE/yME,gBACE,exEizMJ,CwE/yMI,uBACE,kBxEizMN,CwE5yMA,YACE,kBxE+yMF,CwE9yME,eACE,gBxEgzMJ,CwE5yMA,aACE,iBxE+yMF,CwE5yMA,OACE,gBACA,SxE+yMF,CwE5yMA,mBACE,cACA,iBACA,kBACA,eACA,gBACA,exE+yMF,CwE5yMA,iBACE,axE+yMF,CwE7yME,0BACE,uBxE+yMJ,CwE3yMA,aACE,eACA,oBxE8yMF,CwE5yME,mBACE,yBxE8yMJ,CwE1yMA,cACE,eACA,axE6yMF,CwEzyMI,qCACE,YxE2yMN,CwEtyMA,qCAKI,gCACE,uBxEqyMJ,CwEjyMA,cACE,cxEoyMF,CwEjyMA,iBACE,kBACA,cxEoyMF,CACF,CyEzmNA,4BAEE,qBACA,iBACA,eACA,eACA,gBACA,kBACA,qBACA,yBACA,gBACA,WzE4mNF,CyEzmNE,sDACE,eACA,iBACA,azE4mNJ,CyEzmNE,sDACE,eACA,iBACA,czE4mNJ,CyEzmNE,0DACE,eACA,iBACA,czE4mNJ,CyEtmNE,8DACE,kBhBjBS,CgBkBT,yBzEymNJ,CyEtmNE,sDACE,ehB3BI,CgB4BJ,wBzEymNJ,CyEtmNE,wDACE,kBhB3BS,CgB4BT,azEymNJ,CyEtmNE,oDACE,kBhBzCG,CgB0CH,yBzEymNJ,CyEtmNE,wDACE,ehBpCO,CgBqCP,yBzEymNJ,CyEtlNA,SACE,iBzEylNF,CyEvlNE,iBACE,aACA,uCACA,8BzEylNJ,CyExlNI,uBACI,qBACA,azE0lNR,CyErlNA,gBACE,YACA,eACA,eACA,WACA,iBACA,yBACA,iBzEwlNF,CyEtlNE,sBACE,wBhB1FG,CgB2FH,UzEwlNJ,CyEplNA,iCACE,wBzEulNF,C0EnsNA,SAEE,UACA,2BACA,iB1EqsNF,C0EnsNE,gBACE,UjBSI,CiBRJ,iBACA,gBACA,yBACA,yB1EqsNJ,C0ElsNE,WACE,aACA,SACA,c1EosNJ,C0EjsNE,qBACE,oBjBPQ,CiBQR,6B1EmsNJ,C0EjsNI,4BACE,kB1EmsNN,C0E/rNE,sBACE,oBjBNK,CiBOL,8B1EisNJ,C0E/rNI,6BACE,kB1EisNN,C0E7rNE,oBACE,oBjB3BG,CiB4BH,8B1E+rNJ,C0E7rNI,2BACE,kB1E+rNN,C2E1uNA,gBACI,aACA,mBACA,eACA,a3E6uNJ,C2E1uNA,WXuDE,YWtDc,CXuDd,SWvDqB,CXwDrB,qBPhDM,COiDN,kBACA,mEACA,sBACA,0BW3DA,gBACA,gBACA,gBACA,oBACA,iB3EmvNF,CgE1rNE,iBACE,mEWvDA,oB3EovNJ,C2ElvNI,yBACE,a3EuvNN,C2EpvNI,mBACE,UlBDK,CkBEL,c3EsvNN,C2EnvNI,8BACE,iBACA,iBACA,oCACA,a3EqvNN,C2EhvNE,mBAEE,eAGA,oBACA,mB3EmvNJ,C2E/uNE,gCATE,UlBfO,CkBiBP,iBACA,SAGA,iB3E0vNJ,C2EvvNE,aAEE,eAEA,c3EmvNJ,C2E9uNE,wBACE,SACA,8BACA,sBACA,iBACA,OACA,kBACA,QACA,iBACA,a3EgvNJ,C2E9uNI,0BACE,alB9CO,CkB+CP,c3EgvNN,C2E7uNE,+BACE,iB3E+uNJ,C4EvzNA,uBACI,WACA,a5E0zNJ,C4ErzNE,8DACE,mCACA,0BACA,kBACA,UnBWO,CmBVP,gB5EyzNJ,C4ErzNI,0DACE,Q5EwzNN,C4EtzNI,4DACE,4B5EyzNN,C4ErzNE,8CACE,a5EwzNJ,C4ElzNA,8EACE,qB5EqzNF,C4ElzNA,oBACE,wBnBvBW,CmBwBX,0BACA,anBrBS,CmBsBT,eACA,gB5EqzNF,C4ElzNA,wDAEE,yBACA,kB5EqzNF,C4ElzNA,wGAIE,yB5EqzNF,C4ElzNA,oCACE,W5EqzNF,C4ElzNA,2DACE,iB5EqzNF,C4ElzNA,uCACE,iE5EqzNF,C4ElzNA,aACI,aACA,gBACA,iBACA,qBACA,kB5EqzNJ,C4EnzNI,uBACE,gB5EqzNN,C4EhzNA,cACE,a5EmzNF,C4E/yNA,0BAEE,kBACA,SACA,YAEA,anBxDc,CmByDd,6BACA,YACA,c5EizNF,C4EhzNE,sCACE,a5EmzNJ,C4EhzNA,aACE,O5EmzNF,C4EhzNA,8CACE,a5EmzNF,C4ElzNE,0DACE,a5EozNJ,C4EhzNA,+BACE,kB5EmzNF,C4EhzNA,sCACE,YACA,c5EmzNF,C4E/yNA,gBACI,e5EkzNJ,C4E/yNA,wBACE,cACA,iB5EkzNF,C4E7yNA,aACE,iB5EizNF,C4E7yNA,YACE,SACA,+FnB1IU,CmB2IV,a5EizNF,C4EhzNE,eACE,SACA,qCnB7IQ,CmB8IR,cACA,gB5EkzNJ,C4E3yNA,KAAO,U5EizNP,C4E/yNA,cACE,KAAO,U5EozNP,C4EnzNA,KAAO,U5EwzNP,C4EvzNA,KAAO,U5E4zNP,C4E3zNA,KAAO,a5Eg0NP,C4E/zNA,KAAO,a5Eo0NP,C4El0NA,eAAmB,U5Ew0NnB,C4Ev0NA,KAAO,U5E20NP,C4E10NA,KAAO,U5E+0NP,C4E90NA,KAAO,U5Em1NP,C4El1NA,UAAa,U5Eu1Nb,C4Et1NA,KAAO,a5E21NP,CAGF,C4E11NA,yBACE,KAAO,U5E81NP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ACF,CuF7gPM,gEACE,YACA,aACA,kBvF+gPR,CuF1gPE,8CACE,YvF4gPJ,CuF1gPI,0BAHF,8CAII,evF6gPJ,CACF,CwF9lPA,UACE,SxFimPF,CwF9lPA,gBACE,SxFimPF,CwF9lPA,qBACE,iBxFimPF,CwF9lPA,qCACE,YACA,WACA,cACA,gBACA,kBACA,YACA,cACA,QACA,QxFimPF,CwF9lPA,qGACE,YACE,UxFimPF,CwF5lPA,gCACE,iBACA,kBACA,WACA,cACA,UxFgmPF,CARF,CwFplPA,qGACE,gCACE,cACA,eACA,WACA,cACA,UxF+lPF,CACF,CwF5lPA,sEAEE,YACE,e,MxF+lPF,CwF5lPA,qCACE,YACA,WACA,cACA,gBACA,kBACA,YACA,cACA,QACA,QxF+lPF,CACF,CwF5lPA,sEAEE,YACE,e,MxF+lPF,CwF5lPA,qCACE,YACA,WACA,cACA,gBACA,kBACA,YACA,cACA,QACA,QxF+lPF,CACF,CwF1lPE,4BACE,mDACA,yCxF4lPJ,CwFzlPE,4BACE,mBACA,iBxF2lPJ,CwFvlPI,iCACE,SACA,gBxFylPN,CwFtlPI,gCACE,QxFwlPN,CwFplPE,kCACE,eACA,UACA,WACA,YACA,UACA,sBACA,iBxFslPJ,CwFplPI,oCACE,cACA,oBxFslPN,CwFnlPI,4CACE,cxFqlPN,CwFnlPM,2DACE,cACA,aACA,iBACA,wBxFqlPR,CwFnlPQ,iEACE,mBACA,axFqlPV,CwF/kPM,iEACE,cACA,aACA,gBxFilPR,CwF/kPQ,uEACE,mBACA,axFilPV,CwF3kPE,mCACE,cACA,kBACA,UACA,iBxF6kPJ,CwF1kPE,kCACE,aACA,qBxF4kPJ,CwFzkPE,qCACE,kBxF2kPJ,CwFxkPE,gCACE,kBxF0kPJ,CwFvkPE,wCACE,QxFykPJ,CwFtkPE,qCACE,kBACA,SACA,wB/BlKG,C+BmKH,axFwkPJ,CwFrkPE,gCACE,yBxFukPJ,CwFpkPE,0BACE,YxFskPJ,CwFnkPE,qCACE,cACA,6BACA,SACA,kBACA,kBACA,qBACA,kBxFqkPJ,CwFlkPE,2CACE,cACA,qBACA,qBA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","sources":["./src/styles/2-modules/_details.scss","./src/styles.scss","./node_modules/@angular/material/form-field/_form-field-theme.scss","./node_modules/@angular/material/form-field/_form-field-legacy-theme.scss","./node_modules/@angular/material/form-field/_form-field-fill-theme.scss","./node_modules/@angular/material/form-field/_form-field-outline-theme.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/badge/_badge-theme.scss","./node_modules/@angular/material/button-toggle/_button-toggle-theme.scss","./node_modules/@angular/material/expansion/_expansion-theme.scss","./node_modules/@angular/material/paginator/_paginator-theme.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/@angular/material/tree/_tree-theme.scss","./node_modules/@angular/material/core/typography/_typography.scss","./node_modules/@angular/material/core/typography/_typography-utils.scss","./node_modules/@angular/material/bottom-sheet/_bottom-sheet-theme.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/card/_card-theme.scss","./node_modules/@angular/material/checkbox/_checkbox-theme.scss","./node_modules/@angular/material/chips/_chips-theme.scss","./node_modules/@angular/material/table/_table-theme.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/dialog/_dialog-theme.scss","./node_modules/@angular/material/grid-list/_grid-list-theme.scss","./node_modules/@angular/material/core/style/_list-common.scss","./node_modules/@angular/material/input/_input-theme.scss","./node_modules/@angular/material/menu/_menu-theme.scss","./node_modules/@angular/material/select/_select-theme.scss","./node_modules/@angular/material/slider/_slider-theme.scss","./node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./node_modules/@angular/material/tooltip/_tooltip-theme.scss","./node_modules/@angular/material/list/_list-theme.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@angular/material/core/option/_optgroup-theme.scss","./node_modules/@angular/material/snack-bar/_snack-bar-theme.scss","./node_modules/@angular/material/core/ripple/_ripple.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/material/core/_core.scss","./node_modules/@angular/material/core/ripple/_ripple-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@angular/material/core/style/_elevation.scss","./node_modules/@angular/material/autocomplete/_autocomplete-theme.scss","./node_modules/@angular/material/divider/_divider-theme.scss","./node_modules/@angular/material/expansion/_expansion-mixins.scss","./node_modules/@angular/material/core/style/_form-common.scss","./node_modules/@angular/material/form-field/_form-field-standard-theme.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/core/style/_vendor-prefixes.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/radio/_radio-theme.scss","./node_modules/@angular/material/sidenav/_sidenav-theme.scss","./node_modules/@angular/material/sort/_sort-theme.scss","./src/styles/0-base/_typography.scss","./src/styles/_constants.scss","./src/styles/1-layouts/_api-page.scss","./src/styles/1-layouts/_content-layout.scss","./src/styles/1-layouts/_doc-viewer.scss","./src/styles/1-layouts/_footer.scss","./src/styles/1-layouts/_layout-global.scss","./src/styles/1-layouts/_marketing-layout.scss","./src/styles/_mixins.scss","./src/styles/1-layouts/_not-found.scss","./src/styles/1-layouts/_sidenav.scss","./src/styles/1-layouts/_table-of-contents.scss","./src/styles/1-layouts/_top-menu.scss","./src/styles/1-layouts/_print-layout.scss","./src/styles/2-modules/_alert.scss","./src/styles/2-modules/_api-pages.scss","./src/styles/2-modules/_api-list.scss","./src/styles/2-modules/_buttons.scss","./src/styles/2-modules/_callout.scss","./src/styles/2-modules/_card.scss","./src/styles/2-modules/_code.scss","./src/styles/2-modules/_contribute.scss","./src/styles/2-modules/_contributor.scss","./src/styles/2-modules/_edit-page-cta.scss","./src/styles/2-modules/_features.scss","./src/styles/2-modules/_filetree.scss","./src/styles/2-modules/_heading-anchors.scss","./src/styles/2-modules/_hr.scss","./src/styles/2-modules/_images.scss","./src/styles/2-modules/_progress-bar.scss","./src/styles/2-modules/_table.scss","./src/styles/2-modules/_presskit.scss","./src/styles/2-modules/_resources.scss","./src/styles/2-modules/_scrollbar.scss","./src/styles/2-modules/_search-results.scss","./src/styles/2-modules/_subsection.scss","./src/styles/2-modules/_toc.scss","./src/styles/2-modules/_select-menu.scss","./src/styles/2-modules/_deploy-theme.scss","./src/styles/2-modules/_notification.scss","./src/styles/2-modules/_label.scss","./src/styles/_translator.scss"],"sourcesContent":["/*\n * General styling to make detail/summary tags look a bit more material\n * To get the best out of it you should structure your usage like this:\n *\n * ```\n * <details>\n *   <summary>Some title</summary>\n *   <div class=\"details-content\">\n *     Some content\n *   </div>\n *  </details>\n *\n */\n\nsummary {\n  cursor: pointer;\n  font-size: 16px;\n  position: relative;\n  padding: 16px 24px;\n  color: $black;\n  height: 16px;\n  display: block; // Remove the built in details marker in FF\n\n  &::-webkit-details-marker {\n    display: none; // Remove the built in details marker in webkit\n  }\n\n  &::before {\n    content: '\\E5CE'; // See https://material.io/icons/#ic_expand_less\n    font-family: 'Material Icons';\n    font-size: 24px;\n    -webkit-font-smoothing: antialiased;\n    @include rotate(0deg); // We will rotate 180 degrees when details is open\n    float: right;\n  }\n}\n\ndetails {\n  box-shadow: 0 1px 4px 0 rgba($black, 0.37);\n\n  .detail-contents {\n    padding: 16px 24px;\n  }\n\n  &[open] > summary::before {\n    @include rotate(180deg); // Rotate the icon\n  }\n}\n","/* You can add global styles to this file, and also import other style files */\n@import './styles/rxjs-theme';\n@import './styles/main.scss';\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/private';\n\n@use './form-field-fill-theme.scss';\n@use './form-field-legacy-theme.scss';\n@use './form-field-outline-theme.scss';\n@use './form-field-standard-theme.scss';\n\n// Color styles that apply to all appearances of the form-field.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color:\n    theming.get-color-from-palette($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: theming.get-color-from-palette($primary, text);\n  $required-label-color: theming.get-color-from-palette($accent, text);\n\n  // Underline colors.\n  $underline-color-base:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: theming.get-color-from-palette($accent, text);\n  $underline-color-warn: theming.get-color-from-palette($warn, text);\n  $underline-focused-color: theming.get-color-from-palette($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include form-field-legacy-theme.legacy-color($config);\n  @include form-field-standard-theme.standard-color($config);\n  @include form-field-fill-theme.fill-color($config);\n  @include form-field-outline-theme.outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $dedupe)\n             scale($font-scale);\n  width: private.private-div(100%, $font-scale) + $dedupe;\n\n  $dedupe: $dedupe + 0.00001 !global;\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top: $subscript-font-scale *\n      typography-utils.private-coerce-unitless-to-em($line-height);\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: private.private-div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include typography-utils.typography-level($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: typography-utils.private-coerce-unitless-to-em($line-height);\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{private.private-div($wrapper-padding-bottom, $subscript-font-scale)});\n  }\n\n  @include form-field-legacy-theme.legacy-typography($config);\n  @include form-field-standard-theme.standard-typography($config);\n  @include form-field-fill-theme.fill-typography($config);\n  @include form-field-outline-theme.outline-typography($config);\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  @include form-field-legacy-theme.private-form-field-legacy-density($density-scale);\n  @include form-field-standard-theme.private-form-field-standard-density($density-scale);\n  @include form-field-fill-theme.private-form-field-fill-density($density-scale);\n  @include form-field-outline-theme.private-form-field-outline-density($density-scale);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin legacy-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-color: theming.get-color-from-palette($foreground, secondary-text);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $legacy-dedupe)\n                  scale($font-scale);\n\n  width: private.private-div(100%, $font-scale) + $legacy-dedupe;\n\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n@mixin legacy-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: private.private-div($line-height - 1, 2);\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: private.private-div(0.5em, $subscript-font-scale) - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{private.private-div($wrapper-padding-bottom, $subscript-font-scale)});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n@mixin private-form-field-legacy-density($config-or-theme) {}\n\n@mixin legacy-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include legacy-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include legacy-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/private';\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin fill-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $fill-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $fill-dedupe)\n             scale($font-scale);\n  width: private.private-div(100%, $font-scale) + $fill-dedupe;\n\n  $fill-dedupe: $fill-dedupe + 0.00001 !global;\n}\n\n@mixin fill-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin private-form-field-fill-density($config-or-theme) {}\n\n@mixin fill-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include fill-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include fill-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin outline-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n  $outline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: theming.get-color-from-palette($primary);\n  $outline-color-accent: theming.get-color-from-palette($accent);\n  $outline-color-warn: theming.get-color-from-palette($warn);\n  $outline-color-disabled:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $outline-dedupe)\n  scale($font-scale);\n  width: private.private-div(100%, $font-scale) + $outline-dedupe;\n\n  $outline-dedupe: $outline-dedupe + 0.00001 !global;\n}\n\n@mixin outline-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: private.private-div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin private-form-field-outline-density($config-or-theme) {}\n\n@mixin outline-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include outline-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include outline-typography($typography);\n    }\n  }\n}\n\n","// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n","// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/private';\n@use '../../cdk/a11y';\n\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: private.private-div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: private.private-div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: private.private-div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: private.private-div(-$size, 2);\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: private.private-div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: private.private-div(-$size, 2);\n      }\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $primary: map.get($config, primary);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-badge-content {\n    color: theming.get-color-from-palette($primary, default-contrast);\n    background: theming.get-color-from-palette($primary);\n\n    @include a11y.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: theming.get-color-from-palette($accent);\n      color: theming.get-color-from-palette($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: theming.get-color-from-palette($warn, default-contrast);\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: theming.get-color-from-palette($background, 'background');\n      $badge-color: theming.get-color-from-palette($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (meta.type-of($badge-color) == color and meta.type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: color.mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-badge-content {\n    font-weight: $font-weight;\n    font-size: $font-size;\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $font-size * 2;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './button-toggle-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $divider-color: theming.get-color-from-palette($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include private.private-theme-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: theming.get-color-from-palette($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: theming.get-color-from-palette($foreground, text);\n    background: theming.get-color-from-palette($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: theming.get-color-from-palette($background, selected-button);\n    color: theming.get-color-from-palette($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n    background-color: theming.get-color-from-palette($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: theming.get-color-from-palette($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: theming.get-color-from-palette($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button-toggle {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $standard-height: compatibility.private-density-prop-value(\n      button-toggle-variables.$standard-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './expansion-variables';\n@use './expansion-mixins';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-expansion-panel {\n    @include private.private-theme-overridable-elevation(2, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  @include expansion-mixins.private-expansion-focus {\n    background: theming.get-color-from-palette($background, hover);\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: theming.get-color-from-palette($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-expansion-panel-header {\n    font: {\n      family: typography-utils.font-family($config, subheading-1);\n      size: typography-utils.font-size($config, subheading-1);\n      weight: typography-utils.font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $expanded-height: compatibility.private-density-prop-value(\n        expansion-variables.$header-density-config, $density-scale, expanded-height);\n  $collapsed-height: compatibility.private-density-prop-value(\n      expansion-variables.$header-density-config, $density-scale, collapsed-height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-expansion') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './paginator-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-paginator {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n    border-right: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: theming.get-color-from-palette($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: typography-utils.font-family($config, caption);\n      size: typography-utils.font-size($config, caption);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(paginator-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-paginator') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use '../core/style/private';\n@use './stepper-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover:not([aria-disabled]),\n    &:hover[aria-disabled='false'] {\n      background-color: theming.get-color-from-palette($background, hover);\n    }\n\n    &:hover[aria-disabled='true'] {\n      cursor: default;\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: theming.get-color-from-palette($foreground, secondary-text);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: theming.get-color-from-palette($primary);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($accent);\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n    }\n\n    &.mat-warn {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($warn);\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: theming.get-color-from-palette($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: typography-utils.font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: typography-utils.font-size($config, body-2);\n      weight: typography-utils.font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(stepper-variables.$density-config,\n    $density-scale, height);\n  $vertical-padding: private.private-div($height - stepper-variables.$label-header-height, 2);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header {\n      padding: $vertical-padding stepper-variables.$side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: stepper-variables.$line-gap - $vertical-padding;\n      bottom: stepper-variables.$line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + private.private-div(stepper-variables.$label-header-height, 2);\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + private.private-div(stepper-variables.$label-header-height, 2);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/style/variables';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './toolbar-variables';\n\n@mixin _height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  background: theming.get-color-from-palette($palette);\n  color: theming.get-color-from-palette($palette, default-contrast);\n}\n\n@mixin _form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-toolbar {\n    background: theming.get-color-from-palette($background, app-bar);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    @include _form-field-overrides;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0;\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height-desktop: compatibility.private-density-prop-value(\n      toolbar-variables.$desktop-density-config, $density-scale, height);\n  $height-mobile: compatibility.private-density-prop-value(\n      toolbar-variables.$mobile-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media (variables.$xsmall) {\n      @include _height($height-mobile);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './tree-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-tree {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tree {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: typography-utils.font-weight($config, body-1);\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(tree-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use 'typography-utils';\n@use '../theming/theming';\n\n/// Defines a typography level from the Material Design spec.\n/// @param {String} $font-size The font-size for this level.\n/// @param {String | Number} $line-height The line-height for this level.\n/// @param {String | Number} $font-weight The font-weight for this level.\n/// @param {String} $font-family The font-family for this level.\n/// @param {String} $letter-spacing The letter-spacing for this level.\n/// @returns {Map} A map representing the definition of this typpographic level.\n@function define-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n/// Defines a collection of typography levels to configure typography for an application.\n/// Any level not specified defaults to the values defined in the Material Design specification:\n/// https://material.io/guidelines/style/typography.html.\n///\n/// Note that the Material Design specification does not describe explicit letter-spacing values.\n/// The values here come from reverse engineering the Material Design examples.\n/// @param {String} $font-family Default font-family for levels that don't specify font-family.\n/// @param {Map} $display-4 Configuration for the \"display-4\" typographic level.\n/// @param {Map} $display-3 Configuration for the \"display-3\" typographic level.\n/// @param {Map} $display-2 Configuration for the \"display-2\" typographic level.\n/// @param {Map} $display-1 Configuration for the \"display-1\" typographic level.\n/// @param {Map} $headline Configuration for the \"headline\" typographic level.\n/// @param {Map} $title Configuration for the \"title\" typographic level.\n/// @param {Map} $subheading-2 Configuration for the \"subheading-2\" typographic level.\n/// @param {Map} $subheading-1 Configuration for the \"subheading-1\" typographic level.\n/// @param {Map} $body-2 Configuration for the \"body-2\" typographic level.\n/// @param {Map} $body-1 Configuration for the \"body-1\" typographic level.\n/// @param {Map} $caption Configuration for the \"caption\" typographic level.\n/// @param {Map} $button Configuration for the \"button\" typographic level.\n/// @param {Map} $input Configuration for the \"input\" typographic level.\n/// @returns {Map} A typography config for the application.\n@function define-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     define-typography-level(34px, 40px, 400),\n  $headline:      define-typography-level(24px, 32px, 400),\n  $title:         define-typography-level(20px, 32px, 500),\n  $subheading-2:  define-typography-level(16px, 28px, 400),\n  $subheading-1:  define-typography-level(15px, 24px, 400),\n  $body-2:        define-typography-level(14px, 24px, 500),\n  $body-1:        define-typography-level(14px, 20px, 400),\n  $caption:       define-typography-level(12px, 20px, 400),\n  $button:        define-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         define-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map.get($level, font-family) == null {\n      $new-level: map.merge($level, (font-family: $font-family));\n      $config: map.merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map.merge($config, (font-family: $font-family));\n}\n\n// Whether a config is for the Material Design 2018 typography system.\n@function private-typography-is-2018-config($config) {\n  @return map.get($config, headline-1) != null;\n}\n\n// Whether a config is for the Material Design 2014 typography system.\n@function private-typography-is-2014-config($config) {\n  @return map.get($config, headline) != null;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2014 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n//\n// Components using this function should be migrated to normalize to the 2018 style config instead.\n// New components should not use this function.\n@function private-typography-to-2014-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2014-config($config) {\n    $args: (\n        display-4: map.get($config, headline-1),\n        display-3: map.get($config, headline-2),\n        display-2: map.get($config, headline-3),\n        display-1: map.get($config, headline-4),\n        headline: map.get($config, headline-5),\n        title: map.get($config, headline-6),\n        subheading-2: map.get($config, subtitle-1),\n        subheading-1: map.get($config, subtitle-2),\n        body-2: map.get($config, body-1),\n        body-1: map.get($config, body-2),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n    );\n    $non-null-args: ();\n    @each $key, $value in $args {\n      @if $value != null {\n        $non-null-args: map.merge($non-null-args, ($key: $value));\n      }\n    }\n    @return define-typography-config($non-null-args...);\n  }\n  @return $config;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2018 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function private-typography-to-2018-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2018-config($config) {\n    @return (\n        headline-1: map.get($config, display-4),\n        headline-2: map.get($config, display-3),\n        headline-3: map.get($config, display-2),\n        headline-4: map.get($config, display-1),\n        headline-5: map.get($config, headline),\n        headline-6: map.get($config, title),\n        subtitle-1: map.get($config, subheading-2),\n        subtitle-2: map.get($config, subheading-1),\n        body-1: map.get($config, body-2),\n        body-2: map.get($config, body-1),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n        overline: if(map.get($config, overline), map.get($config, overline),\n            define-typography-level(12px, 32px, 500)\n        )\n    );\n  }\n  @return $config;\n}\n\n// stylelint-disable material/theme-mixin-api\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n@mixin typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\n  $config: private-typography-to-2014-config(theming.get-typography-config($config-or-theme));\n\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include typography-utils.typography-level($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include typography-utils.typography-level($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include typography-utils.typography-level($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.83),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.67),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include typography-utils.typography-level($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include typography-utils.typography-level($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include typography-utils.typography-level($config, caption);\n  }\n\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include typography-utils.typography-level($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include typography-utils.typography-level($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include typography-utils.typography-level($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include typography-utils.typography-level($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n// stylelint-enable material/theme-mixin-api\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n@use '../style/private';\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map.get(map.get($config, $level), $name);\n}\n\n/// Gets the font size for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n/// Gets the line height for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n/// Gets the font weight for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n/// Gets the letter spacing for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n/// Gets the font-family from a typography config and removes the quotes around it.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-family($config, $level: null) {\n  $font-family: map.get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(meta.type-of($font-family) == string, string.unquote($font-family), $font-family);\n}\n\n/// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n/// the individual properties if a value that isn't allowed in the shorthand is passed in.\n/// @param {String} $font-size The font-size value.\n/// @param {String | Number} $font-weight The font-weight value.\n/// @param {String | Number} $line-height The line-height value.\n/// @param {String} $font-family The font-family value.\n/// @returns {String} The `font` shorthand value combining the given parts.\n@mixin font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use `list.slash` for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight private.private-slash($font-size, $line-height) $font-family;\n  }\n}\n\n/// Emits CSS styles for the given typography level.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@mixin typography-level($config, $level) {\n  $font-size: font-size($config, $level);\n  $font-weight: font-weight($config, $level);\n  $line-height: line-height($config, $level);\n  $font-family: font-family($config, $level);\n\n  @include font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: letter-spacing($config, $level);\n}\n\n/// Coerce a value to `em` if it is a unitless number, otherwise returns\n/// the value provided.\n@function private-coerce-unitless-to-em($value) {\n  @return if(math.is-unitless($value), 1em * $value, $value);\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include private.private-theme-elevation(16, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-bottom-sheet-container {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$_ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _focus-overlay-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $hue, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _ripple-color($theme, $hue, $opacity: $_ripple-opacity) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _theme-property($theme, $property, $hue) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: theming.get-color-from-palette($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: theming.get-color-from-palette($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: theming.get-color-from-palette($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: theming.get-color-from-palette($palette, disabled-button);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _theme-property($config, 'color', text);\n    @include _focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map.get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: theming.get-color-from-palette($foreground, text);\n    background-color: theming.get-color-from-palette($background, raised-button);\n\n    @include _theme-property($config, 'color', default-contrast);\n    @include _theme-property($config, 'background-color', default);\n    @include _ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include private.private-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include private.private-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include private.private-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-card {\n    @include private.private-theme-overridable-elevation(1, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-card {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: typography-utils.font-size($config, headline);\n      weight: typography-utils.font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: typography-utils.font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: theming.get-color-from-palette($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map.get(map.get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-checkbox {\n    font-family: typography-utils.font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: typography-utils.line-height($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$chip-remove-font-size: 18px;\n\n@mixin _element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  @include _element-color(theming.get-color-from-palette($palette, default-contrast),\n    theming.get-color-from-palette($palette));\n\n  .mat-ripple-element {\n    @include _ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $unselected-background: theming.get-color-from-palette($background, unselected-chip);\n  $unselected-foreground: theming.get-color-from-palette($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include private.private-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map.get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-chip {\n    font-size: typography-utils.font-size($config, body-2);\n    font-weight: typography-utils.font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-table {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-table {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: typography-utils.font-size($config, caption);\n    font-weight: typography-utils.font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _color($palette) {\n  @include date-range-colors(\n    theming.get-color-from-palette($palette, default, $range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: theming.get-color-from-palette($palette);\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: theming.get-color-from-palette($palette);\n\n    @if (meta.type-of($background) == color) {\n      background-color: color.adjust($background, $alpha: -$selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $selected-today-box-shadow-width\n                theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content {\n      @include _unselected-cell {\n        background-color: theming.get-color-from-palette($palette, 0.3);\n      }\n    }\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    fill: theming.get-color-from-palette($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: theming.get-color-from-palette($foreground, icon);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-calendar-table-header,\n  .mat-calendar-body-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: theming.get-color-from-palette($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: theming.get-color-from-palette($foreground, divider);\n\n    @if meta.type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, math.min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _unselected-cell {\n      $color: theming.get-color-from-palette($foreground, hint-text);\n\n      @if (meta.type-of($color) == color) {\n        border-color: color.adjust($color, $alpha: -$today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _color(map.get($config, primary));\n\n  .mat-datepicker-content {\n    @include private.private-theme-elevation(4, $config);\n    background-color: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-accent {\n      @include _color(map.get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _color(map.get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include private.private-theme-elevation(24, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: theming.get-color-from-palette(map.get($config, primary), text);\n\n    &.mat-accent {\n      color: theming.get-color-from-palette(map.get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette(map.get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-calendar {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $calendar-weekday-table-font-size;\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: color.adjust($overlap-color, $lightness: -30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-dialog-container {\n    @include private.private-theme-elevation(24, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-dialog-title {\n    @include typography-utils.typography-level($config, title);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin color($config-or-theme) {}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include list-common.base(typography-utils.font-size($config, caption));\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin base($secondary-font-size) {\n  .mat-line {\n    @include truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin wrapper-base() {\n  @include normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/vendor-prefixes';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: theming.get-color-from-palette($primary, text);\n\n    @include vendor-prefixes.input-placeholder {\n      color: form-common.private-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map.get($config, is-dark)) {\n      option {\n        color: palette.$dark-primary-text;\n      }\n\n      option:disabled {\n        color: palette.$dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: theming.get-color-from-palette($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($warn, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: private.private-div($line-height - 1, 2);\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: typography-utils.private-coerce-unitless-to-em(-$line-spacing);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-input') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-menu-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: theming.get-color-from-palette($foreground, 'text');\n\n    &[disabled] {\n      &,\n      .mat-menu-submenu-icon,\n      .mat-icon-no-color {\n        color: theming.get-color-from-palette($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-submenu-icon {\n    color: theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-menu-item {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-menu') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-select-value {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: form-common.private-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: theming.get-color-from-palette($background, card);\n    @include private.private-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: theming.get-color-from-palette($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: theming.get-color-from-palette($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: theming.get-color-from-palette($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  .mat-select {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: typography-utils.private-coerce-unitless-to-em($line-height);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: theming.get-color-from-palette($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $mat-slider-off-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-off-focused-color: theming.get-color-from-palette($foreground, slider-off-active);\n  $mat-slider-disabled-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color:\n    theming.get-color-from-palette($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color:\n    theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color:\n    theming.get-color-from-palette($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _inner-content-theme($warn);\n  }\n\n  .mat-slider:hover,\n  .mat-slider.cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: theming.get-color-from-palette($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (meta.type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slider-thumb-label-text {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, caption);\n      weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _checked-color($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: theming.get-color-from-palette($foreground, disabled);\n  $ripple-unchecked-color: theming.get-color-from-palette($foreground, base);\n\n  .mat-slide-toggle {\n    @include _checked-color($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _checked-color($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _checked-color($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include private.private-theme-elevation(1, $config);\n    background-color: theming.get-color-from-palette(palette.$grey-palette, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slide-toggle-content {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $header-border: 1px solid theming.get-color-from-palette($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] > .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _label-focus-color($color);\n        @include _ink-bar-color($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          > .mat-tab-header, > .mat-tab-link-container {\n            @include _ink-bar-color($color, default-contrast);\n          }\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _label-focus-color($color);\n        @include _tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _ink-bar-color($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: theming.get-color-from-palette($color, $hue);\n  }\n}\n\n@mixin _label-focus-color($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: theming.get-color-from-palette($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _tabs-background($background-color) {\n  // Note that these selectors target direct descendants so\n  // that the styles don't apply to any nested tab groups.\n\n  // Set background color for the tab group\n  > .mat-tab-header, > .mat-tab-link-container, > .mat-tab-header-pagination {\n    background-color: theming.get-color-from-palette($background-color);\n  }\n\n  // Set labels to contrast against background\n  > .mat-tab-header .mat-tab-label, > .mat-tab-link-container .mat-tab-link {\n    color: theming.get-color-from-palette($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  > .mat-tab-header .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n  > .mat-tab-link-container .mat-focus-indicator::before,\n  > .mat-tab-header .mat-focus-indicator::before {\n    border-color: theming.get-color-from-palette($background-color, default-contrast);\n  }\n\n  > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  > .mat-tab-header .mat-ripple-element,\n  > .mat-tab-link-container .mat-ripple-element,\n  > .mat-tab-header-pagination .mat-ripple-element {\n    background-color: theming.get-color-from-palette($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tab-group {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/private';\n\n$target-height: 22px;\n$font-size: 10px;\n$vertical-padding: private.private-div($target-height - $font-size, 2);\n\n$handset-target-height: 30px;\n$handset-font-size: 14px;\n$handset-vertical-padding:\n    private.private-div($handset-target-height - $handset-font-size, 2);\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n\n  .mat-tooltip {\n    background: theming.get-color-from-palette($background, tooltip, 0.9);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tooltip {\n    font-family: typography-utils.font-family($config);\n    font-size: $font-size;\n    padding-top: $vertical-padding;\n    padding-bottom: $vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $handset-font-size;\n    padding-top: $handset-vertical-padding;\n    padding-bottom: $handset-vertical-padding;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-list-option {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-subheader {\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: theming.get-color-from-palette($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  $font-family: typography-utils.font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: typography-utils.font-family($config, body-2);\n      font-size: typography-utils.font-size($config, body-2);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: typography-utils.font-size($config, caption);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-option {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    &.mat-active {\n      background: theming.get-color-from-palette($background, hover);\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($warn, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-option {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, hint-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-optgroup-label {\n    @include typography-utils.typography-level($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n@use '../core/theming/palette';\n@use '../core/style/private';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $accent: map.get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, palette.$dark-primary-text, palette.$light-secondary-text);\n    background: if($is-dark-theme, map.get(palette.$grey-palette, 50), #323232);\n\n    @include private.private-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, theming.get-color-from-palette($accent, text));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-simple-snackbar {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../../../cdk/a11y';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include a11y.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assitive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n","@use '../../cdk/overlay';\n@use '../../cdk/a11y';\n@use '../../cdk/text-field';\n\n// Core styles that can be used to apply material design treatments to any element.\n@use './ripple/ripple';\n@use './focus-indicators/focus-indicators';\n@use './typography/all-typography';\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin core($typography-config: null) {\n  @include all-typography.all-component-typographies($typography-config);\n  @include ripple.ripple();\n  @include a11y.a11y-visually-hidden();\n  @include overlay.overlay();\n  @include text-field.text-field-autosize();\n  @include text-field.text-field-autofill();\n\n  @include focus-indicators.private-strong-focus-indicators-positioning();\n  @include _mdc-core();\n}\n\n// Mixin that renders all of the core MDC styles. Private mixin included with `mat-core`.\n@mixin _mdc-core() {\n  @include _mdc-strong-focus-indicators-positioning();\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `_mat-mdc-core`.\n@mixin _mdc-strong-focus-indicators-positioning() {\n  .mat-mdc-focus-indicator {\n    position: relative;\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../theming/theming';\n\n// Colors for the ripple elements.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $foreground-base: map.get($foreground, base);\n  $color-opacity: 0.1;\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (meta.type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $color-opacity;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: theming.get-color-from-palette(map.get($config, foreground), secondary-text);\n\n    &::after {\n      color: theming.get-color-from-palette($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'theming/theming';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{elevation.$prefix}#{$zValue} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include ripple-theme.theme($theme);\n    @include option-theme.theme($theme);\n    @include optgroup-theme.theme($theme);\n    @include pseudo-checkbox-theme.theme($theme);\n\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'variables';\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: variables.$fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin elevation($zValue, $color: $color, $opacity: $opacity) {\n  @if meta.type-of($zValue) != number or not math.is-unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map.get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map.get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map.get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin overridable-elevation(\n    $zValue,\n    $color: $color,\n    $opacity: $opacity) {\n  &:not([class*='#{$prefix}']) {\n    @include elevation($zValue, $color, $opacity);\n  }\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function private-transition-property-value(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin elevation-transition(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  transition: private-transition-property-value($duration, $easing);\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-autocomplete-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: theming.get-color-from-palette($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: theming.get-color-from-palette($foreground, text);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-divider {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@mixin private-expansion-focus {\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        @content;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin private-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function private-control-placeholder-color($config) {\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  @return theming.get-color-from-palette($foreground, secondary-text,\n    if($is-dark-theme, 0.5, 0.42));\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin standard-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin standard-typography($config-or-theme) {}\n\n@mixin private-form-field-standard-density($config-or-theme) {}\n\n@mixin standard-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include standard-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include standard-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: theming.get-color-from-palette($primary, text);\n    }\n\n    &.mat-accent {\n      color: theming.get-color-from-palette($accent, text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","// stylelint-disable material/no-prefixes\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin position-sticky($important: false) {\n  position: -webkit-sticky #{if($important, '!important', '')};\n  position: sticky #{if($important, '!important', '')};\n}\n\n@mixin private-color-adjust($value) {\n  -webkit-print-color-adjust: $value;\n  color-adjust: $value;\n}\n\n@mixin private-background-clip($value) {\n  -webkit-background-clip: $value;\n  background-clip: $value;\n}\n// stylelint-enable\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use '../core/theming/theming';\n\n// Approximates the correct buffer color by using a mix between the theme color\n// and the theme's background color.\n@function _get-buffer-color($theme, $background) {\n  $theme-color: theming.get-color-from-palette($theme);\n  // Return fallback color if the theme uses variables to define colors.\n  @if (meta.type-of($theme-color) != 'color' or meta.type-of($background) != 'color') {\n    @return theming.get-color-from-palette($theme, lighter);\n  }\n  @return color.mix($theme-color, $background, $weight: 25%);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get(map.get($config, background), background);\n\n  .mat-progress-bar-background {\n    fill: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: theming.get-color-from-palette($palette);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _color($primary);\n    }\n\n    &.mat-accent {\n      @include _color($accent);\n    }\n\n    &.mat-warn {\n      @include _color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: theming.get-color-from-palette($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map.get($foreground, base);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-radio-button {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $drawer-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-container-background-color:  theming.get-color-from-palette($background, background);\n  $drawer-push-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-side-border: solid 1px theming.get-color-from-palette($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include private.private-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: theming.get-color-from-palette($background, card, $opacity);\n\n    @if (meta.type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: color.invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: theming.get-color-from-palette($background, 'card');\n    $text-color: theming.get-color-from-palette($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (meta.type-of($table-background) == color and meta.type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: color.mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","body {\n  font-family: $main-font;\n  margin: 0;\n  color: $darkgray;\n  font-size: 14px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nh1 {\n  display: inline-block;\n  font-size: 24px;\n  font-weight: 500;\n  margin: 8px 0px;\n\n  @media screen and (max-width: 600px) {\n    margin-top: 0;\n  }\n}\n\nh2 {\n  font-size: 22px;\n  font-weight: 500;\n  margin: 32px 0px 24px;\n  clear: both;\n}\n\nh3 {\n  font-size: 20px;\n  font-weight: 400;\n  margin: 24px 0px;\n  clear: both;\n}\n\nh4 {\n  font-size: 18px;\n  font-weight: 400;\n  margin: 8px 0px;\n  clear: both;\n}\n\nh5 {\n  font-size: 16px;\n  font-weight: 500;\n  margin: 8px 0px;\n  clear: both;\n}\n\nh6 {\n  color: $mediumgray;\n  font-size: 16px;\n  font-weight: 500;\n  margin: 8px 0px;\n  clear: both;\n}\n\nh2, h3, h4, h5, h6 {\n  @media screen and (max-width: 600px) {\n    margin: 8px 0;\n  }\n}\n\n.mat-tab-body-wrapper h2 {\n  margin-top: 0;\n}\n\np, ol, ul, ol, li, input, a  {\n  font-size: 14px;\n  line-height: 24px;\n  letter-spacing: 0.30px;\n  font-weight: 400;\n  & > em {\n    letter-spacing: 0.30px;\n  }\n}\n\nol {\n  li, p {\n    margin: 4px 0;\n  }\n}\n\nli p {\n  margin: 0;\n}\n\na {\n  text-decoration: none;\n}\n\n.app-toolbar a {\n  font-size: 16px;\n  font-weight: 400;\n  color: white;\n  font-family: $main-font;\n  text-transform: uppercase;\n  padding: 21px 0;\n}\n\nstrong {\n  font-weight: 600;\n}\n\ntable {\n  border-collapse: collapse;\n  border-radius: 2px;\n  border-spacing: 0;\n  margin: 0 0 32px 0;\n}\n\ntable tbody th {\n  max-width: 100px;\n  padding: 13px 32px;\n  text-align: left;\n}\n\ntd {\n  font-weight: 400;\n  padding: 8px 30px;\n  letter-spacing: 0.30px;\n\n  p {\n    margin: 0;\n  }\n}\n\nth {\n  font-size: 16px;\n  font-weight: 500;\n  padding: 13px 32px;\n  text-align: left;\n}\n\np > code, li > code, td > code, th > code {\n  font-family: $code-font;\n  font-size: 85%;\n  color: $darkgray;\n  letter-spacing: 0;\n  line-height: 1;\n  padding: 2px 0;\n  background-color: $backgroundgray;\n  border-radius: 4px;\n}\n\ncode {\n  font-family: $code-font;\n  font-size: 90%;\n}\n\n.sidenav-content a {\n  color: $pink;\n  &:hover {\n    color: $mediumgray;\n  }\n}\n\n.informal {\n  display: block;\n  padding-left: 1.3em;\n  border-left: 5px solid #dfdfdf;\n  font-size: 1.1em;\n  font-style: italic;\n  margin: 22px 0;\n}\n","// TYPOGRAPHY\n$main-font: \"Roboto\",\"Helvetica Neue Light\",\"Helvetica Neue\",Helvetica,Arial,\"Lucida Grande\",sans-serif;\n$code-font: \"Droid Sans Mono\", monospace;\n\n// Z-LAYER\n$layer-1: 1;\n$layer-2: 2;\n$layer-3: 3;\n$layer-4: 4;\n$layer-5: 5;\n\n// COLOR PALETTE\n$pink: #d81b60;\n$accentgrey: #62757f;\n$brightred: #DD0031;\n$darkred: #C3002F;\n$white: #FFFFFF;\n$offwhite: #FAFAFA;\n$backgroundgray: #F1F1F1;\n$lightgray: #DBDBDB;\n$mist: #ECEFF1;\n$mediumgray: #6e6e6e;\n$darkgray: #333;\n$black: #0A1014;\n$orange: #FF9800;\n$anti-pattern: $brightred;\n\n// API & CODE COLORS\n$amber-700: #FFA000;\n$blue-400: #42A5F5;\n$blue-500: #2196F3;\n$blue-600: #1E88E5;\n$blue-800: #1565C0;\n$blue-900: #0D47A1;\n$blue-grey-50: #ECEFF1;\n$blue-grey-100: #CFD8DC;\n$blue-grey-200: #B0BEC5;\n$blue-grey-300: #90A4AE;\n$blue-grey-400: #78909C;\n$blue-grey-500: #607D8B;\n$blue-grey-600: #546E7A;\n$blue-grey-700: #455A64;\n$blue-grey-800: #37474F;\n$blue-grey-900: #263238;\n$codegreen: #17ff0b;\n$green-500: #4CAF50;\n$green-800: #2E7D32;\n$light-green-600: #7CB342;\n$pink-600: #D81B60;\n$purple-600: #8E24AA;\n$teal-500: #009688;\n$lightgrey: #F5F6F7;\n\n// GRADIENTS\n$bluegradient: linear-gradient(145deg,#0D47A1,#42A5F5);\n$redgradient: linear-gradient(145deg,$darkred,$brightred);\n\n// API LABEL COLOR AND SYMBOLS MAP\n$api-symbols: (\n  all: (\n    content: ' ',\n    background: $white\n  ),\n  decorator: (\n    content: '@',\n    background: $blue-800\n  ),\n  directive: (\n    content: 'D',\n    background: $pink-600\n  ),\n  pipe: (\n    content: 'P',\n    background: $blue-grey-600\n  ),\n  class: (\n    content: 'C',\n    background: $blue-500\n  ),\n  interface: (\n    content: 'I',\n    background: $teal-500\n  ),\n  function: (\n    content: 'F',\n    background: $green-800\n  ),\n  enum: (\n    content: 'E',\n    background: $amber-700\n  ),\n  const: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  let: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  var: (\n    content: 'K',\n    background: $mediumgray\n  ),\n  type-alias: (\n    content: 'T',\n    background: $light-green-600\n  ),\n  module: (\n    content: 'Pk',\n    background: $purple-600\n  )\n);\n\n// OTHER\n$small-breakpoint-width: 840px;\n$phone-breakpoint: 480px;\n$tablet-breakpoint: 800px;",".api-section {\n    position: relative;\n\n    pre {\n        white-space: pre-wrap;\n    }\n\n    table.api-table {\n        min-width: 680px;\n\n        thead th {\n            color: white;\n            font-size: 16px;\n            background-color: $pink;\n            border-radius: 4px 4px 0 0;\n            text-transform: none;\n            padding: 8px 24px;\n        }\n\n        tbody {\n            pre {\n                white-space: normal;\n                margin: 4px;\n                padding: 4px 16px;\n            }\n\n            td, th {\n                padding: 0;\n            }\n\n            th {\n                max-width: 150px;\n            }\n        }\n\n    }\n}\n\n.api-body {\n\n    max-width: 1200px;\n\n    table {\n\n        th {\n            text-transform: none;\n            font-size: 16px;\n            font-weight: bold;\n        }\n\n        tr {\n            border-bottom: 1px solid $lightgray;\n        }\n\n        td {\n            vertical-align: middle;\n        }\n\n        hr {\n            margin: 16px 0;\n        }\n\n        tr:last-child {\n            border-bottom: none;\n        }\n\n        &.item-table {\n            td {\n                padding: 32px;\n            }\n        }\n\n        &.list-table {\n            td {\n                padding: 16px 24px;\n            }\n        }\n    }\n\n    /* used to target the short description */\n    > p:nth-child(2), > p:nth-child(3) {\n        border-left: 5px solid $pink;\n        font-size: 1rem;\n        line-height: 1.25;\n        padding-left: .5rem;\n\n    }\n}\n","aio-shell.page-docs {\n  .sidenav-content {\n    // padding: 6rem 3rem 3rem 3rem; // THIS CAUSES THE TOP NAV TOOLBAR TO JUMP BETWEEN DOCS AND OTHER PAGES\n    margin: auto;\n  }\n}\n\n.sidenav-content {\n  min-height: 100vh;\n  padding: 80px 3rem 1rem;\n}\n\n@media (max-width: 600px) {\n  aio-menu {\n    display: none;\n  }\n\n  .sidenav-content {\n    min-height: 450px;\n    padding: 80px 1rem 1rem;\n  }\n}\n\n.sidenav-container {\n  width: 100%;\n  height: 100vh;\n}\n\n.sidenav-content button {\n  min-width: 50px;\n}\n\n#guide-change-log h2::before {\n  content: \"\";\n  display: block;\n  height: 1px;\n  margin: 24px 0px;\n  background: $lightgray;\n}\n",".no-animations aio-doc-viewer > * {\n  // Disable view transition animations.\n  transition: none !important;\n}\n","footer {\n  position: relative;\n  line-height: 24px;\n  flex: 1;\n  padding: 48px;\n  z-index: 0;\n  background-color: $pink;\n  color: $offwhite;\n  font-weight: 300;\n\n  aio-footer {\n    position: relative;\n    z-index: 0;\n  }\n\n  .footer-block {\n    margin: 0 24px;\n    vertical-align: top;\n  }\n\n  a {\n    color: $offwhite;\n    font-weight: 300;\n    text-decoration: none;\n    z-index: 20;\n    position: relative;\n    &:hover {\n      text-decoration: underline;\n    }\n    &:visited {\n      text-decoration: none;\n    }\n  }\n  a.action {\n    cursor: pointer;\n  }\n  h3 {\n    font-size: 16px;\n    text-transform: uppercase;\n    font-weight: 400;\n    margin: 0 0 16px;\n  }\n  p {\n    text-align: center;\n    margin: 10px 0px 5px;\n\n    @media (max-width: 480px) {\n      text-align: left;\n    }\n  }\n\n  div.grid-fluid {\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n\n    justify-content: center;\n\n    text-align: left;\n    margin: 0 0 40px;\n\n    ul {\n      list-style-position: inside;\n      padding: 0px;\n      margin: 0px;\n\n      li {\n        list-style-type: none;\n        padding: 0px;\n        text-align: left;\n      }\n    }\n\n    @media (max-width: 480px) {\n      flex-direction: column;\n      .footer-block {\n        margin: 8px 24px;\n      }\n    }\n  }\n\n  @media (max-width: 700px) {\n    h3 {\n      font-size: 110%;\n    }\n  }\n  @media (max-width: 600px) {\n    h3 {\n      font-size: 100%;\n    }\n  }\n}\n\nfooter::after {\n  content: '';\n  position: absolute;\n  z-index: -1;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-size: 320px auto;\n}\n","html, body {\n    height: 100%;\n}\n\nbody {\n    background-color: $offwhite;\n}\n\n.clearfix {\n    content: \"\";\n    display: table;\n    clear: both;\n}\n\n.clear {\n    clear: both;\n}\n\n.l-clearfix:after, .clearfix:after {\n    content: \"\";\n    display: table;\n    clear: both;\n}\n\n.is-visible {\n    display: block!important;\n}\n\n.l-flex-wrap {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.flex-center {\n    display: flex;\n    justify-content: center;\n}\n\n.center {\n    text-align: center;\n}\n\n.visually-hidden {\n    position: absolute !important;\n    top: -9999px !important;\n    left: -9999px !important;\n}\n\n.text-uppercase {\n  text-transform: uppercase;\n}",".hero {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 48px 48px 32px 48px;\n  overflow: hidden;\n\n  .hero-title {\n    display: inline-block;\n    font-size: 28px;\n    font-weight: 400;\n    line-height: 48px;\n    margin: 0 8px 0 0;\n    text-transform: uppercase;\n\n    &.is-standard-case {\n      text-transform: none;\n    }\n  }\n}\n\nsection#intro {\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 900px;\n  height: 480px;\n  margin: 0 auto;\n  padding: 0;\n  color: white;\n\n  @media (max-width: 780px) {\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n    max-width: 100vw;\n    padding: 70px 0 32px;\n\n    button {\n      margin: 0;\n      height: 60px;\n    }\n  }\n\n  .homepage-container {\n    width: 100%;\n    max-width: 1040px;\n    margin: 0 auto;\n    margin-top: -7%;\n    padding-top: 0;\n    padding-bottom: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    .hero-cta + .hero-cta {\n      margin-top: 15px;\n    }\n\n    @media (max-width: 780px) {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n      max-width: 100%;\n      padding: 0;\n    }\n  }\n\n  .headline-container {\n    margin: 32px 0;\n    text-align: center;\n  }\n\n  .hero-headline {\n    font-size: 40px;\n    line-height: 64px;\n    font-weight: 500;\n    color: $pink;\n\n    &:after {\n      display: none;\n    }\n\n    @media (max-width: 780px) {\n      text-align: center;\n    }\n\n    @media (max-width: 575px) {\n      font-size: 32px;\n      line-height: 50px;\n    }\n  }\n\n  .hero-subheadline {\n    font-size: 22px;\n    line-height: 32px;\n    color: $accentgrey;\n  }\n\n  .hero-logo {\n    display: flex;\n    width: 400px;\n\n    @media (max-width: 780px) {\n      justify-content: center;\n    }\n\n    img {\n      width: 400px;\n      height: 400px;\n      margin-bottom: 8px;\n      padding: 0;\n      filter: drop-shadow(0 2px 2px rgba($black, 0.24));\n\n      @media (max-width: 780px) {\n        width: 250px;\n        height: 250px;\n      }\n    }\n  }\n}\n\n.announcement-bar {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n  max-width: 50vw;\n  margin: 0 auto;\n  padding: 16px;\n  background-color: $white;\n  border-radius: 4px;\n  box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n  box-sizing: border-box;\n  transition: all 0.3s ease-in;\n\n  @media (max-width: 992px) {\n    flex-direction: column;\n    text-align: center;\n    padding: 32px 16px;\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    max-width: none;\n  }\n\n  & > * {\n    margin: 8px;\n  }\n\n  img {\n    filter: drop-shadow(0 2px 5px rgba(0, 0, 0, 0.26));\n  }\n\n  .button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 40px;\n    min-width: 160px;\n    font-size: 16px;\n    color: $white;\n    background-color: $pink;\n    border-radius: 48px;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n    box-sizing: border-box;\n    cursor: pointer;\n\n    &:hover {\n      color: rgba($white, 0.7);\n    }\n  }\n\n  .material-icons {\n    display: none;\n    right: 0;\n    position: static;\n    transition: all 0.3s ease-in;\n    font-size: 16px;\n  }\n\n  p {\n    strong {\n      font-weight: 700;\n    }\n\n    font-size: 16px;\n    margin: 8px;\n    text-align: center;\n  }\n}\n\n// ANGULAR LINE\n.background-sky {\n  background-color: $pink;\n  background: $pink;\n  color: $white;\n}\n\n.home-row .card {\n  @include card(70%, auto);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  width: 70%;\n  min-width: 270px;\n  text-align: center;\n  height: auto;\n  margin: auto;\n  padding: 24px;\n  box-shadow: 0 6px 6px rgba(10, 16, 20, 0.15), 0 0 52px rgba(10, 16, 20, 0.12);\n\n  @media (max-width: 600px) {\n    margin: 16px auto 0;\n\n    h2 {\n      margin: 0;\n    }\n\n    img {\n      max-width: none;\n      height: 70px;\n    }\n  }\n\n  @media (max-width: 1300px) {\n    img {\n      height: 70px;\n      max-width: none;\n    }\n  }\n\n  img {\n    margin: 16px;\n  }\n\n  .card-text-container {\n    margin: 0 16px;\n\n    p {\n      text-align: left;\n      color: $darkgray;\n      margin: 0;\n      padding: 8px 0;\n    }\n  }\n\n  &:hover {\n    h2 {\n      color: $pink;\n    }\n  }\n\n  ul {\n    list-style-type: none;\n  }\n}\n\n.text {\n  color: $darkgray;\n}\n\n.button.hero-cta {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 184px;\n  height: 40px;\n  padding: 0 24px;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 40px;\n  background-color: $white;\n  border-radius: 48px;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n  box-sizing: border-box;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n}\n\naio-shell {\n  &.page-home {\n    section {\n      padding: 0;\n    }\n  }\n\n  &.page-home,\n  &.page-resources,\n  &.page-events,\n  &.page-contribute {\n    article {\n      padding: 32px;\n\n      @media (max-width: 800px) {\n        padding: 24px;\n      }\n    }\n  }\n\n  &.page-features {\n    article {\n      padding: 0 3rem;\n    }\n  }\n\n  &.page-home,\n  &.page-resources,\n  &.page-events,\n  &.page-features {\n    .content img {\n      @media (max-width: 1300px) {\n        max-width: none;\n      }\n    }\n\n    .feature-section img {\n      max-width: 70px;\n    }\n\n    @media (max-width: 600px) {\n      mat-sidenav-container.sidenav-container {\n        padding-top: 0;\n      }\n    }\n  }\n\n  .cta-bar .hero-cta {\n    color: $pink;\n  }\n}\n\n.cta-bar.announcement-bar {\n  background: none;\n  box-shadow: none;\n}\n\n.text-headline {\n  font-size: 20px;\n  font-weight: 500;\n  color: $pink;\n  margin-top: 10px;\n  text-transform: uppercase;\n}\n\naio-shell:not(.view-SideNav) {\n  mat-sidenav-container.sidenav-container {\n    max-width: none;\n  }\n}\n\ndiv[layout='row'] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n\n  @media (max-width: 480px) {\n    display: block;\n  }\n}\n\n.layout-row {\n  flex-direction: row;\n}\n\n.home-rows {\n  overflow: hidden;\n  @media (max-width: 600px) {\n    margin: 0;\n  }\n}\n\n.background-superhero-paper {\n  background-size: 100%;\n  background-blend-mode: multiply;\n}\n\n.home-row {\n  max-width: 920px;\n  margin: 32px auto;\n\n  .promo-img-container,\n  .text-container {\n    max-width: 50%;\n\n    @media (max-width: 480px) {\n      max-width: 100%;\n      text-align: center;\n\n      &:nth-child(even) {\n        flex-direction: column-reverse;\n      }\n    }\n  }\n\n  .text-block {\n    padding-right: 15%;\n\n    @media (max-width: 600px) {\n      padding: 0;\n    }\n  }\n\n  .promo-img-container {\n    img {\n      max-width: 90% !important;\n    }\n\n    p {\n      margin: 0 20px;\n    }\n\n    img {\n      max-width: 90%;\n\n      @media (max-width: 599px) {\n        max-width: 100%;\n        float: initial !important;\n      }\n    }\n  }\n}\n\n.marketing-banner {\n  background-color: lighten($pink, 10);\n  margin-top: 64px;\n  padding: 32px;\n\n  @media (max-width: 600px) {\n    margin-top: 56px;\n    padding: 18px;\n  }\n\n  .banner-headline {\n    text-transform: uppercase;\n    font-size: 24px;\n    font-weight: 300;\n    color: white;\n    margin: 0;\n    -webkit-margin-before: 0;\n    -webkit-margin-after: 0;\n\n    @media (max-width: 600px) {\n      font-size: 18px;\n      font-weight: 400;\n    }\n\n    &:after {\n      display: none;\n    }\n  }\n}\n.page-features .marketing-banner {\n  margin-bottom: 20px;\n}\n\n.blm-background {\n  background-color: black;\n  color: white;\n  display: flex;\n  min-height: calc(100vh - 64px);\n}\n\n.text-container.blm-container {\n  text-align: center;\n  line-height: inherit;\n  max-width: inherit;\n}\n\n.blm-text {\n  font-size: 2rem;\n  line-height: inherit;\n}\n\n.blm-list-item {\n  margin: 10px 0;\n}\n","/************************************\n\n             Media queries\n\n To use these, put this snippet in the appropriate selector:\n\n     @include bp(tiny) {\n         background-color: purple;\n     }\n\n     Replace \"tiny\" with \"medium\" or \"big\" as necessary.\n*************************************/\n\n@mixin bp($point) {\n\n  $bp-xsmall: \"(min-width: 320px)\";\n  $bp-teeny: \"(min-width: 480px)\";\n  $bp-tiny: \"(min-width: 600px)\";\n  $bp-small: \"(min-width: 650px)\";\n  $bp-medium: \"(min-width: 800px)\";\n  $bp-big: \"(min-width: 1000px)\";\n\n  @if $point == big {\n    @media #{$bp-big} { @content; }\n  }\n  @else if $point == medium {\n    @media #{$bp-medium} { @content; }\n  }\n  @else if $point == small {\n    @media #{$bp-small}  { @content; }\n  }\n  @else if $point == tiny {\n    @media #{$bp-tiny}  { @content; }\n  }\n  @else if $point == teeny {\n    @media #{$bp-teeny}  { @content; }\n  }\n  @else if $point == xsmall {\n    @media #{$bp-xsmall}  { @content; }\n  }\n}\n\n@mixin rotate($degrees) {\n  -moz-transform: rotate($degrees);\n  -webkit-transform: rotate($degrees);\n  -o-transform: rotate($degrees);\n  -ms-transform: rotate($degrees);\n  transform: rotate($degrees);\n  transition: transform 150ms;\n  transition-timing-function: ease-in-out;\n}\n\n@mixin codeblock($bgcolor) {\n    background-color: $bgcolor;\n    border-radius: 5px;\n    padding: 20px;\n    margin: 0 auto; // was 24\n    border: 0.5px solid $lightgray;\n}\n\n// INFO CARD SKELETON\n@mixin card($height, $width) {\n  height: $height;\n  width: $width;\n  background-color: $white;\n  border-radius: 4px;\n  box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n  box-sizing: border-box;\n  transition: box-shadow .5s;\n\n  &:hover {\n    box-shadow: 0 8px 8px rgba($black, 0.24), 0 0 8px rgba($black, 0.12);\n    text-decoration: none;\n  }\n}","#file-not-found {\n    padding: 3rem 3rem 3rem;\n}\n\n.nf-container {\n    align-items: center;\n    padding: 32px;\n}\n\n.nf-response {\n    margin: 32px;\n    height: 100%;\n    flex-direction: column;\n\n    h1 {\n        font-size: 48px;\n        color: $pink;\n        text-transform: uppercase;\n        margin: 8px 0;\n    }\n}\n\n.nf-icon.material-icons {\n    color: $pink;\n    font-size: 100px;\n    position: static;\n}\n","// Disable sidenav animations for the initial render.\n.starting.mat-drawer-transition .mat-drawer-content {\n  transition: none;\n}\n\naio-nav-menu {\n  display: block;\n  margin: 0 auto;\n  font-size: 13px;\n  ul, a {\n    padding: 0;\n    margin: 0;\n  }\n\n  &:first-child {\n    margin-top: 16px;\n  }\n\n  aio-nav-item div a {\n    padding-left: 6px;\n  }\n}\n\nmat-sidenav.mat-sidenav.sidenav {\n  position: fixed;\n  top: 64px;\n  bottom: 0;\n  left: 0;\n  padding: 0;\n  min-width: 260px;\n  background-color: $offwhite;\n  box-shadow: 6px 0 6px rgba(0,0,0,0.10);\n\n  &.collapsed {\n    top: 56px;\n  }\n}\n\nmat-sidenav-container.sidenav-container {\n  min-height: 100%;\n  height: auto !important;\n  max-width: 100%;\n  margin: 0;\n  transform: none;\n\n  &.has-floating-toc {\n    max-width: 82%;\n  }\n}\n\nmat-sidenav-container div.mat-sidenav-content {\n  height: auto;\n}\n\n.vertical-menu-item {\n  box-sizing: border-box;\n  color: $darkgray;\n  cursor: pointer;\n  display: block;\n  max-width: 260px;\n  overflow-wrap: break-word;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  text-decoration: none;\n  text-align: left;\n  width: 93%;\n  word-wrap: break-word;\n\n  &:hover {\n    background-color: $lightgray;\n    color: $pink;\n    text-shadow: 0 0 5px #ffffff;\n  }\n\n  &:focus {\n    outline: $accentgrey auto 2px;\n  }\n\n  //icons _within_ nav\n  .mat-icon {\n    position: absolute;\n    top: 0;\n    right: 0;\n    margin: 4px;\n  }\n}\n\n.vertical-menu-item.selected {\n  color: $pink;\n}\n\nbutton.vertical-menu-item {\n  border: none;\n  background-color: transparent;\n  margin-right: 0;\n  padding-left: 6px;\n  padding-top: 8px;\n  padding-bottom: 10px;\n}\n\n.heading {\n  color: $darkgray;\n  cursor: pointer;\n  position: relative;\n  text-transform: uppercase;\n}\n\n.heading-children.expanded {\n  visibility: visible;\n  opacity: 1;\n  max-height: 4000px; // Arbitrary max-height. Can increase if needed. Must have measurement to transition height.\n  transition: visibility 500ms, opacity 500ms, max-height 500ms;\n  -webkit-transition-timing-function: ease-in-out;\n  transition-timing-function: ease-in-out;\n}\n\n.heading-children.collapsed {\n  visibility: hidden;\n  opacity: 0;\n  max-height: 1px; // Must have measurement to transition height.\n  transition: visibility 275ms, opacity 275ms, max-height 280ms;\n  -webkit-transition-timing-function: ease-out;\n  transition-timing-function: ease-out;\n}\n\n.no-animations {\n  .heading-children.expanded, .heading-children.collapsed {\n    transition: none! important;\n  }\n}\n\n.level-1 {\n  font-family: $main-font;\n  font-size: 14px;\n  font-weight: 400;\n  margin-left: 14px;\n  transition: background-color 0.2s;\n  text-transform: uppercase;\n}\n\n.level-2 {\n  color: $mediumgray;\n  font-family: $main-font;\n  font-size: 14px;\n  font-weight: 400;\n  margin-left: 12px;\n  text-transform: none;\n}\n\n.level-3 {\n  color: $mediumgray;\n  font-family: $main-font;\n  font-size: 14px;\n  margin-left: 10px;\n}\n\n.level-1.expanded .mat-icon, .level-2.expanded .mat-icon {\n  @include rotate(90deg);\n}\n\n.level-1:not(.expanded) .mat-icon, .level-2:not(.expanded) .mat-icon {\n  @include rotate(0deg);\n}\n\naio-nav-menu.top-menu {\n  padding: 24px 0 0;\n\n  aio-nav-item:last-child div {\n    border-bottom: 1px solid rgba($mediumgray, 0.5);\n  }\n\n  aio-nav-item:first-child div {\n    border-top: 1px solid rgba($mediumgray, 0.5);\n  }\n}\n\n// Angular Version Selector\nmat-sidenav .doc-version {\n  padding: 8px;\n  border-top: 1px solid $lightgray;\n\n  select {\n    outline: none;\n    width: 100%;\n    background: rgba($lightgray, 0.5);\n    height: 32px;\n    border: 1px solid $lightgray;\n    color: $darkgray;\n\n    option {\n      font-family: $main-font;\n      font-size: 14px;\n    }\n  }\n}\n","nav#main-table-of-contents {\n    width: 200px;\n    height: 900px;\n    position: fixed;\n    right: 0;\n    top: 50px;\n    bottom: 100px;\n    margin-left: 32px;\n    background-color: $pink;\n}","// VARIABLES\n$hamburgerShownMargin: 0;\n$hamburgerHiddenMargin: 0 24px 0 -88px;\n\n// DOCS PAGE / STANDARD: TOPNAV TOOLBAR FIXED\nmat-toolbar.mat-toolbar {\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  z-index: 10;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\n\n  mat-toolbar-row {\n    padding: 0 16px 0 0;\n  }\n\n  mat-icon {\n    color: $white;\n  }\n}\n\n// HOME PAGE OVERRIDE: TOPNAV TOOLBAR\naio-shell.page-home mat-toolbar.mat-toolbar {\n  background-color: $pink;\n\n  @media (min-width: 481px) {\n    &:not(.transitioning) {\n      background-color: $pink;\n      transition: background-color 0.2s linear;\n    }\n  }\n}\n\n// MARKETING PAGES OVERRIDE: TOPNAV TOOLBAR AND HAMBURGER\naio-shell.page-home mat-toolbar.mat-toolbar,\naio-shell.page-features mat-toolbar.mat-toolbar,\naio-shell.page-events mat-toolbar.mat-toolbar {\n  box-shadow: none;\n\n  // FIXED TOPNAV TOOLBAR FOR SMALL MOBILE\n  @media (min-width: 481px) {\n    position: absolute;\n  }\n}\n\n// DOCS PAGES OVERRIDE: HAMBURGER\naio-shell.folder-api mat-toolbar.mat-toolbar,\naio-shell.folder-docs mat-toolbar.mat-toolbar,\naio-shell.folder-guide mat-toolbar.mat-toolbar,\naio-shell.folder-tutorial mat-toolbar.mat-toolbar {\n  @media (min-width: 992px) {\n    .hamburger.mat-button {\n      // Hamburger shown on non-marketing pages on large screens.\n      margin: $hamburgerShownMargin;\n    }\n  }\n}\n\n// HAMBURGER BUTTON\n.hamburger.mat-button {\n  height: 100%;\n  margin: $hamburgerShownMargin;\n  padding: 0;\n\n  &:not(.starting) {\n    transition-duration: 0.4s;\n    transition-property: color, margin;\n    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\n  }\n\n  @media (min-width: 992px) {\n    // Hamburger hidden by default on large screens.\n    // (Will be shown per doc.)\n    margin: $hamburgerHiddenMargin;\n  }\n\n  &:hover {\n    color: $offwhite;\n  }\n\n  & .mat-icon {\n    color: white;\n    position: inherit;\n  }\n}\n\n// HOME NAV-LINK\n.nav-link.home img {\n  position: relative;\n  margin-top: -21px;\n  margin-right: 20px;\n  top: 12px;\n  height: 40px;\n\n  @media (max-width: 992px) {\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n}\n\n// TOP MENU\naio-top-menu {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 80%;\n\n  ul {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    list-style-position: inside;\n    padding: 0px;\n    margin: 0px;\n\n    li {\n      padding-bottom: 2px;\n      list-style-type: none;\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.7;\n      }\n\n      &:focus {\n        background-color: $accentgrey;\n        outline: none;\n      }\n    }\n  }\n\n  a.nav-link {\n    margin: 0;\n    padding: 24px 16px;\n    cursor: pointer;\n\n    &:focus {\n      background: rgba($white, 0.15);\n      border-radius: 4px;\n      outline: none;\n      padding: 8px 16px;\n    }\n  }\n}\n\n// SEARCH BOX\naio-search-box.search-container {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n  min-width: 150px;\n  height: 100%;\n\n  input {\n    color: $darkgray;\n    border: none;\n    border-radius: 100px;\n    background-color: $offwhite;\n    padding: 5px 16px;\n    margin-left: 8px;\n    width: 180px;\n    max-width: 240px;\n    height: 50%;\n    -webkit-appearance: none;\n\n    &:focus {\n      outline: none;\n    }\n\n    @include bp(big) {\n      transition: width 0.4s ease-in-out;\n\n      &:focus {\n        width: 50%;\n      }\n    }\n    @media (max-width: 480px) {\n      width: 150px;\n    }\n  }\n}\n\n// EXTERNAL LINK ICONS\n.app-toolbar {\n  .toolbar-external-icons-container {\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n\n    a {\n      display: flex;\n      align-items: center;\n      margin-left: 16px;\n\n      @media screen and (max-width: 480px) {\n        margin-left: 8px;\n      }\n\n      &:hover {\n        opacity: 0.8;\n      }\n\n      img {\n        height: 24px;\n      }\n    }\n  }\n}\n","@media print {\n\n    // General Adjustments\n    * {\n        box-shadow: none !important;\n    }\n\n    h1 {\n        height: 40px !important;\n        color: $darkgray !important;\n    }\n\n    h1, h2, h3, h4, h5, h6 {\n        page-break-after: avoid;\n    }\n\n    ul, ol, img, code-example, table, tr, .alert, .l-subsection, .feature {\n        page-break-inside: avoid;\n    }   \n\n    table tbody tr:last-child td {\n        border-bottom: 1px solid $lightgray !important;\n    }\n\n    img {\n        max-width: 100% !important;\n    }\n\n    p {\n        widows: 4;\n    }\n\n    p > code, li > code, table code {\n        color: $pink !important;\n    }\n\n    // No Print Class\n    .no-print {\n        display: none !important;\n    }\n\n    // Custom No Print for Sidenav Menu\n    mat-sidenav.sidenav.mat-sidenav {\n        display: none !important;\n    }\n\n    // Custom No Print Element Adjustments\n    .mat-sidenav-content {\n        margin: 0 !important;\n    }\n\n    mat-sidenav-container.sidenav-container {\n        min-width: 100vw;\n    }\n\n    .sidenav-content {\n        overflow: visible;\n    }\n\n    .filetree {\n        max-width: 100%;\n    }\n\n    aio-code code {\n        border: none !important;\n    }\n\n    code-example {\n        pre.lang-bash code span {\n            color: $mediumgray !important;\n        }\n\n        pre.lang-sh code span {\n            color: $darkgray !important;\n        }\n\n        header {\n            border: 0.5px solid $lightgray;\n            color: $darkgray;\n        }\n    }\n\n    .content code { \n        border: 0.5px solid $lightgray;\n    }\n\n    .mat-tab-labels {\n        div.mat-tab-label {\n            &:not(.mat-tab-label-active) span {\n                font-style: italic;\n            }\n\n            &.mat-tab-label-active span {\n                font-weight: bold;\n            }\n        }\n    }\n\n    .api-header label { \n        color: $darkgray !important;\n        font-weight: bold !important;\n        margin: 2px !important;\n        padding: 0 !important;\n        display: block !important;\n    }\n\n    .feature-section img {\n        max-width: 70px !important;\n    }\n}",".alert {\n    padding: 16px;\n    margin: 24px 0px;\n    font-size: 14px;\n    color: $darkgray;\n    width: 100%;\n    box-sizing: border-box;\n\n    &.is-critical {\n        border-left: 10px solid $pink;\n        background-color: rgba($pink, 0.05);\n\n        h1, h2, h3, h4, h5, h6 {\n            color: $pink;\n        }\n    }\n\n    &.is-important {\n        border-left: 10px solid $orange;\n        background-color: rgba($orange, 0.05);\n\n        h1, h2, h3, h4, h5, h6 {\n            color: $orange;\n        }\n    }\n\n    &.is-helpful {\n        border-left: 10px solid $pink;\n        background-color: rgba($pink, 0.05);\n\n        h1, h2, h3, h4, h5, h6 {\n            color: $pink;\n        }\n    }\n\n    > * {\n        margin: 0;\n        padding: 8px 16px;\n    }\n}",".page-actions {\n  float: right;\n  .material-icons {\n    border-radius: 4px;\n    padding: 4px;\n    font-size: 20px;\n    &:hover {\n      background-color: $mist;\n    }\n  }\n}\n\n.api-header {\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  > h1 {\n    margin-right: 1rem;\n  }\n}\n\n.api-body {\n\n  .class-overview {\n    position: relative;\n\n    code-example {\n        clear: left;\n    }\n  }\n\n  .description img {\n    border: 1px solid #dfdfdf;\n    max-width: 100%;\n    width: 100%;\n  }\n\n  .method-table {\n    h3 {\n      margin: 6px 0;\n      font-weight: bold;\n    }\n\n    h4 {\n      font-size: 14px;\n      font-weight: bold;\n      margin-top: 12px;\n    }\n  }\n\n  .api-heading {\n    padding: 5px 0;\n    font-size: 16px;\n    font-weight: bold;\n  }\n\n  .short-description {\n    margin: 6px 0 0 10px;\n  }\n\n  .properties-table {\n    font-size: 14px;\n\n    thead th {\n      &:nth-child(1) {\n        width: 20%;\n      }\n      &:nth-child(2) {\n        width: 20%;\n      }\n    }\n  }\n\n  .parameters-table {\n    margin-top: 0;\n    font-size: 14px;\n    td:nth-child(1) {\n      width: 20%;\n    }\n  }\n\n  details.overloads {\n    margin-left: -8px;\n\n    summary {\n      height: inherit;\n      padding: 8px 12px;\n      h4 {\n        margin: 0;\n        clear: left;\n      }\n    }\n}\n\n  .api-section aio-code {\n    background-color: rgba(241, 241, 241, 0.2);\n  }\n\n  .from-constructor, .read-only-property {\n    font-style: italic;\n    color: $pink;\n  }\n}\n\n\n.deprecated-api-item {\n  text-decoration: line-through;\n}\n","/* API EDIT ICON */\n#api {\n  .api-filter .material-icons {\n    right: 48px;\n  }\n}\n\n/* API LIST STYLES */\n\naio-api-list {\n    div.form-search i.material-icons {\n        width: 20px;\n        pointer-events: none;\n    }\n\n    .form-search input {\n        width: 182px;\n    }\n\n    .api-list-container {\n      display: flex;\n      flex-direction: column;\n      margin: 0 auto;\n\n      h2 {\n        margin-top: 16px;\n      }\n    }\n}\n\n.api-filter {\n  display: flex;\n  margin: 0 auto;\n\n  @media (max-width: 600px) {\n      flex-direction: column;\n      margin: 16px auto;\n  }\n\n  .form-select-menu, .form-search {\n      margin: 8px;\n  }\n}\n\n/* LAYOUT */\n\n.docs-content {\n  position: relative;\n}\n\n.l-content-small {\n  padding: 16px;\n  max-width: 1100px;\n  margin: 0;\n\n  @media handheld and (max-width: $phone-breakpoint),\n  screen and (max-device-width: $phone-breakpoint),\n  screen and (max-width: $tablet-breakpoint) {\n    padding: 24px 0 0;\n  }\n}\n\n/* SEARCH BAR */\n\n.form-search {\n  position: relative;\n\n  input {\n    box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n    box-sizing: border-box;\n    border: 1px solid $white;\n    color: $blue-600;\n    font-size: 16px;\n    height: 32px;\n    line-height: 32px;\n    outline: none;\n    padding: 0 16px 0 32px;\n    transition: all .2s;\n\n    // PLACEHOLDER TEXT\n    &::-webkit-input-placeholder { /* Chrome/Opera/Safari */\n      color: $blue-grey-100;\n      font-size: 14px;\n    }\n    &::-moz-placeholder { /* Firefox 19+ */\n      color: $blue-grey-100;\n      font-size: 14px;\n    }\n    &:-ms-input-placeholder { /* IE 10+ */\n      color: $blue-grey-100;\n      font-size: 14px;\n    }\n    &:-moz-placeholder { /* Firefox 18- */\n      color: $blue-grey-100;\n      font-size: 14px;\n    }\n\n    &:focus {\n      border: 1px solid $blue-400;\n      box-shadow: 0 2px 2px rgba($blue-400, 0.24), 0 0 2px rgba($blue-400, 0.12);\n    }\n  }\n\n  .material-icons {\n    color: $blue-grey-100;\n    font-size: 20px;\n    left: 8px;\n    position: absolute;\n    top: 6px;\n    z-index: $layer-1;\n  }\n}\n\n/* API SYMBOLS */\n\n/* SYMBOL CLASS */\n\n.symbol {\n  border-radius: 2px;\n  box-shadow: 0 1px 2px rgba($black, .24);\n  color: $white;\n  display: inline-block;\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 16px;\n  text-align: center;\n  width: 16px;\n\n  // SYMBOL TYPES\n  // Symbol mapping variables in *constants*\n  @each $name, $symbol in $api-symbols {\n    &.#{$name} {\n      background: map-get($symbol, background);\n\n      &:before {\n        content: map-get($symbol, content);\n      }\n    }\n  }\n}\n\n/* API HOMEE PAGE */\n\n/* API FILTER MENU */\n\n.api-filter {\n  aio-select {\n    width: 200px;\n\n    .symbol {\n      margin-right: 8px;\n    }\n  }\n\n  .form-search {\n    float: left;\n  }\n}\n\n/* API CLASS LIST */\n\n.docs-content .api-list {\n  list-style: none;\n  margin: 0 0 32px -8px;\n  padding: 0;\n  overflow: hidden;\n\n  @media screen and (max-width: 600px) {\n        margin: 0 0 0 -8px;\n    }\n\n  li {\n    font-size: 14px;\n    margin: 8px 0;\n    line-height: 14px;\n    padding: 0;\n    float: left;\n    width: 33%;\n    overflow: hidden;\n    min-width: 220px;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    .symbol {\n      margin-right: 8px;\n    }\n    a {\n      color: $blue-grey-600;\n      display: inline-block;\n      line-height: 16px;\n      padding: 0 16px 0;\n      text-decoration: none;\n      transition: all .3s;\n      overflow: hidden;\n      text-overflow: ellipsis;\n\n      &:hover {\n        background: $blue-grey-50;\n        color: $blue-500;\n      }\n    }\n\n    .stability {\n      &.deprecated {\n        text-decoration: line-through;\n      }\n\n      &.experimental {\n        font-style: italic;\n      }\n    }\n  }\n}\n\n.docs-content .h2-api-docs,\n.docs-content .h2-api-docs:first-of-type {\n  font-size: 18px;\n  line-height: 24px;\n  margin-top: 0;\n}\n\n.code-links {\n  a {\n    code, .api-doc-code {\n      color: #1E88E5 !important;\n    }\n  }\n}\n\n.openParens {\n  margin-top: 15px;\n}\n\n.endParens {\n  margin-bottom: 20px !important;\n}\n\np {\n\n  &.selector {\n    margin: 0;\n  }\n\n  &.location-badge {\n    margin: 0 0 16px 16px !important;\n  }\n\n  .api-doc-code {\n    border-bottom: 0;\n\n    :hover {\n      border-bottom: none;\n    }\n  }\n}\n\n.row-margin {\n  margin-bottom: 36px;\n  h2 {\n    line-height: 28px;\n  }\n}\n\n.code-margin {\n  margin-bottom: 8px;\n}\n\n.no-bg {\n  background: none;\n  padding: 0;\n}\n\n.no-bg-with-indent {\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 16px;\n  margin-top: 6px;\n  margin-bottom: 0;\n  background: none;\n}\n\n.code-background {\n  padding: 0 5px 0;\n\n  span.pln {\n    color: #1E88E5 !important;\n  }\n}\n\n.code-anchor {\n  cursor: pointer;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n}\n\n.api-doc-code {\n  font-size: 14px;\n  color: #1a2326;\n\n  // the last .pln (white space) creates additional spacing between sections of the api doc. Remove it.\n  &.no-pln {\n    .pln:last-child {\n      display: none;\n    }\n  }\n}\n\n@media screen and (max-width: 600px) {\n  .docs-content {\n    // Overrides display flex from angular material.\n    // This was added because Safari doesn't play nice with layout=\"column\".\n    // Look of API doc in Chrome and Firefox remains the same, and is fixed for Safari.\n    .layout-xs-column {\n      display: block !important;\n    }\n  }\n\n  .api-doc-code {\n    font-size: 12px;\n  }\n\n  p.location-badge {\n    position: relative;\n    font-size: 11px;\n  }\n}\n","/* Button Styles */\n\n.button,\na.button.mat-button {\n  display: inline-block;\n  line-height: 32px;\n  padding: 0px 16px;\n  font-size: 14px;\n  font-weight: 400;\n  border-radius: 3px;\n  text-decoration: none;\n  text-transform: uppercase;\n  overflow: hidden;\n  border: none;\n\n  // SIZES\n  &.button-small {\n    font-size: 12px;\n    line-height: 24px;\n    padding: 0px 8px;\n  }\n\n  &.button-large {\n    font-size: 15px;\n    line-height: 48px;\n    padding: 0px 24px;\n  }\n\n  &.button-x-large {\n    font-size: 16px;\n    line-height: 56px;\n    padding: 0px 24px;\n  }\n\n\n  // COLORS\n\n  &.button-secondary {\n    background: $mediumgray;\n    color: rgba($white, .87);\n  }\n\n  &.button-plain {\n    background: $white;\n    color: rgba($darkgray, .87);\n  }\n\n  &.button-subtle {\n    background: $mediumgray;\n    color: darken($offwhite, 10%);\n  }\n\n  &.button-navy {\n    background: $pink;\n    color: rgba($white, .87);\n  }\n\n  &.button-banner {\n    background: $darkgray;\n    color: rgba($white, .87);\n  }\n\n  // &.button-shield,\n  // &.button-shield.mat-button {\n  //   background-color: $pink;\n  //   background: $pink url('assets/images/logos/angular/angular_whiteTransparent.svg') 24px 13px no-repeat;\n  //   color: rgba($white, .87);\n  //   padding-left: 54px;\n  //   background-size: 22px 22px;\n\n  //   @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {\n  //     background: $pink url('assets/images/logos/angular/angular_whiteTransparent.svg') 24px 13px no-repeat;\n  //     background-size: 22px 22px;\n\n  //   }\n  // }\n}\n\n.cta-bar {\n  text-align: center;\n\n  .button {\n    margin: 0px 8px;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\n    transition: all .2s ease-in-out;\n    &:hover {\n        transform: scale(1.1);\n        color: $offwhite;\n    }\n  }\n}\n\na.filter-button {\n  width: 140px;\n  font-size: 14px;\n  padding: 0px 16px;\n  margin: 8px;\n  line-height: 48px;\n  border: 2px solid $pink;\n  border-radius: 4px;\n\n  &:hover {\n    background-color: $pink;\n    color: white;\n  }\n}\n\n[mat-button], [mat-raised-button], [mat-button], [mat-raised-button] {\n  text-transform: uppercase;\n}\n",".callout {\n  @extend .alert;\n  padding: 0px;\n  border-left: none !important;\n  border-radius: 4px;\n\n  header {\n    color: $white;\n    line-height: 24px;\n    font-weight: 500;\n    text-transform: uppercase;\n    border-radius: 4px 4px 0 0;\n  }\n\n  p {\n    padding: 16px;\n    margin: 0px;\n    font-size: 14px;\n  }\n\n  &.is-critical {\n    border-color: $brightred;\n    background: rgba($brightred, 0.05);\n\n    header {\n      background: $brightred;\n    }\n  }\n\n  &.is-important {\n    border-color: $orange;\n    background: rgba($orange, 0.05);\n\n    header {\n      background: $amber-700;\n    }\n  }\n\n  &.is-helpful {\n    border-color: $pink;\n    background: rgba($pink, 0.05);\n\n    header {\n      background: $pink;\n    }\n  }\n}",".card-container {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin: 24px 0;\n}\n\n.docs-card {\n  @include card(194px, 30%);\n  max-width: 340px;\n  min-width: 262px;\n  margin: 24px 8px;\n  padding-bottom: 48px;\n  position: relative;\n\n  &:hover {\n    text-decoration: none;\n\n    section {\n      color: $pink;\n    }\n\n    p {\n      color: $darkgray;\n      padding: 0 16px;\n    }\n\n    .card-footer {\n      line-height: 32px;\n      padding: 8px 16px;\n      background-color: rgba($pink, 0.1);\n      color: $pink;\n    }\n  }\n\n\n  section {\n    color: $darkgray;\n    font-size: 20px;\n    line-height: 24px;\n    margin: 0;\n    padding: 32px 0 24px;\n    text-transform: none;\n    text-align: center;\n  }\n\n  p {\n    color: $darkgray;\n    font-size: 13px;\n    line-height: 24px;\n    padding: 0 16px;\n    margin: 0;\n    text-align: center;\n  }\n\n  .card-footer {\n    bottom: 0;\n    border-top: 0.5px solid $lightgray;\n    box-sizing: border-box;\n    line-height: 48px;\n    left: 0;\n    position: absolute;\n    right: 0;\n    text-align: right;\n    color: $mediumgray;\n\n    a {\n      color: $mediumgray;\n      font-size: 13px;\n    }\n  }\n  .card-footer.center {\n    text-align: center;\n  }\n}\n","code-example, code-tabs {\n    clear: both;\n    display: block;\n}\n\ncode-example,\ncode-tabs mat-tab-body {\n  &:not(.no-box) {\n    background-color: rgba($backgroundgray, 0.2);\n    border: 0.5px solid $lightgray;\n    border-radius: 5px;\n    color: $darkgray;\n    margin: 16px auto;\n  }\n\n  &.no-box {\n    pre {\n      margin: 0;\n    }\n    code {\n      background-color: transparent;\n    }\n  }\n\n  code {\n    overflow: auto;\n  }\n}\n\n// TERMINAL / SHELL TEXT STYLES\n\ncode-example.code-shell, code-example[language=sh], code-example[language=bash] {\n  background-color: $darkgray;\n}\n\ncode-example header {\n  background-color: $accentgrey;\n  border-radius: 5px 5px 0 0;\n  color: $offwhite;\n  font-size: 16px;\n  padding: 8px 16px;\n}\n\ncode-example.avoid header,\ncode-example.avoidFile header {\n  border: 2px solid $anti-pattern;\n  background: $anti-pattern;\n}\n\ncode-example.avoid,\ncode-example.avoidFile,\ncode-tabs.avoid mat-tab-body,\ncode-tabs.avoidFile mat-tab-body {\n  border: 0.5px solid $anti-pattern;\n}\n\ncode-tabs div .mat-tab-body-content {\n  height: auto;\n}\n\ncode-tabs .mat-tab-body-wrapper mat-tab-body .mat-tab-body {\n  overflow-y: hidden;\n}\n\ncode-tabs mat-tab-body-content .fadeIn {\n  animation: opacity 2s ease-in;\n}\n\naio-code pre {\n    display: flex;\n    min-height: 32px;\n    margin: 16px 24px;\n    white-space: pre-wrap;\n    align-items: center;\n\n    code span {\n      line-height: 24px;\n    }\n}\n\n\n.code-missing {\n  color: $darkred;\n}\n\n\n.copy-button,\n.edit-button {\n  position: absolute;\n  top: -8px;\n  right: -32px;\n\n  color: $blue-grey-200;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    color: $mediumgray;\n  }\n}\n.edit-button {\n  right: 0;\n}\n\n.lang-sh .copy-button, .lang-bash .copy-button {\n  color: $mediumgray;\n  &:hover {\n    color: $lightgray;\n  }\n}\n\n.code-tab-group .mat-tab-label {\n  white-space: nowrap;\n}\n\n.code-tab-group .mat-tab-body-content {\n  height: auto;\n  transform: none;\n}\n\n\n[role=\"tabpanel\"] {\n    transition: none;\n}\n\n.sidenav-content code a {\n  color: inherit;\n  font-size: inherit;\n}\n\n/* PRETTY PRINTING STYLES for prettify.js. */\n\n.prettyprint {\n  position: relative;\n}\n\n/* Specify class=linenums on a pre to get line numbering */\nol.linenums {\n  margin: 0;\n  font-family: $main-font;\n  color: #B3B6B7;\n  li {\n    margin: 0;\n    font-family: $code-font;\n    font-size: 90%;\n    line-height: 24px;\n  }\n}\n\n/* The following class|color styles are derived from https://github.com/google/code-prettify/blob/master/src/prettify.css*/\n\n/* SPAN elements with the classes below are added by prettyprint. */\n.pln { color: #000 }  /* plain text */\n\n@media screen {\n  .str { color: #800 }  /* string content */\n  .kwd { color: #00f }  /* a keyword */\n  .com { color: #060 }  /* a comment */\n  .typ { color: #de0000 }  /* a type name */\n  .lit { color: #0074af }  /* a literal value */\n  /* punctuation, lisp open bracket, lisp close bracket */\n  .pun, .opn, .clo { color: #660 }\n  .tag { color: #008 }  /* a markup tag name */\n  .atn { color: #606 }  /* a markup attribute name */\n  .atv { color: #800 }  /* a markup attribute value */\n  .dec, .var { color: #606 }  /* a declaration; a variable name */\n  .fun { color: #de0000 }  /* a function name */\n}\n\n/* Use higher contrast and text-weight for printable form. */\n@media print, projection {\n  .str { color: #060 }\n  .kwd { color: #006; font-weight: bold }\n  .com { color: #600; font-style: italic }\n  .typ { color: #404; font-weight: bold }\n  .lit { color: #044 }\n  .pun, .opn, .clo { color: #440 }\n  .tag { color: #006; font-weight: bold }\n  .atn { color: #404 }\n  .atv { color: #060 }\n}\n\n/* SHELL / TERMINAL CODE BLOCKS */\n\ncode-example.code-shell, code-example[language=sh], code-example[language=bash] {\n  & .pnk, .blk,.pln, .otl, .kwd, .typ, .tag, .str, .atv, .atn, .com, .lit, .pun, .dec {\n    color: $codegreen;\n  }\n}\n",".contribute-container {\n  h2 {\n    margin: 0;\n  }\n\n  .l-sub-section {\n    width: 90%;\n    margin-bottom: 20px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n","aio-contributor-list {\n  @media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 900px) {\n    .grid-fluid{\n      width: auto;\n    }\n  }\n\n  @media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 900px) {\n    .grid-fluid{\n      margin-left: 20px;\n      margin-right: 20px;\n      float: none;\n      display: block;\n      width: auto;\n    }\n  }\n}\n\n.group-buttons {\n  margin: 32px auto;\n\n  a {\n    &.selected {\n      background-color: $pink;\n      color: white;\n    }\n  }\n}\n\n.contributor-group {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\naio-contributor {\n  background: $white;\n  margin: 8px;\n  position: relative;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 2px 2px rgba(10, 16, 20, 0.24), 0 0 2px rgba(10, 16, 20, 0.12);\n  transition: all .3s;\n  perspective: 800px;\n\n  &:hover {\n    transform: translate3d(0,-3px,0);\n    box-shadow: 0 8px 8px rgba(10, 16, 20, 0.24), 0 0 8px rgba(10, 16, 20, 0.12);\n\n    .contributor-image {\n      transform: scale(1.05);\n    }\n\n    .contributor-info {\n      opacity: 1;\n    }\n  }\n\n  .contributor-info {\n    background: rgba($darkgray, 0.5);\n    height: 168px;\n    width: 168px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    opacity: 0;\n    border-radius: 50%;\n\n    [mat-button] {\n      color: $white;\n      font-size: 14px;\n      font-weight: 500;\n      margin: 8px;\n      padding: 0;\n\n      &:hover {\n        color: $lightgray;\n      }\n\n      &.icon {\n        min-width: 20px;\n        width: 20px;\n\n        .fa-2x {\n          font-size: 20px;\n        }\n      }\n    }\n  }\n\n  div.contributor-card {\n    width: 250px;\n    height: 270px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    position: relative;\n    overflow: hidden;\n    border-radius: 4px;\n    transform-style:preserve-3d;\n    transition:transform ease 500ms;\n\n    h3 {\n      margin: 8px 0;\n    }\n\n    .card-front, .card-back {\n      width: 100%;\n      height: 100%;\n      text-align: center;\n      display: flex;\n      flex-direction: column;\n      box-sizing: border-box;\n    }\n\n    .card-front {\n      justify-content: center;\n    }\n\n    .card-back {\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      padding: 16px 24px;\n      transform:rotateY(180deg);\n\n      section {\n        display: none;\n      }\n\n      p {\n        margin: 8px 0;\n        font-size: 12px;\n        line-height: 14px;\n        text-align: left;\n      }\n\n    }\n\n    &.flipped {\n      transform:rotateY(180deg);\n      .card-front {\n        display: none;\n      }\n    }\n  }\n\n  .contributor-image {\n    display: flex;\n    justify-content: center;\n    border-radius: 50%;\n    align-items: center;\n    height: 168px;\n    width: 168px;\n    background-size: cover;\n    background-position: center;\n    margin: 8px auto;\n    border: 2px solid $lightgray;\n    transition: all .2s ease-in-out;\n  }\n\n  section {\n    font-size: 14px;\n    font-weight: 500;\n    padding: 8px;\n    margin: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    text-transform: uppercase;\n  }\n\n  p {\n    cursor: pointer;\n    font-size: 14px;\n    line-height: 18px;\n    margin: 8px 16px;\n    text-overflow: ellipsis;\n    overflow: scroll;\n    font-weight: 400;\n  }\n}\n",".edit-page-cta {\n    font-weight: 400;\n    font-size: 14px;\n    color: $pink;\n    text-align: right;\n    margin-right: 32px;\n    display: block;\n    position: absolute;\n    right: 0;\n}","// FEATURES MARKETING PAGE SPECIFIC STYLES\n\n.feature-section {\n  margin: 0 0 32px;\n\n  .feature-header, .text-headline {\n    text-align: center;\n  }\n\n  .feature-header img {\n    margin: 16px;\n  }\n\n  .feature-title {\n    font-size: 16px;\n    font-weight: 500;\n    margin: 8px 0px;\n    clear: both;\n  }\n\n  .feature-row {\n    display: flex;\n    flex-wrap: wrap;\n\n    @media (max-width: 600px) {\n      flex-direction: column;\n    }\n\n    .feature {\n      max-width: 300px;\n      margin: 0 16px;  \n      \n      @media (max-width: 768px) {\n        max-width: 100%;\n      }\n    }\n  }\n}",".filetree {\n  background: $offwhite;\n  border: 4px solid $lightgray;\n  border-radius: 4px;\n  margin: 0 0 24px 0;\n  padding: 16px 32px;\n\n  .file {\n    display: block;\n    font-family: $main-font;\n    letter-spacing: 0.3px;\n    line-height: 32px;\n    color: $darkgray;\n  }\n\n  .children {\n    padding-left: 24px;\n    position: relative;\n    overflow: hidden;\n\n    .file {\n      position: relative;\n\n      &:before {\n        content: '';\n        left: -18px;\n        bottom: 16px;\n        width: 16px;\n        height: 9999px;\n        position: absolute;\n        border-width: 0 0 1px 1px;\n        border-style: solid;\n        border-color: $lightgray;\n        border-radius: 0 0 0 3px;\n      }\n    }\n  }\n}",".sidenav-content {\n  h1, h2, h3, h4, h5, h6 {\n\n    .header-link {\n      color: $mediumgray;\n      margin: 0 4px;\n      text-decoration: none;\n      user-select: none;\n      visibility: hidden;\n      display: inline-block;\n      vertical-align: text-top;\n    }\n\n    &:hover .header-link {\n      visibility: visible;\n    }\n  }\n}\n","hr {\n    border: none;\n    background: $lightgray;\n    height: 1px;\n}\n\n.hr-margin {\n    display: block;\n    height: 1px;\n    border: 0;\n    margin-top: 16px;\n    margin-bottom: 16px;\n    padding: 0;\n}",".content {\n  img {\n\n    &.right {\n      clear: both;\n      float: right;\n      margin-left: 20px;\n      margin-bottom: 20px;\n    }\n\n    &.left {\n      clear: both;\n      float: left;\n      margin-right: 20px;\n      margin-bottom: 20px;\n    }\n\n    @media (max-width: 1300px) {\n      max-width: 100%;\n      height: auto;\n    }\n\n    @media (max-width: 600px) {\n      float: none !important;\n      &.right {\n        margin-left: 0;\n      }\n      &.left {\n        margin-right: 0;\n      }\n    }\n  }\n\n  figure {\n    border-radius: 4px;\n    background: $white;\n    padding: 20px;\n    display: inline-block;\n    box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, .2);\n    margin: 0 0 14px 0;\n\n    img {\n      border-radius: 4px;\n    }\n  }\n}\n",".progress-bar-container {\n  height: 2px;\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  z-index: 11;\n}\n","table {\n  margin: 24px 0px;\n  box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n  border-radius: 2px;\n  background: $offwhite;\n\n  &.is-full-width {\n    width: 100%;\n  }\n\n  &.is-fixed-layout {\n    table-layout: fixed;\n  }\n\n  thead > {\n    vertical-align: middle;\n    border-color: inherit;\n\n    tr {\n      vertical-align: inherit;\n      border-color: inherit;\n    }\n\n    tr > th {\n      background: rgba($lightgray, 0.2);\n      border-bottom: 1px solid $lightgray;\n      color: $darkgray;\n      font-size: 12px;\n      font-weight: 500;\n      padding: 8px 24px;\n      text-align: left;\n      text-transform: uppercase;\n      line-height: 28px;\n    }\n  }\n\n  tbody > tr {\n    th,\n    td {\n      border-bottom: 1px solid $lightgray;\n      padding: 16px;\n      text-align: left;\n      line-height: 24px;\n      vertical-align: top;\n\n      @media (max-width: 480px) {\n        &:before {\n          // content: **ADD TABLE HEADER**;\n          display: inline-block;\n        }\n      }\n\n    }\n\n    td {\n      letter-spacing: 0.30px;\n\n    tr td:first-child {\n      @media (max-width: 480px) {\n        background-color: $lightgray;\n      }\n    }\n\n    }\n\n    th {\n      background: rgba($lightgray, 0.2);\n      border-right: 1px solid $lightgray;\n      font-weight: 600;\n      max-width: 100px;\n    }\n\n    &:last-child td {\n      border: none;\n\n      @media (max-width: 480px) {\n        border-bottom: 1px solid $lightgray;\n      }\n    }\n  }\n}\n\n#cheatsheet {\n\n  table tbody td {\n    overflow: auto;\n  }\n\n  @media only screen and (max-width: 990px) {\n\n    /* Force table to not be like tables anymore */\n    table, thead, tbody, tfoot, tr, th, td {\n      display: block;\n      position: relative;\n      max-width: 100%;\n\n      code {\n        padding: 0;\n        background-color: inherit;\n      }\n    }\n\n    th {\n      border-right: none;\n    }\n\n    th, td {\n      &:not(:last-child) {\n        border-bottom: none;\n        padding-bottom: 0px;\n      }\n    }\n  }\n}\n",".presskit-container {\n  padding: 0 32px 32px 32px;\n\n  h2 {\n    color: #37474F;\n  }\n\n  .l-space-left-3 {\n    margin-left: 3 * 8px;\n  }\n\n  .cc-by-anchor {\n    text-decoration: underline;\n    color: grey !important;\n  }\n\n  .presskit-row {\n    margin: 48px 0;\n    width: 100%;\n\n    .presskit-inner {\n      display: flex;\n      align-items: center;\n\n      @media(max-width: 599px) {\n        flex-direction: column;\n      }\n\n      h3 {\n        font-weight: 500;\n        margin-top: 0;\n        margin-bottom: 0;\n        color: #455A64;\n\n        @media(max-width: 599px) {\n          padding-bottom: 16px;\n        }\n      }\n\n      .transparent-img-bg {\n        margin-top: 10px;\n        border-radius: 4px;\n        width: 128px;\n        height: 128px;\n        background-color: #34474F;\n      }\n\n      ul {\n        padding: 0;\n        list-style-type: none;\n\n        @media(max-width: 599px) {\n          padding: 0 !important;\n          margin: 0 !important;\n        }\n\n        li {\n          margin: 0 0 8px 0;\n        }\n      }\n    }\n\n    .presskit-image-container {\n\n      @media(max-width: 599px) {\n        text-align: center;\n      }\n\n      img {\n        width: 128px;\n        height: 128px;\n        margin-bottom: 8px * 2;\n      }\n    }\n  }\n\n  .presskit-row:first-child {\n    margin-top: 0;\n\n    @media(max-width: 599px) {\n      margin-top: 48px;\n    }\n  }\n}\n",".showcase {\n  width: 80%;\n}\n\n.c-resource-nav {\n  width: 20%;\n}\n\n.resources-container {\n  position: relative;\n}\n\n.grid-fixed:after, .grid-fixed:before {\n  content: '.';\n  clear: both;\n  display: block;\n  overflow: hidden;\n  visibility: hidden;\n  font-size: 0;\n  line-height: 0;\n  width: 0;\n  height: 0;\n}\n\n@media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 900px) {\n  .grid-fixed {\n    width: auto;\n  }\n}\n\n@media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 900px) {\n  .grid-fixed .c3, .grid-fixed .c8 {\n    margin-left: 20px;\n    margin-right: 20px;\n    float: none;\n    display: block;\n    width: auto;\n  }\n}\n\n@media handheld and (max-width: 480px), screen and (max-width: 480px), screen and (max-width: 480px) {\n  .grid-fixed .c3, .grid-fixed .c8 {\n    margin-left: 0px;\n    margin-right: 0px;\n    float: none;\n    display: block;\n    width: auto;\n  }\n}\n\n@media handheld and (max-width: 900px), screen and (max-width: 900px) {\n  /* line 6, ../scss/_responsive.scss */\n  .grid-fixed{\n    margin: 0 auto;\n    *zoom: 1;\n  }\n  .grid-fixed:after, .grid-fixed:before, {\n    content: '.';\n    clear: both;\n    display: block;\n    overflow: hidden;\n    visibility: hidden;\n    font-size: 0;\n    line-height: 0;\n    width: 0;\n    height: 0;\n  }\n}\n\n@media handheld and (max-width: 480px), screen and (max-width: 480px) {\n  /* line 6, ../scss/_responsive.scss */\n  .grid-fixed {\n    margin: 0 auto;\n    *zoom: 1;\n  }\n  .grid-fixed:after, .grid-fixed:before {\n    content: '.';\n    clear: both;\n    display: block;\n    overflow: hidden;\n    visibility: hidden;\n    font-size: 0;\n    line-height: 0;\n    width: 0;\n    height: 0;\n  }\n}\n\naio-resource-list {\n\n  .shadow-1 {\n    transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\n    box-shadow: 0 1px 4px 0 rgba($black, 0.37);\n  }\n\n  .showcase {\n    margin-bottom: 8px * 6;\n    border-radius: 4px;\n  }\n\n  .c-resource {\n    h4 {\n      margin: 0;\n      line-height: 24px;\n    }\n\n    p {\n      margin: 0;\n    }\n  }\n\n  .c-resource-nav {\n    position: fixed;\n    top: 142px;\n    right: 32px;\n    width: 8px * 20;\n    z-index: 1;\n    background-color: #fff;\n    border-radius: 2px;\n\n    a {\n      color: #373E41;\n      text-decoration: none;\n    }\n\n    .category {\n      padding: 10px 0;\n\n      .category-link {\n        display: block;\n        margin: 2px 0;\n        padding: 3px 14px;\n        font-size: 18px !important;\n\n        &:hover {\n          background: #edf0f2;\n          color: #2B85E7;\n        }\n      }\n    }\n\n    .subcategory {\n      .subcategory-link {\n        display: block;\n        margin: 2px 0;\n        padding: 4px 14px;\n\n        &:hover {\n          background: #edf0f2;\n          color: #2B85E7;\n        }\n      }\n    }\n  }\n\n  .h-anchor-offset {\n    display: block;\n    position: relative;\n    top: -20px;\n    visibility: hidden;\n  }\n\n  .l-flex--column {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .c-resource-header {\n    margin-bottom: 16px;\n  }\n\n  .c-contribute {\n    margin-bottom: 24px;\n  }\n\n  .c-resource-header h2 {\n    margin: 0;\n  }\n\n  .subcategory-title {\n    padding: 16px 23px;\n    margin: 0;\n    background-color: $mist;\n    color: #373E41;\n  }\n\n  .h-capitalize {\n    text-transform: capitalize;\n  }\n\n  .h-hide {\n    display: none;\n  }\n\n  .resource-row-link {\n    color: #1a2326;\n    border: transparent solid 1px;\n    margin: 0;\n    padding: 16px 23px 16px 23px;\n    position: relative;\n    text-decoration: none;\n    transition: all .3s;\n  }\n\n  .resource-row-link:hover {\n    color: #1a2326;\n    text-decoration: none;\n    border-color: #2B85E7;\n    border-radius: 4px;\n    box-shadow: 0 8px 8px rgba(1, 67, 163, .24), 0 0 8px rgba(1, 67, 163, .12), 0 6px 18px rgba(43, 133, 231, .12);\n    transform: translateY(-2px);\n  }\n\n  @media(max-width: 900px) {\n    .c-resource-nav {\n      display: none;\n    }\n  }\n}\n","body::-webkit-scrollbar, mat-sidenav.sidenav::-webkit-scrollbar, .mat-sidenav-content::-webkit-scrollbar {\n  height: 6px;\n  width: 6px;\n}\n\nbody::-webkit-scrollbar-track, mat-sidenav.sidenav::-webkit-scrollbar-track, .mat-sidenav-content::-webkit-scrollbar-track {\n  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n}\n\nbody::-webkit-scrollbar-thumb, mat-sidenav.sidenav::-webkit-scrollbar-thumb, .mat-sidenav-content::-webkit-scrollbar-thumb {\n  background-color: $mediumgray;\n  outline: 1px solid $darkgray;\n}\n\n.search-results::-webkit-scrollbar, .toc-container::-webkit-scrollbar {\n  height: 4px;\n  width: 4px;\n}\n\n.search-results::-webkit-scrollbar-track, .toc-container::-webkit-scrollbar-track {\n  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n}\n\n.search-results::-webkit-scrollbar-thumb, .toc-container::-webkit-scrollbar-thumb {\n  background-color: $mediumgray;\n  outline: 1px solid slategrey;\n}\n","aio-search-results {\n    z-index: 10;\n}\n\n.search-results {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    overflow: auto;\n    padding: 68px 32px 0;\n    color: $offwhite;\n    width: auto;\n    max-height: 95vh;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 5;\n    background-color: $darkgray;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\n    box-sizing: border-box;\n\n    @media (max-width: 480px) {\n        display: block;\n        .search-area {\n            display: block;\n            margin: 16px 16px;\n        }\n    }\n}\n\naio-search-results.embedded .search-results {\n    padding: 0;\n    color: inherit;\n    width: auto;\n    max-height: 100%;\n    position: relative;\n    background-color: inherit;\n    box-shadow: none;\n    box-sizing: border-box;\n\n    .search-area a {\n        color: lighten($darkgray, 10);\n        &:hover {\n            color: $accentgrey;\n        }\n    }\n}\n\n.search-area {\n    display: flex;\n    flex-direction: column;\n    margin: 16px 16px;\n    height: 100%;\n\n    h3 {\n        font-size: 16px;\n        font-weight: 400;\n        margin: 10px 0px 5px;\n        text-transform: uppercase;\n    }\n\n    ul {\n        margin: 0;\n        padding: 0;\n\n        li {\n            display: inline-block;\n            list-style: none;\n            min-width: 270px;\n            padding: .5em 1.5em;\n        }\n    }\n\n    a {\n        font-size: 14px;\n        color: $lightgray;\n        text-decoration: none;\n        font-weight: normal;\n        &:hover {\n            color: $white;\n        }\n        &:visited {\n          text-decoration: none;\n        }\n\n        span.symbol {\n          margin-right: 8px;\n        }\n    }\n\n    .priority-pages {\n        padding: 0.5rem 0;\n        a {\n            font-weight: bold;\n        }\n    }\n\n    @include bp(tiny) {\n        display: block;\n    }\n}\n",".l-sub-section {\n    color: $darkgray;\n    background-color: rgba($pink, 0.05);\n    border-left: 8px solid $pink;\n    padding: 16px;\n    margin-bottom: 8px;\n    display: table;\n    clear: both;\n    width: 100%;\n    box-sizing: border-box;\n\n    h3 {\n        margin: 8px 0 0;\n    }\n\n    a:hover {\n        color: $pink;\n        text-decoration: underline;\n    }\n}",".toc-container {\n  width: 18%;\n  position: fixed;\n  top: 76px;\n  right: 0;\n  bottom: 12px;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n\naio-toc.embedded {\n  @media (min-width: 801px) {\n    display: none;\n  }\n\n  .toc-inner {\n    padding: 12px 0 0 0;\n\n    .toc-heading {\n      margin: 0 0 8px;\n    }\n  }\n}\n\n.toc-inner {\n  font-size: 13px;\n  overflow-y: visible;\n  padding: 4px 0 0 10px;\n\n  .toc-heading,\n  .toc-list .h1 {\n    font-size: 115%;\n  }\n\n  .toc-heading {\n    font-weight: 500;\n    margin: 0 0 16px 8px;\n    padding: 0;\n  }\n\n  .toc-heading.secondary {\n    position: relative;\n    top: -8px;\n\n    &:hover {\n      color: $accentgrey;\n    }\n  }\n\n  button.toc-heading,\n  button.toc-more-items {\n    cursor: pointer;\n    display: inline-block;\n    background: 0;\n    background-color: transparent;\n    border: none;\n    box-shadow: none;\n    padding: 0;\n    text-align: start;\n\n    &.embedded:focus {\n      outline: none;\n      background: $lightgray;\n    }\n  }\n\n  button.toc-heading {\n    mat-icon.rotating-icon {\n      height: 18px;\n      width: 18px;\n      position: relative;\n      left: -4px;\n      top: 5px;\n    }\n\n    &:hover:not(.embedded) {\n      color: $accentgrey;\n    }\n  }\n\n  button.toc-more-items {\n    color: $mediumgray;\n    top: 10px;\n    position: relative;\n\n    &:hover {\n      color: $accentgrey;\n    }\n  }\n\n  button.toc-more-items::after {\n    content: 'expand_less';\n  }\n\n  button.toc-more-items.collapsed::after {\n    content: 'more_horiz';\n  }\n\n\n  .mat-icon.collapsed {\n    @include rotate(0deg);\n  }\n\n  .mat-icon:not(.collapsed) {\n    @include rotate(90deg);\n    // margin: 4px;\n  }\n\n  ul.toc-list {\n    list-style-type: none;\n    margin: 0;\n    padding: 0 8px 0 0;\n\n    @media (max-width: 800px) {\n      width: auto;\n    }\n\n    li {\n      box-sizing: border-box;\n      font-size: 12px;\n      line-height: 16px;\n      padding: 3px 0 3px 12px;\n      position: relative;\n      transition: all 0.3s ease-in-out;\n\n      &.h1:after {\n        content: '';\n        display: block;\n        height: 1px;\n        width: 40%;\n        margin: 7px 0 4px 0;\n        background: #DBDBDB;\n        clear: both;\n      }\n\n      &.h3 {\n        padding-left: 24px;\n      }\n\n      a {\n        font-size: inherit;\n        color: lighten($darkgray, 10);\n        display:table-cell;\n        overflow: visible;\n        font-size: 12px;\n        display: table-cell;\n      }\n\n      &:hover a {\n        color: $accentgrey;\n      }\n\n      &.active {\n        a {\n          color: $pink;\n          font-weight: 500;\n\n          &:before {\n            content: '';\n            border-radius: 50%;\n            left: -3px;\n            top: 12px;\n            background: $pink;\n            position: absolute;\n            width: 6px;\n            height: 6px;\n          }\n        }\n      }\n    }\n\n    &:not(.embedded) li {\n      &:before {\n        border-left: 1px solid $lightgray;\n        bottom: 0;\n        content: '';\n        left: 0;\n        position: absolute;\n        top: 0;\n      }\n\n      &:first-child:before {\n        top: 13px;\n      }\n\n      &:last-child:before {\n        bottom: calc(100% - 14px);\n      }\n\n      &:not(.active):hover a:before {\n        content: '';\n        border-radius: 50%;\n        left: -3px;\n        top: 12px;\n        background: $lightgray;\n        position: absolute;\n        width: 6px;\n        height: 6px;\n      }\n    }\n  }\n\n}\n\naio-toc.embedded > div.collapsed li.secondary {\n  display: none;\n}\n","/* SELECT MENU */\n\n.form-select-menu {\n  position: relative;\n}\n\n.form-select-button {\n  background: $white;\n  box-shadow: 0 2px 2px rgba($black, 0.24), 0 0 2px rgba($black, 0.12);\n  box-sizing: border-box;\n  border: 1px solid $white;\n  color: $blue-grey-600;\n  font-size: 12px;\n  font-weight: 400;\n  height: 32px;\n  line-height: 32px;\n  outline: none;\n  padding: 0 16px;\n  text-align: left;\n  width: 100%;\n  cursor: pointer;\n\n  strong {\n    font-weight: 600;\n    margin-right: 8px;\n    text-transform: uppercase;\n  }\n\n  &:focus {\n    border: 1px solid $blue-400;\n    box-shadow: 0 2px 2px rgba($blue-400, 0.24), 0 0 2px rgba($blue-400, 0.12);\n  }\n}\n\n.form-select-dropdown {\n  background: $white;\n  box-shadow: 0 16px 16px rgba($black, 0.24), 0 0 16px rgba($black, 0.12);\n  border-radius: 4px;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  z-index: $layer-2;\n\n  li {\n    cursor: pointer;\n    font-size: 14px;\n    line-height: 32px;\n    margin: 0;\n    padding: 0 16px 0 40px;\n    position: relative;\n    transition: all .2s;\n\n    &:hover {\n      background: $blue-grey-50;\n      color: $blue-500;\n    }\n\n    &.selected {\n      background-color: $blue-grey-100;\n    }\n\n    .symbol {\n      left: 16px;\n      position: absolute;\n      top: 8px;\n      z-index: $layer-5;\n    }\n  }\n}\n","\naio-shell.mode-archive {\n\n  .mat-toolbar.mat-primary, footer {\n    background: linear-gradient(145deg,#263238,#78909C);\n  }\n\n  .vertical-menu-item {\n    &.selected, &:hover {\n      color: #263238;\n    }\n  }\n\n  .toc-inner ul.toc-list li.active a {\n    color: #263238;\n\n    &:before {\n      background-color: #263238;\n    }\n  }\n\n  .toc-inner ul.toc-list li:hover a {\n    color: #263238;\n  }\n}\n\naio-shell.mode-next {\n\n  .mat-toolbar.mat-primary, footer {\n    background: linear-gradient(145deg,#DD0031,#C3002F);\n  }\n\n  .vertical-menu-item {\n    &.selected, &:hover {\n      color: #DD0031;\n    }\n  }\n\n  .toc-inner ul.toc-list li.active a {\n    color: #DD0031;\n\n    &:before {\n      background-color: #DD0031;\n    }\n  }\n\n  .toc-inner ul.toc-list li:hover a {\n    color: #DD0031;\n  }\n}\n","$notificationHeight: 56px;\n\n// we need to override some of the toolbar styling\n.mat-toolbar mat-toolbar-row.notification-container {\n  padding: 0;\n  height: auto;\n  overflow: hidden;\n}\n\naio-notification {\n  background: $darkgray;\n  display: flex;\n  position: relative;\n  align-items: center;\n  width: 100%;\n  height: $notificationHeight;\n  justify-content: center;\n\n  @media (max-width: 430px) {\n    justify-content: flex-start;\n    padding-left: 10px;\n  }\n\n  .close-button {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: $notificationHeight;\n    height: $notificationHeight;\n    background: $darkgray;\n  }\n\n  .content {\n    display: flex;\n    max-width: calc(100% - #{$notificationHeight});\n    text-transform: none;\n    padding: 0;\n\n    .icon {\n      margin-right: 10px;\n      @media (max-width: 464px) {\n        display: none;\n      }\n    }\n\n    .message {\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .action-button {\n      margin-left: 10px;\n      background: $pink;\n      border-radius: 15px;\n      text-transform: uppercase;\n      padding: 6px 10px;\n      font-size: 12px;\n      @media (max-width: 780px) {\n        display: none;\n      }\n    }\n  }\n}\n\n// Here are all the hacks to make the content and sidebars the right height\n// when the notification is visible\n.aio-notification-show {\n  .sidenav-content {\n    padding-top: 80px + $notificationHeight;\n  }\n\n  mat-sidenav.mat-sidenav.sidenav {\n    top: 56px + $notificationHeight;\n\n    @media (max-width: 600px) {\n      top: 56px + $notificationHeight;\n    }\n  }\n\n  .toc-container {\n    top: 76px + $notificationHeight;\n  }\n\n  .search-results {\n    padding-top: 68px + $notificationHeight;\n  }\n\n  &.page-home, &.page-resources, &.page-events, &.page-features, &.page-presskit, &.page-contribute  {\n    section {\n      padding-top: $notificationHeight;\n    }\n  }\n}\n\n// Animate the content when the notification bar is dismissed\n// this should be kept in sync with the animation durations in\n// - aio/src/app/layout/notification/notification.component.ts\n// - aio/src/app/app.component.ts : notificationDismissed()\n.aio-notification-animating {\n  .sidenav-content {\n    transition: padding-top 250ms ease;\n  }\n  mat-sidenav.mat-sidenav.sidenav, .toc-container {\n    transition: top 250ms ease;\n  }\n}\n","label.raised, .api-header label {\n    border-radius: 4px;\n    padding: 4px 16px;\n    display: inline;\n    font-size: 14px;\n    color: white;\n    margin-right: 8px;\n    font-weight: 500;\n    text-transform: uppercase;\n\n    @media screen and (max-width: 600px) {\n        display: block;\n        margin: 8px 0;\n    }\n\n    &.page-label {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        background-color: $mist;\n        color: $mediumgray;\n        margin-bottom: 8px;\n        width: 140px;\n\n        .material-icons {\n            margin-right: 8px;\n        }\n    }\n\n    &.property-type-label {\n        font-size: 12px;\n        background-color: $darkgray;\n        color: $white;\n        text-transform: none;\n    }\n}\n\n.api-header {\n\n    margin-right: 10px;\n\n    label {\n\n        // The API badges should be a little smaller\n        padding: 2px 10px;\n        font-size: 12px;\n\n        @media screen and (max-width: 600px) {\n            margin: 4px 0;\n        }\n\n        &.api-status-label {\n            background-color: $mediumgray;\n\n            &.impure-pipe {\n                background-color: $brightred;\n            }\n\n            &.operator {\n                background-color: $brightred;\n            }\n        }\n\n        &.api-type-label {\n            background-color: $accentgrey;\n\n            @each $name, $symbol in $api-symbols {\n                &.#{$name} {\n                    background: map-get($symbol, background);\n                }\n            }\n\n        }\n    }\n}\n",".debug {\n  [translation-result], code-tabs, code-example, img, code, pre, .filetree {\n    display: none;\n  }\n}\n\n[translation-result] + [translation-origin=off] {\n  display: none;\n}\n\n[translation-result] + aio-toc + [translation-origin=off] {\n  display: none;\n}\n\n[translation-origin=on] {\n  border-top: 1px dashed #0273D4;\n}\n\n[id^=translations-cn] {\n  aio-doc-viewer {\n    blockquote {\n      color: #455A64;\n      margin: 0 0 32px 0;\n      padding: 16px 32px;\n      background: rgba(236, 239, 241, 0.24);\n      border-left: 4px solid #00BCD4;\n    }\n  }\n}\n\nem {\n  font-style: normal;\n  font-weight: bold;\n}\n"],"names":[],"sourceRoot":"webpack:///"}