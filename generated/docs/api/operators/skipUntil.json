{
  "id": "api/operators/skipUntil",
  "title": "skipUntil",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/skipUntil.ts?message=docs(operators)%3A%20describe%20your%20change...#L7-L81\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/skipUntil.ts#L7-L81\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/skipUntil\", \"name\": \"skipUntil\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"skipuntil\">skipUntil<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/skipUntil#skipuntil\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    <label class=\"api-status-label operator\">運算子</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">回傳一個 Observable，它會跳過源 Observable 傳送的條目，直到第二個 Observable 發出一個條目為止。</p><p translation-origin=\"off\">Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.</p>\n\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a>&#x3C;T>(notifier: <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;any>): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>notifier</td>\n      \n      <td class=\"param-description\">\n        <p translation-result=\"on\">第二個 Observable，它必須傳送一個條目，結果 Observable 才會開始映象源 Observable 中的元素。</p><p translation-origin=\"off\">      The second Observable that has to emit an item before the source Observable's elements begin to\n  be mirrored by the resulting Observable.</p>\n  \n  \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">回傳一個 Observable 的函式，該 Observable 會跳過源 Observable 中的條目，直到第二個 Observable 發出一個條目時，該 Observable 才會發出剩下的條目。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that skips items from the\nsource Observable until the second Observable emits an item, then emits the\nremaining items.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/skipUntil#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\"><code><a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a></code> 運算子會使 observable 流跳過傳送的值，直到傳入的 observable 發出了第一個值為止。這在需要組合使用者互動、http 請求回應或等待特定時間過去時特別有用。</p><p translation-origin=\"off\">The <code><a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a></code> operator causes the observable stream to skip the emission of values until the passed in observable emits the first value.\nThis can be particularly useful in combination with user interactions, responses of http requests or waiting for specific times to pass by.</p>\n\n<p><img src=\"/assets/images/marble-diagrams/skipUntil.png\" width=\"100%\" alt=\"skipUntil marble diagram\"></p>\n<p translation-result=\"on\">在內部，<code><a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a></code> 運算子會訂閱傳入的 observable（在下面稱為<em>通知器（notifier）</em>），以便監聽它何時發出第一個值。發生這種情況時，運算子會退訂<em>通知器</em>並開始傳送<em>源</em> observable 的值。如果<em>通知器</em>完成或丟擲錯誤而之前沒有傳送值，則它永遠不會讓<em>源</em> observable 傳送任何值。</p><p translation-origin=\"off\">Internally the <code><a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a></code> operator subscribes to the passed in observable (in the following called <em>notifier</em>) in order to recognize the emission\nof its first value. When this happens, the operator unsubscribes from the <em>notifier</em> and starts emitting the values of the <em>source</em>\nobservable. It will never let the <em>source</em> observable emit any values if the <em>notifier</em> completes or throws an error without emitting\na value before.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/skipUntil#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/skipUntil#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">在下面的範例中，所有傳送的區間 observable 值都將被跳過，直到使用者單擊頁面中的任意位置</p><p translation-origin=\"off\">In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere within the page</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst intervalObservable = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000);\nconst click = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\n\nconst emitAfterClick = intervalObservable.pipe(\n  <a href=\"api/index/function/skipUntil\" class=\"code-anchor\">skipUntil</a>(click)\n);\n// clicked at 4.6s. output: 5...6...7...8........ or\n// clicked at 7.3s. output: 8...9...10..11.......\nemitAfterClick.subscribe(value => console.log(value));\n</code-example>\n\n</section>\n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/skipUntil#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/last\"><code>last</code></a>\n</li>\n    <li><a href=\"api/operators/skip\"><code>skip</code></a>\n</li>\n    <li><a href=\"api/operators/skipWhile\"><code>skipWhile</code></a>\n</li>\n    <li><a href=\"api/operators/skipLast\"><code>skipLast</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/last\n - api/operators/skip\n - api/operators/skipLast\n - api/operators/skipWhile\n-->\n<!-- links from this doc:\n - /api\n - api/index/class/Observable\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/skipUntil\n - api/index/interface/MonoTypeOperatorFunction\n - api/operators\n - api/operators/last\n - api/operators/skip\n - api/operators/skipLast\n - api/operators/skipUntil#description\n - api/operators/skipUntil#example\n - api/operators/skipUntil#see-also\n - api/operators/skipUntil#skipuntil\n - api/operators/skipWhile\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/skipUntil.ts?message=docs(operators)%3A%20describe%20your%20change...#L7-L81\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/skipUntil.ts#L7-L81\n-->"
}