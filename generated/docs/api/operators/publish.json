{
  "id": "api/operators/publish",
  "title": "publish",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/publish.ts?message=docs(operators)%3A%20describe%20your%20change...#L47-L120\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/publish.ts#L47-L120\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/publish\", \"name\": \"publish\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"publish\">publish<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/publish#publish\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    <label class=\"api-status-label deprecated\">已棄用</label>\n    \n    \n    \n    <label class=\"api-status-label operator\">運算子</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">回傳一個 ConnectableObservable，它是一個 Observable 的變體，它會一直等到其 connect 方法被呼叫，才開始向訂閱了它的 Observer 傳送項目。</p><p translation-origin=\"off\">Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\nbefore it begins emitting items to those Observers that have subscribed to it.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">使冷 Observable 變成熱的</span></p><p translation-origin=\"off\"><span class=\"informal\">Makes a cold Observable hot</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/publish.png\" width=\"100%\" alt=\"publish marble diagram\"></p>\n<h2 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/publish#examples\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/publish#examples\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">可以使用 <code><a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a></code> 運算子使 <code>source$</code> 變熱，然後將每個內部 observable 合併為一個並訂閱</p><p translation-origin=\"off\">Make <code>source$</code> hot by applying <code><a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a></code> operator, then merge each inner observable into a single one\nand subscribe</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/zip\" class=\"code-anchor\">zip</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>, <a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a>, <a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a>, <a href=\"api/index/function/tap\" class=\"code-anchor\">tap</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst source$ = <a href=\"api/index/function/zip\" class=\"code-anchor\">zip</a>(<a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(2000), <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3, 4, 5, 6, 7, 8, 9))\n  .pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(([, number]) => number));\n\nsource$\n  .pipe(\n    <a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a>(multicasted$ =>\n      <a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a>(\n        multicasted$.pipe(<a href=\"api/index/function/tap\" class=\"code-anchor\">tap</a>(x => console.log('Stream 1:', x))),\n        multicasted$.pipe(<a href=\"api/index/function/tap\" class=\"code-anchor\">tap</a>(x => console.log('Stream 2:', x))),\n        multicasted$.pipe(<a href=\"api/index/function/tap\" class=\"code-anchor\">tap</a>(x => console.log('Stream 3:', x)))\n      )\n    )\n  )\n  .subscribe();\n\n// Results <a href=\"api/index/function/every\" class=\"code-anchor\">every</a> two seconds\n// Stream 1: 1\n// Stream 2: 1\n// Stream 3: 1\n// ...\n// Stream 1: 9\n// Stream 2: 9\n// Stream 3: 9\n</code-example>\n<p></p>\n  \n\n  \n<section class=\"deprecated\">\n  <h2 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/publish#deprecation-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">將在 v8 中刪除。請改用 <a href=\"api/index/function/connectable\"><code>connectable</code></a> observable、<a href=\"api/operators/connect\"><code>connect</code></a> 運算子或 <a href=\"api/operators/share\"><code>share</code></a> 運算子。有關此運算子行為的等效替換範例，請參見其它的過載。詳細訊息： <a href=\"https://rxjs.dev/deprecations/multicasting\">https://rxjs.dev/deprecations/multicasting</a></p><p translation-origin=\"off\">Will be removed in v8. Use the <a href=\"api/index/function/connectable\"><code>connectable</code></a> observable, the <a href=\"api/operators/connect\"><code>connect</code></a> operator or the\n<a href=\"api/operators/share\"><code>share</code></a> operator instead. See the overloads below for equivalent replacement examples of this operator's\nbehaviors.\nDetails: <a href=\"https://rxjs.dev/deprecations/multicasting\">https://rxjs.dev/deprecations/multicasting</a></p>\n\n\n</section>\n\n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a>&#x3C;T, R>(selector?: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, R>): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T> | <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, R></code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/publish#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">將在 v8 中刪除。請改用 <a href=\"api/index/function/connectable\"><code>connectable</code></a> observable、<a href=\"api/operators/connect\"><code>connect</code></a> 運算子或 <a href=\"api/operators/share\"><code>share</code></a> 運算子。有關此運算子行為的等效替換範例，請參見其它的過載。詳細訊息： <a href=\"https://rxjs.dev/deprecations/multicasting\">https://rxjs.dev/deprecations/multicasting</a></p><p translation-origin=\"off\">Will be removed in v8. Use the <a href=\"api/index/function/connectable\"><code>connectable</code></a> observable, the <a href=\"api/operators/connect\"><code>connect</code></a> operator or the\n<a href=\"api/operators/share\"><code>share</code></a> operator instead. See the overloads below for equivalent replacement examples of this operator's\nbehaviors.\nDetails: <a href=\"https://rxjs.dev/deprecations/multicasting\">https://rxjs.dev/deprecations/multicasting</a></p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>selector</td>\n      \n      <td class=\"param-description\">\n      <p>        可選。預設值為 <code>undefined</code>。</p>\n<p translation-result=\"on\">  可選的選擇器函式，可以根據需要多次使用多播的源序列，而不會導致對源序列的多次訂閱。此源的訂閱者將從訂閱之時起收到該源的所有通知。</p><p translation-origin=\"off\">        Optional selector function which can use the multicasted source sequence as many times\nas needed, without causing multiple subscriptions to the source sequence.\nSubscribers to the given source will receive all notifications of the source from the time of the subscription on.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">一個回傳 ConnectableObservable 的函式，在連線該 Observable 時會導致來源 Observable 向其 Observers 傳送項目。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T> | <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, R></code>: A function that returns a ConnectableObservable that upon connection\ncauses the source Observable to emit items to its Observers.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/publish#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/publishLast\"><code>publishLast</code></a>\n</li>\n    <li><a href=\"api/operators/publishReplay\"><code>publishReplay</code></a>\n</li>\n    <li><a href=\"api/operators/publishBehavior\"><code>publishBehavior</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/deprecations\n - api/operators\n - api/operators/publishLast\n - api/operators/refCount\n - api/operators/shareReplay\n-->\n<!-- links from this doc:\n - /api\n - api/index/function/connectable\n - api/index/function/every\n - api/index/function/from\n - api/index/function/interval\n - api/index/function/map\n - api/index/function/merge\n - api/index/function/of\n - api/index/function/publish\n - api/index/function/tap\n - api/index/function/zip\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/interface/OperatorFunction\n - api/operators\n - api/operators/connect\n - api/operators/publish#deprecation-notes\n - api/operators/publish#examples\n - api/operators/publish#publish\n - api/operators/publish#see-also\n - api/operators/publishBehavior\n - api/operators/publishLast\n - api/operators/publishReplay\n - api/operators/share\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/publish.ts?message=docs(operators)%3A%20describe%20your%20change...#L47-L120\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/publish.ts#L47-L120\n - https://rxjs.dev/deprecations/multicasting\n-->"
}