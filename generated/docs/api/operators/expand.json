{
  "id": "api/operators/expand",
  "title": "expand",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/expand.ts?message=docs(operators)%3A%20describe%20your%20change...#L24-L119\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/expand.ts#L24-L119\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/expand\", \"name\": \"expand\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"expand\">expand<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/expand#expand\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    <label class=\"api-status-label operator\">運算子</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">遞迴地將每個源值投影為一個 Observable，該 Observable 會被合併到輸出 Observable 中。</p><p translation-origin=\"off\">Recursively projects each source value to an Observable which is merged in\nthe output Observable.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">它類似於 <a href=\"api/operators/mergeMap\"><code>mergeMap</code></a>，但會將投影函式應用於每個源值以及每個輸出值。它是遞迴的。</span></p><p translation-origin=\"off\"><span class=\"informal\">It's similar to <a href=\"api/operators/mergeMap\"><code>mergeMap</code></a>, but applies the\nprojection function to every source value as well as every output value.\nIt's recursive.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/expand.png\" width=\"100%\" alt=\"expand marble diagram\"></p>\n<p translation-result=\"on\">回傳一個 Observable，該 Observable 將針對來源 Observable 發出的每個項目呼叫某個函式，該函式會回傳一個 Observable，然後合併這些結果 Observable，併發送其所有項目。<em>expand</em> 會在輸出 Observable 上重新傳送每個源的每個值。然後，對每個輸出值呼叫 <code>project</code> 函式，該函式會回傳一個內部 Observable，並將其合併到輸出 Observable 上。此投影產生的那些輸出值也會再傳給 <code>project</code> 函式以產生新的輸出值。這就是 <em>expand</em> 的遞迴式行為。</p><p translation-origin=\"off\">Returns an Observable that emits items based on applying a function that you\nsupply to each item emitted by the source Observable, where that function\nreturns an Observable, and then merging those resulting Observables and\nemitting the results of this merger. <em>Expand</em> will re-emit on the output\nObservable every source value. Then, each output value is given to the\n<code>project</code> function which returns an inner Observable to be merged on the\noutput Observable. Those output values resulting from the projection are also\ngiven to the <code>project</code> function to produce new output values. This is how\n<em>expand</em> behaves recursively.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/expand#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/expand#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">每次點選時開始傳送 2 的冪，最多 10 個</p><p translation-origin=\"off\">Start emitting the powers of two on every click, at most 10 of them</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>, <a href=\"api/index/function/expand\" class=\"code-anchor\">expand</a>, <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/delay\" class=\"code-anchor\">delay</a>, <a href=\"api/index/function/take\" class=\"code-anchor\">take</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst powersOfTwo = clicks.pipe(\n  <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(() => 1),\n  <a href=\"api/index/function/expand\" class=\"code-anchor\">expand</a>(x => <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(2 * x).pipe(<a href=\"api/index/function/delay\" class=\"code-anchor\">delay</a>(1000))),\n  <a href=\"api/index/function/take\" class=\"code-anchor\">take</a>(10)\n);\npowersOfTwo.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/expand\" class=\"code-anchor\">expand</a>&#x3C;T, O extends <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;unknown>>(project: (value: T, index: number) => O, concurrent: number = Infinity, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/type-alias/ObservedValueOf\" class=\"code-anchor\">ObservedValueOf</a>&#x3C;O>></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>project</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">一個函式，當應用於由來源 Observable 或輸出 Observable 傳送的項目時，會回傳一個 Observable。</p><p translation-origin=\"off\">        A function\nthat, when applied to an item emitted by the source or the output Observable,\nreturns an Observable.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>concurrent</td>\n      \n      <td class=\"param-description\">\n      <p>        可選。預設值為 <code>Infinity</code>。</p>\n<p translation-result=\"on\">要同時訂閱的輸入 Observable 的最大數量。</p><p translation-origin=\"off\">        Maximum number of input\nObservables being subscribed to concurrently.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n      <p>        可選。預設值為 <code>undefined</code>。</p>\n<p translation-result=\"on\">一個 <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a>，用於訂閱每個投影出的內部 Observable。</p><p translation-origin=\"off\">        The <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> to use for subscribing to\neach projected inner Observable.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">一個函式，它回傳一個傳送源值的 Observable 並針對輸出 Observable 上傳送的每個值呼叫投影函式，併合並從此轉換來的 Observable 的結果。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/type-alias/ObservedValueOf\" class=\"code-anchor\">ObservedValueOf</a>&#x3C;O>></code>: A function that returns an Observable that emits the source values\nand also result of applying the projection function to each value emitted on\nthe output Observable and merging the results of the Observables obtained\nfrom this transformation.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/expand#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/mergeMap\"><code>mergeMap</code></a>\n</li>\n    <li><a href=\"api/operators/mergeScan\"><code>mergeScan</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/reduce\n - api/operators/scan\n-->\n<!-- links from this doc:\n - /api\n - api/index/function/delay\n - api/index/function/expand\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/map\n - api/index/function/of\n - api/index/function/take\n - api/index/interface/OperatorFunction\n - api/index/interface/SchedulerLike\n - api/index/type-alias/ObservableInput\n - api/index/type-alias/ObservedValueOf\n - api/operators\n - api/operators/expand#example\n - api/operators/expand#expand\n - api/operators/expand#see-also\n - api/operators/mergeMap\n - api/operators/mergeScan\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/expand.ts?message=docs(operators)%3A%20describe%20your%20change...#L24-L119\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/expand.ts#L24-L119\n-->"
}