{
  "id": "api/operators/sample",
  "title": "sample",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/sample.ts?message=docs(operators)%3A%20describe%20your%20change...#L6-L81\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/sample.ts#L6-L81\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/sample\", \"name\": \"sample\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"sample\">sample<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/sample#sample\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    <label class=\"api-status-label operator\">運算子</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">每當另一個 Observable（<code>notifier</code>）傳送時，就會從源 Observable 傳送最近發出的值。</p><p translation-origin=\"off\">Emits the most recently emitted value from the source Observable whenever\nanother Observable, the <code>notifier</code>, emits.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">它很像 <a href=\"api/operators/sampleTime\"><code>sampleTime</code></a>，但會在 <code>notifier</code> Observable 傳送了某些東西時取樣。</span></p><p translation-origin=\"off\"><span class=\"informal\">It's like <a href=\"api/operators/sampleTime\"><code>sampleTime</code></a>, but samples whenever\nthe <code>notifier</code> Observable emits something.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/sample.png\" width=\"100%\" alt=\"sample marble diagram\"></p>\n<p translation-result=\"on\">每當此 <code>notifier</code> Observable 發出一個值時，<code><a href=\"api/index/function/sample\" class=\"code-anchor\">sample</a></code> 就會檢視源 Observable 併發送自上次取樣以來它最近發出的任何值，除非源自上次取樣以來沒有傳送任何值。一旦訂閱了輸出 Observable，就會訂閱此 <code>notifier</code>。</p><p translation-origin=\"off\">Whenever the <code>notifier</code> Observable emits a value, <code><a href=\"api/index/function/sample\" class=\"code-anchor\">sample</a></code>\nlooks at the source Observable and emits whichever value it has most recently\nemitted since the previous sampling, unless the source has not emitted\nanything since the previous sampling. The <code>notifier</code> is subscribed to as soon\nas the output Observable is subscribed.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/sample#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/sample#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">每次點選時，取樣最近的 <code>seconds</code> 定時器</p><p translation-origin=\"off\">On every click, sample the most recent <code>seconds</code> timer</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/sample\" class=\"code-anchor\">sample</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst seconds = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000);\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst result = seconds.pipe(<a href=\"api/index/function/sample\" class=\"code-anchor\">sample</a>(clicks));\n\nresult.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/sample\" class=\"code-anchor\">sample</a>&#x3C;T>(notifier: <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;any>): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>notifier</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">用於對源 Observable 進行取樣的 Observable。</p><p translation-origin=\"off\">        The Observable to use for sampling the\nsource Observable.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">一個回傳 Observable 的函式，當通知器 Observable 傳送了值或完成時，它就會傳送對源 Observable 傳送的值進行取樣的結果。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that emits the results of\nsampling the values emitted by the source Observable whenever the notifier\nObservable emits value or completes.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/sample#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/audit\"><code>audit</code></a>\n</li>\n    <li><a href=\"api/operators/debounce\"><code>debounce</code></a>\n</li>\n    <li><a href=\"api/operators/sampleTime\"><code>sampleTime</code></a>\n</li>\n    <li><a href=\"api/operators/throttle\"><code>throttle</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/audit\n - api/operators/debounce\n - api/operators/debounceTime\n - api/operators/delay\n - api/operators/delayWhen\n - api/operators/sampleTime\n - api/operators/throttle\n-->\n<!-- links from this doc:\n - /api\n - api/index/class/Observable\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/sample\n - api/index/interface/MonoTypeOperatorFunction\n - api/operators\n - api/operators/audit\n - api/operators/debounce\n - api/operators/sample#example\n - api/operators/sample#sample\n - api/operators/sample#see-also\n - api/operators/sampleTime\n - api/operators/throttle\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/sample.ts?message=docs(operators)%3A%20describe%20your%20change...#L6-L81\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/sample.ts#L6-L81\n-->"
}