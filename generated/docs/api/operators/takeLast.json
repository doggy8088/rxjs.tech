{
  "id": "api/operators/takeLast",
  "title": "takeLast",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/takeLast.ts?message=docs(operators)%3A%20describe%20your%20change...#L5-L97\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/takeLast.ts#L5-L97\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/takeLast\", \"name\": \"takeLast\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"takelast\">takeLast<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/takeLast#takelast\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    <label class=\"api-status-label operator\">運算子</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">等待源完成，然後從源傳送最後 N 個值，由 <code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> 引數指定。</p><p translation-origin=\"off\">Waits for the source to complete, then emits the last N values from the source,\nas specified by the <code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> argument.</p>\n\n<p><img src=\"/assets/images/marble-diagrams/takeLast.png\" width=\"100%\" alt=\"takeLast marble diagram\"></p>\n<p translation-result=\"on\"><code><a href=\"api/index/function/takeLast\" class=\"code-anchor\">takeLast</a></code> 產生一個 observable，它將在記憶體中保存最多 <code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> 個值，直到源完成。然後它會將記憶體中的所有值按從源接收到的順序推送給消費者，然後通知消費者它已完成。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/takeLast\" class=\"code-anchor\">takeLast</a></code> results in an observable that will hold values up to <code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> values in memory,\nuntil the source completes. It then pushes all values in memory to the consumer, in the\norder they were received from the source, then notifies the consumer that it is\ncomplete.</p>\n\n<p translation-result=\"on\">如果由於某種原因，源在達到提供給 <code><a href=\"api/index/function/takeLast\" class=\"code-anchor\">takeLast</a></code> 的 <code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> 個之前就已完成，則會發送到此時間點為止接收到的所有值，然後通知完成。</p><p translation-origin=\"off\">If for some reason the source completes before the <code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> supplied to <code><a href=\"api/index/function/takeLast\" class=\"code-anchor\">takeLast</a></code> is reached,\nall values received until that point are emitted, and then completion is notified.</p>\n\n<p translation-result=\"on\"><strong>警告</strong>：將 <code><a href=\"api/index/function/takeLast\" class=\"code-anchor\">takeLast</a></code> 與永遠不會完成的 Observable 一起使用將導致一個永遠不會傳送值的 Observable。</p><p translation-origin=\"off\"><strong>Warning</strong>: Using <code><a href=\"api/index/function/takeLast\" class=\"code-anchor\">takeLast</a></code> with an observable that never completes will result\nin an observable that never emits a value.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/takeLast#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/takeLast#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">取具有多個值的 Observable 的最後 3 個值</p><p translation-origin=\"off\">Take the last 3 values of an Observable with many values</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/range\" class=\"code-anchor\">range</a>, <a href=\"api/index/function/takeLast\" class=\"code-anchor\">takeLast</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst many = <a href=\"api/index/function/range\" class=\"code-anchor\">range</a>(1, 100);\nconst lastThree = many.pipe(<a href=\"api/index/function/takeLast\" class=\"code-anchor\">takeLast</a>(3));\nlastThree.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/takeLast\" class=\"code-anchor\">takeLast</a>&#x3C;T>(<a href=\"api/index/function/count\" class=\"code-anchor\">count</a>: number): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>count</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">要從來源 Observable 的值序列的末尾處傳送的最大數量。</p><p translation-origin=\"off\">        The maximum number of values to emit from the end of\nthe sequence of values emitted by the source Observable.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">一個回傳 Observable 的函式，該 Observable 最多傳送來源 Observable 傳送的最後 <code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> 個值。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that emits at most the last\n<code><a href=\"api/index/function/count\" class=\"code-anchor\">count</a></code> values emitted by the source Observable.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/takeLast#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/take\"><code>take</code></a>\n</li>\n    <li><a href=\"api/operators/takeUntil\"><code>takeUntil</code></a>\n</li>\n    <li><a href=\"api/operators/takeWhile\"><code>takeWhile</code></a>\n</li>\n    <li><a href=\"api/operators/skip\"><code>skip</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/take\n - api/operators/takeUntil\n - api/operators/takeWhile\n-->\n<!-- links from this doc:\n - /api\n - api/index/function/count\n - api/index/function/from\n - api/index/function/range\n - api/index/function/takeLast\n - api/index/interface/MonoTypeOperatorFunction\n - api/operators\n - api/operators/skip\n - api/operators/take\n - api/operators/takeLast#example\n - api/operators/takeLast#see-also\n - api/operators/takeLast#takelast\n - api/operators/takeUntil\n - api/operators/takeWhile\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/takeLast.ts?message=docs(operators)%3A%20describe%20your%20change...#L5-L97\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/takeLast.ts#L5-L97\n-->"
}