{
  "id": "api/operators/mergeScan",
  "title": "mergeScan",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/mergeScan.ts?message=docs(operators)%3A%20describe%20your%20change...#L4-L121\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/mergeScan.ts#L4-L121\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/mergeScan\", \"name\": \"mergeScan\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"mergescan\">mergeScan<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/mergeScan#mergescan\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    <label class=\"api-status-label operator\">運算子</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">在來源 Observable 上呼叫累加器函式，該函式會回傳一個 Observable，然後把回傳的每個中間 Observable 合併到輸出 Observable 中。</p><p translation-origin=\"off\">Applies an accumulator function over the source Observable where the\naccumulator function itself returns an Observable, then each intermediate\nObservable returned is merged into the output Observable.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">它很像 <a href=\"api/operators/scan\"><code>scan</code></a>，但是該累加器回傳的 Observable 會被合併到外部 Observable 中。</span></p><p translation-origin=\"off\"><span class=\"informal\">It's like <a href=\"api/operators/scan\"><code>scan</code></a>, but the Observables returned\nby the accumulator are merged into the outer Observable.</span></p>\n\n<p translation-result=\"on\"><code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> 的第一個引數是一個 <code>accumulator</code> 函式，每當來源 Observable 傳送一個值時都會呼叫它。<code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> 會訂閱 <code>accumulator</code> 函式回傳的值，並將這些值傳送給內部 Observable 的訂閱者。</p><p translation-origin=\"off\">The first parameter of the <code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> is an <code>accumulator</code> function which is\nbeing called every time the source Observable emits a value. <code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> will\nsubscribe to the value returned by the <code>accumulator</code> function and will emit\nvalues to the subscriber emitted by inner Observable.</p>\n\n<p translation-result=\"on\">呼叫 <code>accumulator</code> 函式時要傳給它三個引數： <code>acc</code>、<code>value</code> 和 <code>index</code>。<code>acc</code> 引數用作狀態參數，其值最初設定為 <code>seed</code> 引數（即傳給 <code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> 運算子的第二個引數）。</p><p translation-origin=\"off\">The <code>accumulator</code> function is being called with three parameters passed to it:\n<code>acc</code>, <code>value</code> and <code>index</code>. The <code>acc</code> parameter is used as the state parameter\nwhose value is initially set to the <code>seed</code> parameter (the second parameter\npassed to the <code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> operator).</p>\n\n<p translation-result=\"on\"><code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> 會在內部保留 <code>acc</code> 引數的值：當來源 Observable 發出了值而內部 Observable 沒有傳送時，<code>acc</code> 就會被設定為 <code>seed</code>。下次當內部 Observable 傳送一個值時，<code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> 就會在內部記住它，並在下次 source 發出值時將它作為 <code>acc</code> 引數傳給 <code>accumulator</code> 函式。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> internally keeps the value of the <code>acc</code> parameter: as long as the\nsource Observable emits without inner Observable emitting, the <code>acc</code> will be\nset to <code>seed</code>. The next time the inner Observable emits a value, <code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code>\nwill internally remember it and it will be passed to the <code>accumulator</code>\nfunction as <code>acc</code> parameter the next time source emits.</p>\n\n<p translation-result=\"on\"><code>accumulator</code> 函式的 <code>value</code> 引數是來源 Observable 發出的值，而 <code>index</code> 是一個數字，表示來源 Observable 當前傳送的序號。它從 0 開始。</p><p translation-origin=\"off\">The <code>value</code> parameter of the <code>accumulator</code> function is the value emitted by the\nsource Observable, while the <code>index</code> is a number which represent the order of the\ncurrent emission by the source Observable. It starts with 0.</p>\n\n<p translation-result=\"on\"><code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> 的最後一個引數是 <code>concurrent</code> 值，預設為 Infinity。它表示每次訂閱內部 Observable 的最大數量。</p><p translation-origin=\"off\">The last parameter to the <code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> is the <code>concurrent</code> value which defaults\nto Infinity. It represents the maximum number of inner Observable subscriptions\nat a time.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/mergeScan#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/mergeScan#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">統計點選事件的數量</p><p translation-origin=\"off\">Count the number of click events</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>, <a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a>, <a href=\"api/index/function/of\" class=\"code-anchor\">of</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst click$ = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst one$ = click$.pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(() => 1));\nconst seed = 0;\nconst <a href=\"api/index/function/count\" class=\"code-anchor\">count</a>$ = one$.pipe(\n  <a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a>((acc, one) => <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(acc + one), seed)\n);\n\n<a href=\"api/index/function/count\" class=\"code-anchor\">count</a>$.subscribe(x => console.log(x));\n\n// Results:\n// 1\n// 2\n// 3\n// 4\n// ...and so on for each click\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a>&#x3C;T, R>(accumulator: (acc: R, value: T, index: number) => <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;R>, seed: R, concurrent: number = Infinity): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, R></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>accumulator</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">要針對源的每個值進行呼叫的累加器函式。</p><p translation-origin=\"off\">        The accumulator function called on each source value.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>seed</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">累加初始值。</p><p translation-origin=\"off\">        The initial accumulation value.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>concurrent</td>\n      \n      <td class=\"param-description\">\n      <p>        可選。預設值為 <code>Infinity</code>。</p>\n<p translation-result=\"on\">要同時訂閱的輸入 Observable 的最大數量。</p><p translation-origin=\"off\">        Maximum number of\ninput Observables being subscribed to concurrently.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">回傳累加結果的 Observable 的函式。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction&#x3C;T, R></a></code>: A function that returns an Observable of the accumulated values.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/mergeScan#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/scan\"><code>scan</code></a>\n</li>\n    <li><a href=\"api/operators/switchScan\"><code>switchScan</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/expand\n - api/operators/mergeAll\n - api/operators/mergeMap\n - api/operators/mergeMapTo\n - api/operators/reduce\n - api/operators/scan\n - api/operators/switchScan\n-->\n<!-- links from this doc:\n - /api\n - api/index/function/count\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/map\n - api/index/function/mergeScan\n - api/index/function/of\n - api/index/interface/OperatorFunction\n - api/index/type-alias/ObservableInput\n - api/operators\n - api/operators/mergeScan#example\n - api/operators/mergeScan#mergescan\n - api/operators/mergeScan#see-also\n - api/operators/scan\n - api/operators/switchScan\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/mergeScan.ts?message=docs(operators)%3A%20describe%20your%20change...#L4-L121\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/mergeScan.ts#L4-L121\n-->"
}