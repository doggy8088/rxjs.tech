{
  "id": "api/operators/throttleTime",
  "title": "throttleTime",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/throttleTime.ts?message=docs(operators)%3A%20describe%20your%20change...#L5-L119\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/throttleTime.ts#L5-L119\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/throttleTime\", \"name\": \"throttleTime\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"throttletime\">throttleTime<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/throttleTime#throttletime\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">从源 Observable 发送一个值，然后在 <code>duration</code> 毫秒内忽略后续源值，然后重复此过程。</p><p translation-origin=\"off\">Emits a value from the source Observable, then ignores subsequent source\nvalues for <code>duration</code> milliseconds, then repeats this process.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">让一个值通过，然后在下一个 <code>duration</code> 毫秒内忽略源值。</span></p><p translation-origin=\"off\"><span class=\"informal\">Lets a value pass, then ignores source values for the\nnext <code>duration</code> milliseconds.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/throttleTime.png\" width=\"100%\" alt=\"throttleTime marble diagram\"></p>\n<p translation-result=\"on\">当内部定时器被禁用时，<code><a href=\"api/index/function/throttleTime\" class=\"code-anchor\">throttleTime</a></code> 会在输出 Observable 上发送源 Observable 的值，并在定时器启用时忽略源值。最初，定时器被禁用。一旦第一个源值抵达，它就会被转发到输出 Observable，然后启用计时器。在 <code>duration</code> 毫秒（或由可选的 <code>scheduler</code> 内部确定的时间单位）过去之后，此定时器被禁用，并且对下一个源值重复此过程。可以选择使用 <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> 来管理计时器。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/throttleTime\" class=\"code-anchor\">throttleTime</a></code> emits the source Observable values on the output Observable\nwhen its internal timer is disabled, and ignores source values when the timer\nis enabled. Initially, the timer is disabled. As soon as the first source\nvalue arrives, it is forwarded to the output Observable, and then the timer\nis enabled. After <code>duration</code> milliseconds (or the time unit determined\ninternally by the optional <code>scheduler</code>) has passed, the timer is disabled,\nand this process repeats for the next source value. Optionally takes a\n<a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> for managing timers.</p>\n\n<h2 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/throttleTime#examples\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/throttleTime#examples\"><i class=\"material-icons\">link</i></a></h2>\n\n<h3 id=\"limit-click-rate\" translation-result=\"on\">限制点击率<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/throttleTime#limit-click-rate\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"limit-click-rate\">Limit click rate<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/throttleTime#limit-click-rate\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">以每秒最多一次点击的速度发送点击</p><p translation-origin=\"off\">Emit clicks at a rate of at most one click per second</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/throttleTime\" class=\"code-anchor\">throttleTime</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst result = clicks.pipe(<a href=\"api/index/function/throttleTime\" class=\"code-anchor\">throttleTime</a>(1000));\n\nresult.subscribe(x => console.log(x));\n</code-example>\n<h3 id=\"double-click\" translation-result=\"on\">双击<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/throttleTime#double-click\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"double-click\">Double Click<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/throttleTime#double-click\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">以下示例只会发送在前一次点击的 400 毫秒后的延迟内发生的点击。例如，这可以模拟双击。它会使用 throttle 配置中的 <code>trailing</code> 参数。</p><p translation-origin=\"off\">The following example only emits clicks which happen within a subsequent\ndelay of 400ms of the previous click. This for example can emulate a double\nclick. It makes use of the <code>trailing</code> parameter of the throttle configuration.</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/throttleTime\" class=\"code-anchor\">throttleTime</a>, <a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\n// defaultThrottleConfig = { leading: true, trailing: false };\nconst throttleConfig = {\n  leading: false,\n  trailing: true\n};\n\nconst click = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst doubleClick = click.pipe(\n  <a href=\"api/index/function/throttleTime\" class=\"code-anchor\">throttleTime</a>(400, <a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a>, throttleConfig)\n);\n\ndoubleClick.subscribe(event => {\n  console.log(`Double-clicked! <a href=\"api/index/interface/Timestamp\" class=\"code-anchor\">Timestamp</a>: ${ event.timeStamp }`);\n});\n</code-example>\n<p translation-result=\"on\">如果你在此示例中启用了 <code>leading</code> 参数，则输出将只有主要的单击和双击，而会限制 400 毫秒内发生的其它单击。</p><p translation-origin=\"off\">If you enable the <code>leading</code> parameter in this example, the output would be the primary click and\nthe double click, but restricts additional clicks within 400ms.</p>\n\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/throttleTime\" class=\"code-anchor\">throttleTime</a>&#x3C;T>(duration: number, scheduler: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a> = <a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a>, <a href=\"api/index/const/config\" class=\"code-anchor\">config</a>: <a href=\"api/index/interface/ThrottleConfig\" class=\"code-anchor\">ThrottleConfig</a> = defaultThrottleConfig): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>duration</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">在发送最后一个值之后，在发送另一个值之前等待的时间，以毫秒或由可选 <code>scheduler</code> 内部确定的时间单位为单位。</p><p translation-origin=\"off\">        Time to wait before emitting another value after\nemitting the last value, measured in milliseconds or the time unit determined\ninternally by the optional <code>scheduler</code>.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n      <p>        可选。默认值为 <code><a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a></code>。</p>\n<p translation-result=\"on\">此 <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> 用于管理处理节流时的计时器。默认为 <a href=\"api/index/const/asyncScheduler\"><code>asyncScheduler</code></a>。</p><p translation-origin=\"off\">        The <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> to use for\nmanaging the timers that handle the throttling. Defaults to <a href=\"api/index/const/asyncScheduler\"><code>asyncScheduler</code></a>.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>config</td>\n      \n      <td class=\"param-description\">\n      <p>        可选。默认值为 <code>defaultThrottleConfig</code>。</p>\n<p translation-result=\"on\">用于定义 <code>leading</code> 和 <code>trailing</code> 行为的配置对象。默认为 <code>{ leading: true, trailing: false }</code>。</p><p translation-origin=\"off\">        a configuration object to define <code>leading</code> and\n<code>trailing</code> behavior. Defaults to <code>{ leading: true, trailing: false }</code>.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p translation-result=\"on\">一个返回 Observable 的函数，该 Observable 会执行节流操作以限制源的发送速度。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that performs the throttle\noperation to limit the rate of emissions from the source.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/operators/throttleTime#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/operators/auditTime\"><code>auditTime</code></a>\n</li>\n    <li><a href=\"api/operators/debounceTime\"><code>debounceTime</code></a>\n</li>\n    <li><a href=\"api/operators/delay\"><code>delay</code></a>\n</li>\n    <li><a href=\"api/operators/sampleTime\"><code>sampleTime</code></a>\n</li>\n    <li><a href=\"api/operators/throttle\"><code>throttle</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/auditTime\n - api/operators/debounce\n - api/operators/debounceTime\n - api/operators/delay\n - api/operators/delayWhen\n - api/operators/sampleTime\n - api/operators/throttle\n-->\n<!-- links from this doc:\n - /api\n - api/index/const/asyncScheduler\n - api/index/const/config\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/throttleTime\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/interface/SchedulerLike\n - api/index/interface/ThrottleConfig\n - api/index/interface/Timestamp\n - api/operators\n - api/operators/auditTime\n - api/operators/debounceTime\n - api/operators/delay\n - api/operators/sampleTime\n - api/operators/throttle\n - api/operators/throttleTime#double-click\n - api/operators/throttleTime#examples\n - api/operators/throttleTime#limit-click-rate\n - api/operators/throttleTime#see-also\n - api/operators/throttleTime#throttletime\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/throttleTime.ts?message=docs(operators)%3A%20describe%20your%20change...#L5-L119\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/throttleTime.ts#L5-L119\n-->"
}