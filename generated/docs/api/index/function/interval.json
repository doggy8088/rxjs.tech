{
  "id": "api/index/function/interval",
  "title": "interval",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/observable/interval.ts?message=docs(index)%3A%20describe%20your%20change...#L5-L75\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/observable/interval.ts#L5-L75\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/interval\", \"name\": \"interval\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"interval\">interval<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/interval#interval\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">建立一個 Observable，它在指定的 <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> 上按照指定的時間間隔傳送連續數列。</p><p translation-origin=\"off\">Creates an Observable that emits sequential numbers every specified\ninterval of time, on a specified <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a>.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">定期傳送增量數字。</span></p><p translation-origin=\"off\"><span class=\"informal\">Emits incremental numbers periodically in time.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/interval.png\" width=\"100%\" alt=\"interval marble diagram\"></p>\n<p translation-result=\"on\"><code><a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a></code> 會回傳一個 Observable，它傳送一個無限遞增的整數序列，在這些傳送之間有一個恆定的時間間隔。首次傳送不會立即發出，而是在第一個週期過去後發出。預設情況下，此運算子使用 <code>async</code> <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> 來提供時間概念，但你也可以將任何 <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> 傳給它。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a></code> returns an Observable that emits an infinite sequence of\nascending integers, with a constant interval of time of your choosing\nbetween those emissions. The first emission is not sent immediately, but\nonly after the first period has passed. By default, this operator uses the\n<code>async</code> <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> to provide a notion of time, but you may pass any\n<a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> to it.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/interval#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/interval#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">傳送升序數字，每秒一個（1000 毫秒）直到數字 3</p><p translation-origin=\"off\">Emits ascending numbers, one every second (1000ms) up to the number 3</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/take\" class=\"code-anchor\">take</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst numbers = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000);\n\nconst takeFourNumbers = numbers.pipe(<a href=\"api/index/function/take\" class=\"code-anchor\">take</a>(4));\n\ntakeFourNumbers.subscribe(x => console.log('Next: ', x));\n\n// Logs:\n// Next: 0\n// Next: 1\n// Next: 2\n// Next: 3\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(period: number = 0, scheduler: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a> = <a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;number></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>period</td>\n      \n      <td class=\"param-description\">\n      <p>        可選。預設值為 <code>0</code>。</p>\n<p translation-result=\"on\">以毫秒為單位的間隔大小（預設情況下）或由排程器的時鐘確定的時間單位。</p><p translation-origin=\"off\">        The interval size in milliseconds (by default)\nor the time unit determined by the scheduler's clock.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n      <p>        可選。預設值為 <code><a href=\"api/index/const/asyncScheduler\" class=\"code-anchor\">asyncScheduler</a></code>。</p>\n<p translation-result=\"on\">用於排程值的傳送，並提供『時間』的概念。</p><p translation-origin=\"off\">        The <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> to use for scheduling\nthe emission of values, and providing a notion of \"time\".</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">每個時間間隔傳送一個有序數字的 Observable。</p><p translation-origin=\"off\"><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;number></code>: An Observable that emits a sequential number each time\ninterval.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/interval#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/timer\"><code>timer</code></a>\n</li>\n    <li><a href=\"api/index/function/delay\"><code>delay</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/class/Observable\n - api/index/function/audit\n - api/index/function/buffer\n - api/index/function/bufferToggle\n - api/index/function/bufferWhen\n - api/index/function/combineLatestAll\n - api/index/function/concatAll\n - api/index/function/concatMap\n - api/index/function/concatMapTo\n - api/index/function/count\n - api/index/function/debounce\n - api/index/function/defaultIfEmpty\n - api/index/function/defer\n - api/index/function/delayWhen\n - api/index/function/empty\n - api/index/function/endWith\n - api/index/function/exhaustAll\n - api/index/function/exhaustMap\n - api/index/function/finalize\n - api/index/function/firstValueFrom\n - api/index/function/lastValueFrom\n - api/index/function/merge\n - api/index/function/mergeAll\n - api/index/function/mergeMap\n - api/index/function/mergeMapTo\n - api/index/function/observeOn\n - api/index/function/publish\n - api/index/function/publishLast\n - api/index/function/raceWith\n - api/index/function/range\n - api/index/function/reduce\n - api/index/function/refCount\n - api/index/function/repeat\n - api/index/function/retryWhen\n - api/index/function/sample\n - api/index/function/scan\n - api/index/function/share\n - api/index/function/shareReplay\n - api/index/function/skip\n - api/index/function/skipUntil\n - api/index/function/switchAll\n - api/index/function/switchMap\n - api/index/function/switchMapTo\n - api/index/function/take\n - api/index/function/takeUntil\n - api/index/function/tap\n - api/index/function/throttle\n - api/index/function/timeInterval\n - api/index/function/timeout\n - api/index/function/timer\n - api/index/function/toArray\n - api/index/function/window\n - api/index/function/windowToggle\n - api/index/function/windowWhen\n - api/index/function/withLatestFrom\n - api/index/interface/TimeInterval\n - api/operators/audit\n - api/operators/buffer\n - api/operators/bufferToggle\n - api/operators/bufferWhen\n - api/operators/combineLatestAll\n - api/operators/concatAll\n - api/operators/concatMap\n - api/operators/concatMapTo\n - api/operators/count\n - api/operators/debounce\n - api/operators/defaultIfEmpty\n - api/operators/delayWhen\n - api/operators/endWith\n - api/operators/exhaustAll\n - api/operators/exhaustMap\n - api/operators/finalize\n - api/operators/mergeAll\n - api/operators/mergeMap\n - api/operators/mergeMapTo\n - api/operators/observeOn\n - api/operators/publish\n - api/operators/publishLast\n - api/operators/raceWith\n - api/operators/reduce\n - api/operators/refCount\n - api/operators/repeat\n - api/operators/retryWhen\n - api/operators/sample\n - api/operators/scan\n - api/operators/share\n - api/operators/shareReplay\n - api/operators/skip\n - api/operators/skipUntil\n - api/operators/switchAll\n - api/operators/switchMap\n - api/operators/switchMapTo\n - api/operators/take\n - api/operators/takeUntil\n - api/operators/tap\n - api/operators/throttle\n - api/operators/timeInterval\n - api/operators/timeout\n - api/operators/toArray\n - api/operators/window\n - api/operators/windowToggle\n - api/operators/windowWhen\n - api/operators/withLatestFrom\n - deprecations/resultSelector\n - deprecations/to-promise\n - guide/observable\n - guide/operators\n - guide/scheduler\n - guide/subject\n - guide/subscription\n - guide/testing/marble-testing\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable\n - api/index/const/asyncScheduler\n - api/index/function/delay\n - api/index/function/from\n - api/index/function/interval#example\n - api/index/function/interval#interval\n - api/index/function/interval#see-also\n - api/index/function/take\n - api/index/function/timer\n - api/index/interface/SchedulerLike\n - https://github.com/reactivex/rxjs/edit/master/src/internal/observable/interval.ts?message=docs(index)%3A%20describe%20your%20change...#L5-L75\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/observable/interval.ts#L5-L75\n-->"
}