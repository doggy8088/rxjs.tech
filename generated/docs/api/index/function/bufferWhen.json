{
  "id": "api/index/function/bufferWhen",
  "title": "bufferWhen",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/bufferWhen.ts?message=docs(index)%3A%20describe%20your%20change...#L7-L108\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/bufferWhen.ts#L7-L108\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/bufferWhen\", \"name\": \"bufferWhen\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"bufferwhen\">bufferWhen<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/bufferWhen#bufferwhen\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    <label class=\"api-status-label operator\">運算子</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">緩衝來源 Observable 值，由工廠函式 closingSelector 來確定何時關閉、發出和重置緩衝區。</p><p translation-origin=\"off\">Buffers the source Observable values, using a factory function of closing\nObservables to determine when to close, emit, and reset the buffer.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">將已過去的值收集成數組。當它開始收集值時，就會呼叫一個回傳 Observable 的函式，由該函式決定何時關閉緩衝區並重新開始收集。</span></p><p translation-origin=\"off\"><span class=\"informal\">Collects values from the past as an array. When it\nstarts collecting values, it calls a function that returns an Observable that\ntells when to close the buffer and restart collecting.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/bufferWhen.png\" width=\"100%\" alt=\"bufferWhen marble diagram\"></p>\n<p translation-result=\"on\">立即開啟一個緩衝區，然後當 <code>closingSelector</code> 函式回傳的 observable 傳送一個值時關閉緩衝區。一旦關閉了緩衝區，就會立即開啟一個新緩衝區並重復該過程。</p><p translation-origin=\"off\">Opens a buffer immediately, then closes the buffer when the observable\nreturned by calling <code>closingSelector</code> function emits a value. When it closes\nthe buffer, it immediately opens a new buffer and repeats the process.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/bufferWhen#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/bufferWhen#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">每隔 [1-5] 秒隨機傳送最後一次點選的陣列</p><p translation-origin=\"off\">Emit an array of the last clicks every [1-5] random seconds</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/bufferWhen\" class=\"code-anchor\">bufferWhen</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst buffered = clicks.pipe(\n  <a href=\"api/index/function/bufferWhen\" class=\"code-anchor\">bufferWhen</a>(() => <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000 + Math.random() * 4000))\n);\nbuffered.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/bufferWhen\" class=\"code-anchor\">bufferWhen</a>&#x3C;T>(closingSelector: () => <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any>): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, T[]></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>closingSelector</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">一個不接受引數的函式，回傳一個指示緩衝區關閉的 Observable。</p><p translation-origin=\"off\">        A function that takes no\narguments and returns an Observable that signals buffer closure.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">一個回傳 Observable 的函式，該 Observable 的內容是一些由已緩衝的值構成的陣列。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, T[]></code>: A function that returns an Observable of arrays of buffered values.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/bufferWhen#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/buffer\"><code>buffer</code></a>\n</li>\n    <li><a href=\"api/index/function/bufferCount\"><code>bufferCount</code></a>\n</li>\n    <li><a href=\"api/index/function/bufferTime\"><code>bufferTime</code></a>\n</li>\n    <li><a href=\"api/index/function/bufferToggle\"><code>bufferToggle</code></a>\n</li>\n    <li><a href=\"api/index/function/windowWhen\"><code>windowWhen</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - 6-to-7-change-summary\n - api/index\n - api/index/function/buffer\n - api/index/function/bufferCount\n - api/index/function/bufferTime\n - api/index/function/bufferToggle\n - api/index/function/windowWhen\n - api/operators/bufferWhen\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/buffer\n - api/index/function/bufferCount\n - api/index/function/bufferTime\n - api/index/function/bufferToggle\n - api/index/function/bufferWhen#bufferwhen\n - api/index/function/bufferWhen#example\n - api/index/function/bufferWhen#see-also\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/windowWhen\n - api/index/interface/OperatorFunction\n - api/index/type-alias/ObservableInput\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/bufferWhen.ts?message=docs(index)%3A%20describe%20your%20change...#L7-L108\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/bufferWhen.ts#L7-L108\n-->"
}