{
  "id": "api/index/function/merge",
  "title": "merge",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/observable/merge.ts?message=docs(index)%3A%20describe%20your%20change...#L8-L9\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/observable/merge.ts#L8-L9\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/merge\", \"name\": \"merge\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"merge\">merge<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/merge#merge\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a>&#x3C;A extends readonly, unknown>()</code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <p>沒有引數。</p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n<section class=\"overloads\">\n  <h2 id=\"overloads\">過載形式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/merge#overloads\"><i class=\"material-icons\">link</i></a></h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a>()</code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <p>沒有引數。</p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a>()</code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/merge#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\"><code>scheduler</code> 引數將在 v8 中刪除。請改用 <code><a href=\"api/index/function/scheduled\" class=\"code-anchor\">scheduled</a></code> 和 <code><a href=\"api/index/function/mergeAll\" class=\"code-anchor\">mergeAll</a></code>。詳細訊息： <a href=\"https://rxjs.dev/deprecations/scheduler-argument\">https://rxjs.dev/deprecations/scheduler-argument</a></p><p translation-origin=\"off\">The <code>scheduler</code> parameter will be removed in v8. Use <code><a href=\"api/index/function/scheduled\" class=\"code-anchor\">scheduled</a></code> and <code><a href=\"api/index/function/mergeAll\" class=\"code-anchor\">mergeAll</a></code>. Details: <a href=\"https://rxjs.dev/deprecations/scheduler-argument\">https://rxjs.dev/deprecations/scheduler-argument</a></p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <p>沒有引數。</p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a>()</code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/merge#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\"><code>scheduler</code> 引數將在 v8 中刪除。請改用 <code><a href=\"api/index/function/scheduled\" class=\"code-anchor\">scheduled</a></code> 和 <code><a href=\"api/index/function/mergeAll\" class=\"code-anchor\">mergeAll</a></code>。詳細訊息： <a href=\"https://rxjs.dev/deprecations/scheduler-argument\">https://rxjs.dev/deprecations/scheduler-argument</a></p><p translation-origin=\"off\">The <code>scheduler</code> parameter will be removed in v8. Use <code><a href=\"api/index/function/scheduled\" class=\"code-anchor\">scheduled</a></code> and <code><a href=\"api/index/function/mergeAll\" class=\"code-anchor\">mergeAll</a></code>. Details: <a href=\"https://rxjs.dev/deprecations/scheduler-argument\">https://rxjs.dev/deprecations/scheduler-argument</a></p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <p>沒有引數。</p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a>(...args: (number | <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a> | <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown> | <a href=\"api/index/interface/InteropObservable\" class=\"code-anchor\">InteropObservable</a>&#x3C;unknown> | AsyncIterable&#x3C;unknown> | PromiseLike&#x3C;unknown> | ArrayLike&#x3C;unknown> | Iterable&#x3C;unknown> | <a href=\"api/index/interface/ReadableStreamLike\" class=\"code-anchor\">ReadableStreamLike</a>&#x3C;unknown>)[]): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code-example>\n\n\n  <div class=\"short-description\">\n    <p translation-result=\"on\">建立一個輸出 Observable，它會同時從每個給定的輸入 Observable 中傳送所有值。</p><p translation-origin=\"off\">Creates an output Observable which concurrently emits all values from every\ngiven input Observable.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">透過將多個 Observable 的值混合到一個 Observable 中來將多個 Observable 扁平化。</span></p><p translation-origin=\"off\"><span class=\"informal\">Flattens multiple Observables together by blending\ntheir values into one Observable.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/merge.png\" width=\"100%\" alt=\"merge marble diagram\"></p>\n<p translation-result=\"on\"><code><a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a></code> 訂閱每個給定的輸入 Observable（作為引數傳入），並簡單地將所有輸入 Observable 中的所有值轉發（不做任何轉換）到輸出 Observable。只有在所有輸入 Observable 都完成後，輸出 Observable 才會完成。輸入 Observable 傳遞的任何錯誤都會立即在輸出 Observable 上傳送。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a></code> subscribes to each given input Observable (as arguments), and simply\nforwards (without doing any transformation) all the values from all the input\nObservables to the output Observable. The output Observable only completes\nonce all input Observables have completed. Any error delivered by an input\nObservable will be immediately emitted on the output Observable.</p>\n\n<h2 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/merge#examples\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/merge#examples\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">將兩個 Observable 合併在一起：『一秒定時』和『點選』</p><p translation-origin=\"off\">Merge together two Observables: 1s interval and clicks</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a>, <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a> = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000);\nconst clicksOrTimer = <a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a>(clicks, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>);\nclicksOrTimer.subscribe(x => console.log(x));\n\n// Results in the following:\n// <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a> will emit ascending values, one <a href=\"api/index/function/every\" class=\"code-anchor\">every</a> second(1000ms) to console\n// clicks logs MouseEvents to console everytime the \"document\" is clicked\n// Since the two streams are merged you see these happening\n// as they occur.\n</code-example>\n<p translation-result=\"on\">合併 3 個 Observable，但同時執行 2 個</p><p translation-origin=\"off\">Merge together 3 Observables, but run only 2 concurrently</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/take\" class=\"code-anchor\">take</a>, <a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst timer1 = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000).pipe(<a href=\"api/index/function/take\" class=\"code-anchor\">take</a>(10));\nconst timer2 = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(2000).pipe(<a href=\"api/index/function/take\" class=\"code-anchor\">take</a>(6));\nconst timer3 = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(500).pipe(<a href=\"api/index/function/take\" class=\"code-anchor\">take</a>(10));\n\nconst concurrent = 2; // the argument\nconst merged = <a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a>(timer1, timer2, timer3, concurrent);\nmerged.subscribe(x => console.log(x));\n\n// Results in the following:\n// - First timer1 and timer2 will run concurrently\n// - timer1 will emit a value <a href=\"api/index/function/every\" class=\"code-anchor\">every</a> 1000ms for 10 iterations\n// - timer2 will emit a value <a href=\"api/index/function/every\" class=\"code-anchor\">every</a> 2000ms for 6 iterations\n// - after timer1 hits its <a href=\"api/index/function/max\" class=\"code-anchor\">max</a> iteration, timer2 will\n//   continue, and timer3 will start to run concurrently with timer2\n// - when timer2 hits its <a href=\"api/index/function/max\" class=\"code-anchor\">max</a> iteration it terminates, and\n//   timer3 will continue to emit a value <a href=\"api/index/function/every\" class=\"code-anchor\">every</a> 500ms until it is complete\n</code-example>\n\n</div>\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>args</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>(number | <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a> | <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a><unknown> | <a href=\"api/index/interface/InteropObservable\" class=\"code-anchor\">InteropObservable</a><unknown> | AsyncIterable<unknown> | PromiseLike<unknown> | ArrayLike<unknown> | Iterable<unknown> | <a href=\"api/index/interface/ReadableStreamLike\" class=\"code-anchor\">ReadableStreamLike</a><unknown>)[]</unknown></unknown></unknown></unknown></unknown></unknown></unknown></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">一個 Observable，它傳送的項目是每個輸入 Observable 的結果。</p><p translation-origin=\"off\"><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code>: an Observable that emits items that are the result of\nevery input Observable.</p>\n\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - 6-to-7-change-summary\n - api/index\n - api/index/function/connect\n - api/index/function/mergeAll\n - api/index/function/mergeMap\n - api/index/function/mergeMapTo\n - api/index/function/mergeWith\n - api/index/function/publish\n - api/index/function/subscribeOn\n - api/operators/connect\n - api/operators/merge\n - api/operators/mergeAll\n - api/operators/mergeMap\n - api/operators/mergeMapTo\n - api/operators/mergeWith\n - api/operators/publish\n - api/operators/subscribeOn\n - deprecations/scheduler-argument\n - guide/importing\n - guide/scheduler\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable\n - api/index/function/every\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/max\n - api/index/function/merge#deprecation-notes\n - api/index/function/merge#examples\n - api/index/function/merge#merge\n - api/index/function/merge#overloads\n - api/index/function/mergeAll\n - api/index/function/scheduled\n - api/index/function/take\n - api/index/function/timer\n - api/index/interface/InteropObservable\n - api/index/interface/ReadableStreamLike\n - api/index/interface/SchedulerLike\n - https://github.com/reactivex/rxjs/edit/master/src/internal/observable/merge.ts?message=docs(index)%3A%20describe%20your%20change...#L8-L9\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/observable/merge.ts#L8-L9\n - https://rxjs.dev/deprecations/scheduler-argument\n-->"
}