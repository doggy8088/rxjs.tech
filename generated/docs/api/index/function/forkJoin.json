{
  "id": "api/index/function/forkJoin",
  "title": "forkJoin",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/observable/forkJoin.ts?message=docs(index)%3A%20describe%20your%20change...#L35-L35\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/observable/forkJoin.ts#L35-L35\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/forkJoin\", \"name\": \"forkJoin\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"forkjoin\">forkJoin<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/forkJoin#forkjoin\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>&#x3C;A extends readonly, unknown>()</code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <p>沒有引數。</p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n<section class=\"overloads\">\n  <h2 id=\"overloads\">過載形式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/forkJoin#overloads\"><i class=\"material-icons\">link</i></a></h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>(arg: T): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code-example>\n\n\n  <div class=\"short-description\">\n    <p translation-result=\"on\">如果你在這裡傳入了 <code>any</code>，我們就無法確定它是陣列還是物件，所以要使用 <code>unknown</code>。請使用更好的型別。</p><p translation-origin=\"off\">You have passed <code>any</code> here, we can't figure out if it is\nan array or an object, so you're getting <code>unknown</code>. Use better types.</p>\n\n\n</div>\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>arg</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">型別為 <code>any</code> 的引數</p><p translation-origin=\"off\">        Something typed as <code>any</code></p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>(scheduler: null): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>null</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-1\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>(sources: any[]): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>sources</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>any[]</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-2\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>()</code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <p>沒有引數。</p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>()</code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/forkJoin#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">改為傳遞一個源陣列。其餘引數簽名將在 v8 中刪除。詳細訊息： <a href=\"https://rxjs.dev/deprecations/array-argument\">https://rxjs.dev/deprecations/array-argument</a></p><p translation-origin=\"off\">Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: <a href=\"https://rxjs.dev/deprecations/array-argument\">https://rxjs.dev/deprecations/array-argument</a></p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <p>沒有引數。</p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>()</code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/forkJoin#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">改為傳遞一個源陣列。其餘引數簽名將在 v8 中刪除。詳細訊息： <a href=\"https://rxjs.dev/deprecations/array-argument\">https://rxjs.dev/deprecations/array-argument</a></p><p translation-origin=\"off\">Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: <a href=\"https://rxjs.dev/deprecations/array-argument\">https://rxjs.dev/deprecations/array-argument</a></p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <p>沒有引數。</p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>(sourcesObject: { [x: string]: <a href=\"api/index/function/never\" class=\"code-anchor\">never</a>; }): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>sourcesObject</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>{ [x: string]: <a href=\"api/index/function/never\" class=\"code-anchor\">never</a>; }</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-3\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>(sourcesObject: T): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;{\n    [K in keyof T]: <a href=\"api/index/type-alias/ObservedValueOf\" class=\"code-anchor\">ObservedValueOf</a>&#x3C;T[K]>;\n}></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>sourcesObject</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>T</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-4\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;{     [K in keyof T]: <a href=\"api/index/type-alias/ObservedValueOf\" class=\"code-anchor\">ObservedValueOf</a>&#x3C;T[K]>; }></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>(...args: any[]): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;any></code-example>\n\n\n  <div class=\"short-description\">\n    <p translation-result=\"on\">接受一個 <a href=\"api/index/type-alias/ObservableInput\"><code>ObservableInput</code></a> 的 <code>Array</code> 或 <a href=\"api/index/type-alias/ObservableInput\"><code>ObservableInput</code></a> 的字典 <code>Object</code>，並回傳一個 <a href=\"api/index/class/Observable\"><code>Observable</code></a>，它用與傳入的陣列完全相同的順序發出一個值陣列，或者用與傳入的字典相同的構型。</p><p translation-origin=\"off\">Accepts an <code>Array</code> of <a href=\"api/index/type-alias/ObservableInput\"><code>ObservableInput</code></a> or a dictionary <code>Object</code> of <a href=\"api/index/type-alias/ObservableInput\"><code>ObservableInput</code></a> and returns\nan <a href=\"api/index/class/Observable\"><code>Observable</code></a> that emits either an array of values in the exact same order as the passed array,\nor a dictionary of values in the same shape as the passed dictionary.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">等待這些 Observables 完成，然後把它們發出的最後一個值組合起來；如果傳遞了一個空陣列，則立即完成。</span></p><p translation-origin=\"off\"><span class=\"informal\">Wait for Observables to complete and then combine last values they emitted;\ncomplete immediately if an empty array is passed.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/forkJoin.png\" width=\"100%\" alt=\"forkJoin marble diagram\"></p>\n<p translation-result=\"on\"><code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> 是一個運算子，它接受任意數量的輸入 observable，這些輸入 observable 可以作為陣列或輸入 observable 的字典傳遞。如果沒有提供輸入 observables（例如傳遞一個空陣列），那麼結果流將立即完成。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> is an operator that takes any number of input observables which can be passed either as an array\nor a dictionary of input observables. If no input observables are provided (e.g. an empty array is passed),\nthen the resulting stream will complete immediately.</p>\n\n<p translation-result=\"on\"><code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> 將等待所有傳入的 observables 發出並完成，然後它會發出一個陣列或一個物件，其中包含來自相應 observables 的最後一個值。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> will wait for all passed observables to emit and complete and then it will emit an array or an object with last\nvalues from corresponding observables.</p>\n\n<p translation-result=\"on\">如果你將一個包含 <code>n</code> 個 observable 的陣列傳給本運算子，那麼結果陣列將有 <code>n</code> 個值，其第一個值是第一個 observable 發出的最後一個值，第二個值是第二個 observable 發出的最後一個值，依此類推。</p><p translation-origin=\"off\">If you pass an array of <code>n</code> observables to the operator, then the resulting\narray will have <code>n</code> values, where the first value is the last one emitted by the first observable,\nsecond value is the last one emitted by the second observable and so on.</p>\n\n<p translation-result=\"on\">如果你將 Observable 的字典傳遞給運算子，則生成的物件將具有與傳遞的字典相同的鍵名，它們發出的最後一個值位於相應的鍵名處。</p><p translation-origin=\"off\">If you pass a dictionary of observables to the operator, then the resulting\nobjects will have the same keys as the dictionary passed, with their last values they have emitted\nlocated at the corresponding key.</p>\n\n<p translation-result=\"on\">這意味著 <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> 不會發出超過一個值，並且會在此之後完成。如果你不僅需要在傳入的 Observable 的生命週期結束時發出組合值，而且還需要在整個生命週期中發出組合值，請嘗試使用 <a href=\"api/index/function/combineLatest\"><code>combineLatest</code></a> 或 <a href=\"api/index/function/zip\"><code>zip</code></a>。</p><p translation-origin=\"off\">That means <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> will not emit more than once and it will complete after that. If you need to emit combined\nvalues not only at the end of the lifecycle of passed observables, but also throughout it, try out <a href=\"api/index/function/combineLatest\"><code>combineLatest</code></a>\nor <a href=\"api/index/function/zip\"><code>zip</code></a> instead.</p>\n\n<p translation-result=\"on\">為了使結果陣列的長度與輸入的 observables 的數量相同，只要任何給定的 observables 完成而沒有發出任何值，<code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> 也會在那個時刻完成並且它也不會發出任何值，即使它已經具有來自其它 Observable 的一些最後值。相反，如果有一個 observable 永遠不會完成，<code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> 也永遠不會完成，除非其它 observable 在某個時刻都完成而不發出值，這會讓我們回到前面的情況。總而言之，為了讓 <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> 發出一個值，所有給定的 observables 都必須至少發出一次並完成。</p><p translation-origin=\"off\">In order for the resulting array to have the same length as the number of input observables, whenever any of\nthe given observables completes without emitting any value, <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> will complete at that moment as well\nand it will not emit anything either, even if it already has some last values from other observables.\nConversely, if there is an observable that never completes, <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> will never complete either,\nunless at any point some other observable completes without emitting a value, which brings us back to\nthe previous case. Overall, in order for <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> to emit a value, all given observables\nhave to emit something at least once and complete.</p>\n\n<p translation-result=\"on\">如果在某個時候任何給定的 observable 出錯，則 <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> 也會出錯並立即退訂其它 observables。</p><p translation-origin=\"off\">If any given observable errors at some point, <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> will error as well and immediately unsubscribe\nfrom the other observables.</p>\n\n<p translation-result=\"on\"><code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> 會接受一個可選的 <code>resultSelector</code> 函式為引數，該函式將使用要發出的陣列中的值為引數進行呼叫。無論 <code>resultSelector</code> 回傳什麼，都會出現在輸出 observable 中。這意味著預設的 <code>resultSelector</code> 可以被認為是一個函式，它接受它的所有引數並將它們放入一個陣列中。請注意，只有當 <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> 應該發出結果時才會呼叫 <code>resultSelector</code>。</p><p translation-origin=\"off\">Optionally <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> accepts a <code>resultSelector</code> function, that will be called with values which normally\nwould land in the emitted array. Whatever is returned by the <code>resultSelector</code>, will appear in the output\nobservable instead. This means that the default <code>resultSelector</code> can be thought of as a function that takes\nall its arguments and puts them into an array. Note that the <code>resultSelector</code> will be called only\nwhen <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> is supposed to emit a result.</p>\n\n<h2 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/forkJoin#examples\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/forkJoin#examples\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">將 <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> 與可觀察輸入的字典一起使用</p><p translation-origin=\"off\">Use <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> with a dictionary of observable inputs</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>, <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst <a href=\"api/index/const/observable\" class=\"code-anchor\">observable</a> = <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>({\n  foo: <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3, 4),\n  bar: Promise.resolve(8),\n  baz: <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(4000)\n});\nobservable.subscribe({\n next: value => console.log(value),\n complete: () => console.log('This is how it ends!'),\n});\n\n// Logs:\n// { foo: 4, bar: 8, baz: 0 } after 4 seconds\n// 'This is how it ends!' immediately after\n</code-example>\n<p translation-result=\"on\">將 <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> 與可觀察輸入的陣列一起使用</p><p translation-origin=\"off\">Use <code><a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a></code> with an array of observable inputs</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>, <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst <a href=\"api/index/const/observable\" class=\"code-anchor\">observable</a> = <a href=\"api/index/function/forkJoin\" class=\"code-anchor\">forkJoin</a>([\n  <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3, 4),\n  Promise.resolve(8),\n  <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(4000)\n]);\nobservable.subscribe({\n next: value => console.log(value),\n complete: () => console.log('This is how it ends!'),\n});\n\n// Logs:\n// [4, 8, 0] after 4 seconds\n// 'This is how it ends!' immediately after\n</code-example>\n\n</div>\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>args</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">任意數量的 Observables 以陣列引數的形式提供，或作為直接傳遞給運算子的引數提供。</p><p translation-origin=\"off\">        Any number of Observables provided either as an array or as an arguments\npassed directly to the operator.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-5\">回傳值</h4>\n  <p translation-result=\"on\">Observable 發出由傳入的 Observables 發出的最後一個值的陣列或來自投影函式的值。</p><p translation-origin=\"off\"><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;any></code>: Observable emitting either an array of last values emitted by passed Observables\nor value from project function.</p>\n\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/type-alias/ObservableInputTuple\n - deprecations/array-argument\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable\n - api/index/const/observable\n - api/index/function/combineLatest\n - api/index/function/forkJoin#deprecation-notes\n - api/index/function/forkJoin#examples\n - api/index/function/forkJoin#forkjoin\n - api/index/function/forkJoin#overloads\n - api/index/function/from\n - api/index/function/never\n - api/index/function/of\n - api/index/function/timer\n - api/index/function/zip\n - api/index/type-alias/ObservableInput\n - api/index/type-alias/ObservedValueOf\n - https://github.com/reactivex/rxjs/edit/master/src/internal/observable/forkJoin.ts?message=docs(index)%3A%20describe%20your%20change...#L35-L35\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/observable/forkJoin.ts#L35-L35\n - https://rxjs.dev/deprecations/array-argument\n-->"
}