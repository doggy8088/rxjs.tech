{
  "id": "api/index/function/debounce",
  "title": "debounce",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/debounce.ts?message=docs(index)%3A%20describe%20your%20change...#L7-L135\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/debounce.ts#L7-L135\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/debounce\", \"name\": \"debounce\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"debounce\">debounce<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/debounce#debounce\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    <label class=\"api-status-label operator\">運算子</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">只有當已經過去了由另一個 Observable 確定的時間段，而且在此期間源沒有發出過其它值時，才會從源 Observable 上發出通知。</p><p translation-origin=\"off\">Emits a notification from the source Observable only after a particular time span\ndetermined by another Observable has passed without another source emission.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">它很像 <a href=\"api/index/function/debounceTime\"><code>debounceTime</code></a>，不過它傳送時的靜默時間跨度由第二個 Observable 決定。</span></p><p translation-origin=\"off\"><span class=\"informal\">It's like <a href=\"api/index/function/debounceTime\"><code>debounceTime</code></a>, but the time span of\nemission silence is determined by a second Observable.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/debounce.svg\" width=\"100%\" alt=\"debounce marble diagram\"></p>\n<p translation-result=\"on\"><code><a href=\"api/index/function/debounce\" class=\"code-anchor\">debounce</a></code> 會推遲源 Observable 傳送的通知，但如果源 Observable 上來了新的值，則會丟棄以前掛起的延遲傳送物。該運算子會跟蹤來自源 Observable 的最新通知，並透過呼叫 <code>durationSelector</code> 函式生成一個控制持續時間的 Observable。只有當持續時間 Observable 發出了 next 通知，並且自生成持續時間 Observable 以源 Observable 上沒有傳送過其它通知，它才會發出此通知。如果在持續時間 Observable 傳送值之前出現了新的通知，則不會再發送早先的那些通知，並且會將新通知安排在由 <code>durationSelector</code> 確定的新持續時間。如果在計劃的持續時間內發生了 complete 事件，則會在 complete 事件被轉發到輸出 observable 之前傳送最後一個快取的通知。如果在計劃的持續時間內或之後發生了 error 事件，則僅將此 error 事件轉發到輸出 observable。在這種情況下不會傳送快取的通知。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/debounce\" class=\"code-anchor\">debounce</a></code> delays notifications emitted by the source Observable, but drops previous\npending delayed emissions if a new notification arrives on the source Observable.\nThis operator keeps track of the most recent notification from the source\nObservable, and spawns a duration Observable by calling the\n<code>durationSelector</code> function. The notification is emitted only when the duration\nObservable emits a next notification, and if no other notification was emitted on\nthe source Observable since the duration Observable was spawned. If a new\nnotification appears before the duration Observable emits, the previous notification will\nnot be emitted and a new duration is scheduled from <code>durationSelector</code> is scheduled.\nIf the completing event happens during the scheduled duration the last cached notification\nis emitted before the completion event is forwarded to the output observable.\nIf the error event happens during the scheduled duration or after it only the error event is\nforwarded to the output observable. The cache notification is not emitted in this case.</p>\n\n<p translation-result=\"on\">像 <a href=\"api/index/function/debounceTime\"><code>debounceTime</code></a> 一樣，這是一個限速運算子，也是一個延遲類別的運算子，因為輸出上的傳送不一定會與源 Observable 上的傳送同時發生。</p><p translation-origin=\"off\">Like <a href=\"api/index/function/debounceTime\"><code>debounceTime</code></a>, this is a rate-limiting operator, and also a\ndelay-like operator since output emissions do not necessarily occur at the\nsame time as they did on the source Observable.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/debounce#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/debounce#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">當收到一陣瘋狂點選之後只發送最近的點選</p><p translation-origin=\"off\">Emit the most recent click after a burst of clicks</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/scan\" class=\"code-anchor\">scan</a>, <a href=\"api/index/function/debounce\" class=\"code-anchor\">debounce</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst result = clicks.pipe(\n  <a href=\"api/index/function/scan\" class=\"code-anchor\">scan</a>(i => ++i, 1),\n  <a href=\"api/index/function/debounce\" class=\"code-anchor\">debounce</a>(i => <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(200 * i))\n);\nresult.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/debounce\" class=\"code-anchor\">debounce</a>&#x3C;T>(durationSelector: (value: T) => <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any>): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>durationSelector</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">用於從源 Observable 接收值的函式，用於計算每個源值的超時持續時間，以 Observable 或 Promise 形式回傳。</p><p translation-origin=\"off\">        A function\nthat receives a value from the source Observable, for computing the timeout\nduration for each source value, returned as an Observable or a Promise.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">一個回傳 Observable 的函式。該函式將源 Observable 的傳送進行延遲，其傳送時間由 <code>durationSelector</code> 回傳的持續時間 Observable 決定，如果它們發生得太頻繁，可能會丟棄一些值。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that delays the emissions of\nthe source Observable by the specified duration Observable returned by\n<code>durationSelector</code>, and may drop some values if they occur too frequently.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/debounce#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/audit\"><code>audit</code></a>\n</li>\n    <li><a href=\"api/index/function/auditTime\"><code>auditTime</code></a>\n</li>\n    <li><a href=\"api/index/function/debounceTime\"><code>debounceTime</code></a>\n</li>\n    <li><a href=\"api/index/function/delay\"><code>delay</code></a>\n</li>\n    <li><a href=\"api/index/function/sample\"><code>sample</code></a>\n</li>\n    <li><a href=\"api/index/function/sampleTime\"><code>sampleTime</code></a>\n</li>\n    <li><a href=\"api/index/function/throttle\"><code>throttle</code></a>\n</li>\n    <li><a href=\"api/index/function/throttleTime\"><code>throttleTime</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - 6-to-7-change-summary\n - api/index\n - api/index/function/audit\n - api/index/function/debounceTime\n - api/index/function/delay\n - api/index/function/delayWhen\n - api/index/function/sample\n - api/index/function/throttle\n - api/operators/debounce\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/audit\n - api/index/function/auditTime\n - api/index/function/debounce#debounce\n - api/index/function/debounce#example\n - api/index/function/debounce#see-also\n - api/index/function/debounceTime\n - api/index/function/delay\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/sample\n - api/index/function/sampleTime\n - api/index/function/scan\n - api/index/function/throttle\n - api/index/function/throttleTime\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/type-alias/ObservableInput\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/debounce.ts?message=docs(index)%3A%20describe%20your%20change...#L7-L135\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/debounce.ts#L7-L135\n-->"
}