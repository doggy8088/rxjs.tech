{
  "id": "api/index/function/windowTime",
  "title": "windowTime",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/windowTime.ts?message=docs(index)%3A%20describe%20your%20change...#L24-L237\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/windowTime.ts#L24-L237\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/windowTime\", \"name\": \"windowTime\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"windowtime\">windowTime<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/windowTime#windowtime\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    <label class=\"api-status-label operator\">運算子</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">定期將源 Observable 的每個值分叉為一個巢狀的 Observable。</p><p translation-origin=\"off\">Branch out the source Observable values as a nested Observable periodically\nin time.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">類似於 <a href=\"api/index/function/bufferTime\"><code>bufferTime</code></a>，但它會發送一個巢狀的 Observable，而非陣列。</span></p><p translation-origin=\"off\"><span class=\"informal\">It's like <a href=\"api/index/function/bufferTime\"><code>bufferTime</code></a>, but emits a nested\nObservable instead of an array.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/windowTime.png\" width=\"100%\" alt=\"windowTime marble diagram\"></p>\n<p translation-result=\"on\">回傳一個 Observable，它會發出一些從源 Observable 收集來的條目的視窗。輸出 Observable 會定期啟動一個新視窗，時間間隔由 <code>windowCreationInterval</code> 引數確定。它會在經過 <code>windowTimeSpan</code> 引數指定的固定時間跨度後傳送每個視窗。當源 Observable 完成或遇到錯誤時，輸出 Observable 會發出當前視窗並轉發來自源 Observable 的通知。如果沒有提供 <code>windowCreationInterval</code>，則輸出 Observable 會在持續時間 <code>windowTimeSpan</code> 的前一個視窗完成時啟動一個新視窗。如果提供了 <code>maxWindowCount</code>，則每個視窗將傳送最多固定數量的值。視窗將在發出最後一個值後立即完成，並且下一個視窗仍會按照 <code>windowTimeSpan</code> 和 <code>windowCreationInterval</code> 引數的要求開啟。</p><p translation-origin=\"off\">Returns an Observable that emits windows of items it collects from the source\nObservable. The output Observable starts a new window periodically, as\ndetermined by the <code>windowCreationInterval</code> argument. It emits each window\nafter a fixed timespan, specified by the <code>windowTimeSpan</code> argument. When the\nsource Observable completes or encounters an error, the output Observable\nemits the current window and propagates the notification from the source\nObservable. If <code>windowCreationInterval</code> is not provided, the output\nObservable starts a new window when the previous window of duration\n<code>windowTimeSpan</code> completes. If <code>maxWindowCount</code> is provided, each window\nwill emit at most fixed number of values. Window will complete immediately\nafter emitting last value and next one still will open as specified by\n<code>windowTimeSpan</code> and <code>windowCreationInterval</code> arguments.</p>\n\n<h2 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/windowTime#examples\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/windowTime#examples\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">在間隔 1 秒的視窗中，每次最多傳送 2 個點選事件</p><p translation-origin=\"off\">In every window of 1 second each, emit at most 2 click events</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/windowTime\" class=\"code-anchor\">windowTime</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>, <a href=\"api/index/function/take\" class=\"code-anchor\">take</a>, <a href=\"api/index/function/mergeAll\" class=\"code-anchor\">mergeAll</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst result = clicks.pipe(\n  <a href=\"api/index/function/windowTime\" class=\"code-anchor\">windowTime</a>(1000),\n  <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(win => win.pipe(<a href=\"api/index/function/take\" class=\"code-anchor\">take</a>(2))), // <a href=\"api/index/function/take\" class=\"code-anchor\">take</a> at most 2 emissions <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> each <a href=\"api/index/function/window\" class=\"code-anchor\">window</a>\n  <a href=\"api/index/function/mergeAll\" class=\"code-anchor\">mergeAll</a>()                     // flatten the Observable-of-Observables\n);\nresult.subscribe(x => console.log(x));\n</code-example>\n<p translation-result=\"on\">每 5 秒啟動一個 1 秒長的視窗，每個視窗最多傳送 2 個點選事件</p><p translation-origin=\"off\">Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/windowTime\" class=\"code-anchor\">windowTime</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>, <a href=\"api/index/function/take\" class=\"code-anchor\">take</a>, <a href=\"api/index/function/mergeAll\" class=\"code-anchor\">mergeAll</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst result = clicks.pipe(\n  <a href=\"api/index/function/windowTime\" class=\"code-anchor\">windowTime</a>(1000, 5000),\n  <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(win => win.pipe(<a href=\"api/index/function/take\" class=\"code-anchor\">take</a>(2))), // <a href=\"api/index/function/take\" class=\"code-anchor\">take</a> at most 2 emissions <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> each <a href=\"api/index/function/window\" class=\"code-anchor\">window</a>\n  <a href=\"api/index/function/mergeAll\" class=\"code-anchor\">mergeAll</a>()                     // flatten the Observable-of-Observables\n);\nresult.subscribe(x => console.log(x));\n</code-example>\n<p translation-result=\"on\">與上面的範例相同，但使用 <code>maxWindowCount</code> 而非 <code><a href=\"api/index/function/take\" class=\"code-anchor\">take</a></code></p><p translation-origin=\"off\">Same as example above but with <code>maxWindowCount</code> instead of <code><a href=\"api/index/function/take\" class=\"code-anchor\">take</a></code></p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/windowTime\" class=\"code-anchor\">windowTime</a>, <a href=\"api/index/function/mergeAll\" class=\"code-anchor\">mergeAll</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst result = clicks.pipe(\n  <a href=\"api/index/function/windowTime\" class=\"code-anchor\">windowTime</a>(1000, 5000, 2), // <a href=\"api/index/function/take\" class=\"code-anchor\">take</a> at most 2 emissions <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> each <a href=\"api/index/function/window\" class=\"code-anchor\">window</a>\n  <a href=\"api/index/function/mergeAll\" class=\"code-anchor\">mergeAll</a>()                 // flatten the Observable-of-Observables\n);\nresult.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/windowTime\" class=\"code-anchor\">windowTime</a>&#x3C;T>(windowTimeSpan: number, ...otherArgs: any[]): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>windowTimeSpan</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">用來填充每個視窗的時間量（以毫秒為單位）。</p><p translation-origin=\"off\">        The amount of time, in milliseconds, to fill each window.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>otherArgs</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>any[]</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">一個回傳以視窗為條目的 Observable 的函式，這些視窗又都是 Observables。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>></code>: A function that returns an Observable of windows, which in turn are\nObservables.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n<section class=\"overloads\">\n  <h2 id=\"overloads\">過載形式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/windowTime#overloads\"><i class=\"material-icons\">link</i></a></h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/windowTime\" class=\"code-anchor\">windowTime</a>(windowTimeSpan: number, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>windowTimeSpan</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>number</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>undefined</code>。</p>\n        <p>型別：<code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-1\">回傳值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/windowTime\" class=\"code-anchor\">windowTime</a>(windowTimeSpan: number, windowCreationInterval: number, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>windowTimeSpan</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>number</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>windowCreationInterval</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>number</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>undefined</code>。</p>\n        <p>型別：<code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-2\">回傳值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/windowTime\" class=\"code-anchor\">windowTime</a>(windowTimeSpan: number, windowCreationInterval: number | void, maxWindowSize: number, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>windowTimeSpan</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>number</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>windowCreationInterval</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>number | void</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>maxWindowSize</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>number</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>undefined</code>。</p>\n        <p>型別：<code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-3\">回傳值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/windowTime#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/window\"><code>window</code></a>\n</li>\n    <li><a href=\"api/index/function/windowCount\"><code>windowCount</code></a>\n</li>\n    <li><a href=\"api/index/function/windowToggle\"><code>windowToggle</code></a>\n</li>\n    <li><a href=\"api/index/function/windowWhen\"><code>windowWhen</code></a>\n</li>\n    <li><a href=\"api/index/function/bufferTime\"><code>bufferTime</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/class/ReplaySubject\n - api/index/function/bufferTime\n - api/index/function/publishReplay\n - api/index/function/shareReplay\n - api/index/function/window\n - api/index/function/windowCount\n - api/index/function/windowToggle\n - api/index/function/windowWhen\n - api/index/interface/ShareReplayConfig\n - api/operators/ShareReplayConfig\n - api/operators/publishReplay\n - api/operators/shareReplay\n - api/operators/windowTime\n - guide/scheduler\n - guide/subject\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable\n - api/index/function/bufferTime\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/map\n - api/index/function/mergeAll\n - api/index/function/take\n - api/index/function/window\n - api/index/function/windowCount\n - api/index/function/windowTime#examples\n - api/index/function/windowTime#overloads\n - api/index/function/windowTime#see-also\n - api/index/function/windowTime#windowtime\n - api/index/function/windowToggle\n - api/index/function/windowWhen\n - api/index/interface/OperatorFunction\n - api/index/interface/SchedulerLike\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/windowTime.ts?message=docs(index)%3A%20describe%20your%20change...#L24-L237\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/windowTime.ts#L24-L237\n-->"
}