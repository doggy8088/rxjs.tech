{
  "id": "api/index/function/catchError",
  "title": "catchError",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/catchError.ts?message=docs(index)%3A%20describe%20your%20change...#L13-L157\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/catchError.ts#L13-L157\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/catchError\", \"name\": \"catchError\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"catcherror\">catchError<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/catchError#catcherror\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    <label class=\"api-status-label operator\">運算子</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">捕獲要處理的 observable 上的錯誤，並回傳新的 observable 或丟擲錯誤。</p><p translation-origin=\"off\">Catches errors on the observable to be handled by returning a new observable or throwing an error.</p>\n\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/catchError\" class=\"code-anchor\">catchError</a>&#x3C;T, O extends <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any>>(selector: (err: any, caught: <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>) => O): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, T | <a href=\"api/index/type-alias/ObservedValueOf\" class=\"code-anchor\">ObservedValueOf</a>&#x3C;O>></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>selector</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">一個函式，它的第一個引數是 <code>err</code>，這是錯誤物件，第二個引數是 <code>caught</code>，這是源 observable，這樣你就可以再次回傳它來『重試』那個 observable。<code>selector</code> 回傳的任何 observable 都將用作後續 observable 鏈。</p><p translation-origin=\"off\">        a function that takes as arguments <code>err</code>, which is the error, and <code>caught</code>, which\nis the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\nis returned by the <code>selector</code> will be used to continue the observable chain.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">一個回傳 Observable 的函式，該 Observable 或者來自源或者來自 <code>selector</code> 函式回傳的 Observable。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, T | <a href=\"api/index/type-alias/ObservedValueOf\" class=\"code-anchor\">ObservedValueOf</a>&#x3C;O>></code>: A function that returns an Observable that originates from either\nthe source or the Observable returned by the <code>selector</code> function.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/catchError#description\"><i class=\"material-icons\">link</i></a></h2>\n  <span class=\"informal\">\nIt only listens to the error channel and ignores notifications.\nHandles errors from the source observable, and maps them to a new observable.\nThe error may also be rethrown, or a new error can be thrown to emit an error from the result.\n</span>\n<p><img src=\"/assets/images/marble-diagrams/catch.png\" width=\"100%\" alt=\"catch marble diagram\"></p>\n<p translation-result=\"on\">該運算子會處理各種錯誤，但會把所有其它事件轉發到結果 observable。如果源 observable 因出錯而終止，它會將該錯誤對映成新的 observable，訂閱這個新 Observable，並將其所有事件轉發到結果 observable。</p><p translation-origin=\"off\">This operator handles errors, but forwards along all other events to the resulting observable.\nIf the source observable terminates with an error, it will map that error to a new observable,\nsubscribe to it, and forward all of its events to the resulting observable.</p>\n\n<h2 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/catchError#examples\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/catchError#examples\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">出現錯誤時繼續使用另一個 Observable</p><p translation-origin=\"off\">Continue with a different Observable when there's an error</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>, <a href=\"api/index/function/catchError\" class=\"code-anchor\">catchError</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3, 4, 5)\n  .pipe(\n    <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(n => {\n      if (n === 4) {\n        throw 'four!';\n      }\n      return n;\n    }),\n    <a href=\"api/index/function/catchError\" class=\"code-anchor\">catchError</a>(err => <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>('I', 'II', 'III', 'IV', 'V'))\n  )\n  .subscribe(x => console.log(x));\n  // 1, 2, 3, I, II, III, IV, V\n</code-example>\n<p translation-result=\"on\">發生錯誤時再次重試所捕獲的來源 Observable，類似於 <code><a href=\"api/index/function/retry\" class=\"code-anchor\">retry</a>()</code> 運算子</p><p translation-origin=\"off\">Retry the caught source Observable again in case of error, similar to <code><a href=\"api/index/function/retry\" class=\"code-anchor\">retry</a>()</code> operator</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>, <a href=\"api/index/function/catchError\" class=\"code-anchor\">catchError</a>, <a href=\"api/index/function/take\" class=\"code-anchor\">take</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3, 4, 5)\n  .pipe(\n    <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(n => {\n      if (n === 4) {\n        throw 'four!';\n      }\n      return n;\n    }),\n    <a href=\"api/index/function/catchError\" class=\"code-anchor\">catchError</a>((err, caught) => caught),\n    <a href=\"api/index/function/take\" class=\"code-anchor\">take</a>(30)\n  )\n  .subscribe(x => console.log(x));\n  // 1, 2, 3, 1, 2, 3, ...\n</code-example>\n<p translation-result=\"on\">當來源 Observable 丟擲錯誤時丟擲一個新的錯誤</p><p translation-origin=\"off\">Throw a new error when the source Observable throws an error</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>, <a href=\"api/index/function/catchError\" class=\"code-anchor\">catchError</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3, 4, 5)\n  .pipe(\n    <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(n => {\n      if (n === 4) {\n        throw 'four!';\n      }\n      return n;\n    }),\n    <a href=\"api/index/function/catchError\" class=\"code-anchor\">catchError</a>(err => {\n      throw 'error in source. Details: ' + err;\n    })\n  )\n  .subscribe({\n    next: x => console.log(x),\n    error: err => console.log(err)\n  });\n  // 1, 2, 3, error in source. Details: four!\n</code-example>\n\n</section>\n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/catchError#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/onErrorResumeNext\"><code>onErrorResumeNext</code></a>\n</li>\n    <li><a href=\"api/index/function/repeat\"><code>repeat</code></a>\n</li>\n    <li><a href=\"api/index/function/repeatWhen\"><code>repeatWhen</code></a>\n</li>\n    <li><a href=\"api/index/function/retry\"><code>retry</code></a>\n</li>\n    <li><a href=\"api/index/function/retryWhen\"><code>retryWhen</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/ajax/ajax\n - api/fetch/fromFetch\n - api/index\n - api/index/function/timeout\n - api/operators/catchError\n - api/operators/timeout\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable\n - api/index/function/catchError#catcherror\n - api/index/function/catchError#description\n - api/index/function/catchError#examples\n - api/index/function/catchError#see-also\n - api/index/function/from\n - api/index/function/map\n - api/index/function/of\n - api/index/function/onErrorResumeNext\n - api/index/function/repeat\n - api/index/function/repeatWhen\n - api/index/function/retry\n - api/index/function/retryWhen\n - api/index/function/take\n - api/index/interface/OperatorFunction\n - api/index/type-alias/ObservableInput\n - api/index/type-alias/ObservedValueOf\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/catchError.ts?message=docs(index)%3A%20describe%20your%20change...#L13-L157\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/catchError.ts#L13-L157\n-->"
}