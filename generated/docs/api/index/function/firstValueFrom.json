{
  "id": "api/index/function/firstValueFrom",
  "title": "firstValueFrom",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/firstValueFrom.ts?message=docs(index)%3A%20describe%20your%20change...#L11-L91\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/firstValueFrom.ts#L11-L91\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/firstValueFrom\", \"name\": \"firstValueFrom\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"firstvaluefrom\">firstValueFrom<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/firstValueFrom#firstvaluefrom\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">訂閱 Observable 並將 Observable 轉換為 Promise，並回傳這個 Promise，該 Promise 將在第一個值從 Observable 抵達時立即解析（resolve）。然後此訂閱就會被關閉。</p><p translation-origin=\"off\">Converts an observable to a promise by subscribing to the observable,\nand returning a promise that will resolve as soon as the first value\narrives from the observable. The subscription will then be closed.</p>\n\n<p translation-result=\"on\">如果 observable 流在發出任何值之前就已完成，則它回傳的 Promise 將以 <a href=\"api/index/interface/EmptyError\"><code>EmptyError</code></a> 為引數進行拒絕（reject），如果指定了預設值，則會使用預設值進行解析。</p><p translation-origin=\"off\">If the observable stream completes before any values were emitted, the\nreturned promise will reject with <a href=\"api/index/interface/EmptyError\"><code>EmptyError</code></a> or will resolve\nwith the default value if a default was specified.</p>\n\n<p translation-result=\"on\">如果 observable 流傳送錯誤，回傳的 Promise 將以該錯誤為引數進行拒絕。</p><p translation-origin=\"off\">If the observable stream emits an error, the returned promise will reject\nwith that error.</p>\n\n<p translation-result=\"on\"><strong>警告</strong>：僅將其與你<em>知道</em>會發送至少一個值<em>或</em>會完成的 Observable 一起使用。如果源 observable 沒有傳送任何值或不會完成，你最終會得到一個掛起的 Promise，並可能導致所有非同步函式的狀態都掛在記憶體中。為避免這種情況，請考慮新增 <a href=\"api/index/function/timeout\"><code>timeout</code></a>、<a href=\"api/index/function/take\"><code>take</code></a>、<a href=\"api/index/function/takeWhile\"><code>takeWhile</code></a> 或 <a href=\"api/index/function/takeUntil\"><code>takeUntil</code></a> 等運算子。</p><p translation-origin=\"off\"><strong>WARNING</strong>: Only use this with observables you <em>know</em> will emit at least one value,\n<em>OR</em> complete. If the source observable does not emit one value or complete, you will\nend up with a promise that is hung up, and potentially all of the state of an\nasync function hanging out in memory. To avoid this situation, look into adding\nsomething like <a href=\"api/index/function/timeout\"><code>timeout</code></a>, <a href=\"api/index/function/take\"><code>take</code></a>, <a href=\"api/index/function/takeWhile\"><code>takeWhile</code></a>, or <a href=\"api/index/function/takeUntil\"><code>takeUntil</code></a>\namongst others.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/firstValueFrom#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/firstValueFrom#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">等待流中的第一個值並從非同步函式中的 Promise 傳送它</p><p translation-origin=\"off\">Wait for the first value from a stream and emit it from a promise in\nan async function</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/firstValueFrom\" class=\"code-anchor\">firstValueFrom</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nasync function execute() {\n  const source$ = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(2000);\n  const firstNumber = await <a href=\"api/index/function/firstValueFrom\" class=\"code-anchor\">firstValueFrom</a>(source$);\n  console.log(`The <a href=\"api/index/function/first\" class=\"code-anchor\">first</a> number is ${ firstNumber }`);\n}\n\nexecute();\n\n// Expected output:\n// 'The <a href=\"api/index/function/first\" class=\"code-anchor\">first</a> number is 0'\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/firstValueFrom\" class=\"code-anchor\">firstValueFrom</a>&#x3C;T, D>(source: <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>, <a href=\"api/index/const/config\" class=\"code-anchor\">config</a>?: FirstValueFromConfig&#x3C;D>): Promise&#x3C;T | D></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>source</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">要轉換為 Promise 的 observable</p><p translation-origin=\"off\">        the observable to convert to a promise</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>config</td>\n      \n      <td class=\"param-description\">\n      <p>        可選。預設值為 <code>undefined</code>。</p>\n<p translation-result=\"on\">一個設定物件，用於定義當源已完成但未傳送值時使用的 <code>defaultValue</code></p><p translation-origin=\"off\">        a configuration object to define the <code>defaultValue</code> to use if the source completes without emitting a value</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p><code>Promise&#x3C;T | D></code></p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/firstValueFrom#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/lastValueFrom\"><code>lastValueFrom</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/class/Observable\n - api/index/function/lastValueFrom\n - api/index/interface/EmptyError\n - deprecations/to-promise\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable\n - api/index/const/config\n - api/index/function/first\n - api/index/function/firstValueFrom#example\n - api/index/function/firstValueFrom#firstvaluefrom\n - api/index/function/firstValueFrom#see-also\n - api/index/function/from\n - api/index/function/interval\n - api/index/function/lastValueFrom\n - api/index/function/take\n - api/index/function/takeUntil\n - api/index/function/takeWhile\n - api/index/function/timeout\n - api/index/interface/EmptyError\n - https://github.com/reactivex/rxjs/edit/master/src/internal/firstValueFrom.ts?message=docs(index)%3A%20describe%20your%20change...#L11-L91\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/firstValueFrom.ts#L11-L91\n-->"
}