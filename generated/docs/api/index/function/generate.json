{
  "id": "api/index/function/generate",
  "title": "generate",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/observable/generate.ts?message=docs(index)%3A%20describe%20your%20change...#L436-L488\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/observable/generate.ts#L436-L488\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/generate\", \"name\": \"generate\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"generate\">generate<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#generate\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>&#x3C;T, S>(initialStateOrOptions: S | GenerateOptions&#x3C;T, S>, condition?: ConditionFunc&#x3C;S>, iterate?: IterateFunc&#x3C;S>, resultSelectorOrScheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a> | ResultFunc&#x3C;S, T>, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>initialStateOrOptions</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>S | GenerateOptions<t, s=\"\"></t,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>condition</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>undefined</code>。</p>\n        <p>型別：<code>ConditionFunc<s></s></code><s>。</s></p><s>\n        </s>\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>iterate</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>undefined</code>。</p>\n        <p>型別：<code>IterateFunc<s></s></code><s>。</s></p><s>\n        </s>\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>resultSelectorOrScheduler</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>undefined</code>。</p>\n        <p>型別：<code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a> | ResultFunc<s, t=\"\"></s,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>undefined</code>。</p>\n        <p>型別：<code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable&#x3C;T></a></code></p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n<section class=\"overloads\">\n  <h2 id=\"overloads\">過載形式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#overloads\"><i class=\"material-icons\">link</i></a></h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(initialState: S, condition: ConditionFunc&#x3C;S>, iterate: IterateFunc&#x3C;S>, resultSelector: ResultFunc&#x3C;S, T>, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T></code-example>\n\n\n  <div class=\"short-description\">\n    <p translation-result=\"on\">透過執行一個狀態驅動的迴圈來生成一個 Observable 序列，該迴圈會使用指定的排程器向 Observer 傳送訊息來產生序列元素。</p><p translation-origin=\"off\">Generates an observable sequence by running a state-driven loop\nproducing the sequence's elements, using the specified scheduler\nto send out observer messages.</p>\n\n<p><img src=\"/assets/images/marble-diagrams/generate.png\" width=\"100%\" alt=\"generate marble diagram\"></p>\n<h2 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#examples\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#examples\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">產生數字序列</p><p translation-origin=\"off\">Produces sequence of numbers</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(0, x => x &#x3C; 3, x => x + 1, x => x);\n\nresult.subscribe(x => console.log(x));\n\n// Logs:\n// 0\n// 1\n// 2\n</code-example>\n<p translation-result=\"on\">使用 <code><a href=\"api/index/const/asapScheduler\" class=\"code-anchor\">asapScheduler</a></code></p><p translation-origin=\"off\">Use <code><a href=\"api/index/const/asapScheduler\" class=\"code-anchor\">asapScheduler</a></code></p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>, <a href=\"api/index/const/asapScheduler\" class=\"code-anchor\">asapScheduler</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(1, x => x &#x3C; 5, x => x * 2, x => x + 1, <a href=\"api/index/const/asapScheduler\" class=\"code-anchor\">asapScheduler</a>);\n\nresult.subscribe(x => console.log(x));\n\n// Logs:\n// 2\n// 3\n// 5\n</code-example>\n\n</div>\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">不要用獨立引數傳參，而是使用 options 引數。帶有獨立引數的簽名將在 v8 中被刪除。</p><p translation-origin=\"off\">Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.</p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>initialState</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">初始狀態。</p><p translation-origin=\"off\">        Initial state.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>condition</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">終止生成的條件（回傳 false 時）。</p><p translation-origin=\"off\">        Condition to terminate generation (upon returning false).</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>iterate</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">迭代階躍（step）函式。</p><p translation-origin=\"off\">        Iteration step function.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>resultSelector</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">序列中產生的結果的選擇器函式。（已棄用）</p><p translation-origin=\"off\">        Selector function for results produced in the sequence. (deprecated)</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n      <p>        可選。預設值為 <code>undefined</code>。</p>\n<p translation-result=\"on\">用來執行產生器迴圈的排程器類似物。如果未提供，則預設立即傳送。</p><p translation-origin=\"off\">        A <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> on which to run the generator loop. If not provided, defaults to emit immediately.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-1\">回傳值</h4>\n  <p translation-result=\"on\">已生成的序列。</p><p translation-origin=\"off\"><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable&#x3C;T></a></code>: The generated sequence.</p>\n\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(initialState: S, condition: ConditionFunc&#x3C;S>, iterate: IterateFunc&#x3C;S>, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;S></code-example>\n\n\n  <div class=\"short-description\">\n    <p translation-result=\"on\">透過執行一個狀態驅動的迴圈來生成一個 Observable，該迴圈會在每次迭代時傳送一個元素。</p><p translation-origin=\"off\">Generates an Observable by running a state-driven loop\nthat emits an element on each iteration.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">使用它代替 for 迴圈中的下一個值。</span></p><p translation-origin=\"off\"><span class=\"informal\">Use it instead of nexting values in a for loop.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/generate.png\" width=\"100%\" alt=\"generate marble diagram\"></p>\n<p translation-result=\"on\"><code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> 允許你建立一個由和傳統 for 迴圈非常相似的迴圈生成的值流。<code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> 的第一個引數是一個初始值。第二個引數是一個接受此值並測試某些條件是否仍然成立的函式。如果是，則迴圈繼續，如果不是，則停止。第三個值是一個函式，它採用先前定義的值並在每次迭代時以某種方式對其進行修改。請注意，這三個引數直接等價於傳統 for 迴圈中的三個表示式：第一個表示式初始化某個狀態（例如，數字序號），第二個表示式測試迴圈是否可以執行下一次迭代（例如，如果序號小於 10），第三個說明如何在每一步修改定義的值（例如，序號將增加 1）。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> allows you to create a stream of values generated with a loop very similar to\na traditional for loop. The first argument of <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> is a beginning value. The second argument\nis a function that accepts this value and tests if some condition still holds. If it does,\nthen the loop continues, if not, it stops. The third value is a function which takes the\npreviously defined value and modifies it in some way on each iteration. Note how these three parameters\nare direct equivalents of three expressions in a traditional for loop: the first expression\ninitializes some state (for example, a numeric index), the second tests if the loop can perform the next\niteration (for example, if the index is lower than 10) and the third states how the defined value\nwill be modified on every step (for example, the index will be incremented by one).</p>\n\n<p translation-result=\"on\"><code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> 運算子的回傳值是一個 Observable，它會在每次迴圈迭代時傳送一個值。首先，執行條件函式。如果它回傳 true，那麼 Observable 會發送當前儲存的值（第一次迭代時的初始值），最後使用迭代函式更新該值。如果在某個時候條件回傳 false，則 Observable 就會在那一刻完成。</p><p translation-origin=\"off\">Return value of a <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> operator is an Observable that on each loop iteration\nemits a value. First of all, the condition function is ran. If it returns true, then the Observable\nemits the currently stored value (initial value at the first iteration) and finally updates\nthat value with iterate function. If at some point the condition returns false, then the Observable\ncompletes at that moment.</p>\n\n<p translation-result=\"on\">你可以給 <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> 傳遞第四個可選引數 - 結果選擇器函式，它允許你立即對映通常由 Observable 傳送的值。</p><p translation-origin=\"off\">Optionally you can pass a fourth parameter to <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> - a result selector function which allows you\nto immediately map the value that would normally be emitted by an Observable.</p>\n\n<p translation-result=\"on\">如果你在 <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> 呼叫中發現三個匿名函式難以閱讀，你可以改為向運算子提供一個物件，該物件具有以下屬性： <code>initialState</code>、<code>condition</code>、<code>iterate</code> 和 <code>resultSelector</code>，它們應該具有你通常傳給 <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> 的相應值. <code>resultSelector</code> 仍然是可選的，但呼叫 <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> 的這種形式也允許你省略 <code>condition</code>。如果省略它，則意味著條件始終成立，換言之，生成的 Observable 永遠不會完成。</p><p translation-origin=\"off\">If you find three anonymous functions in <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> call hard to read, you can provide\na single object to the operator instead where the object has the properties: <code>initialState</code>,\n<code>condition</code>, <code>iterate</code> and <code>resultSelector</code>, which should have respective values that you\nwould normally pass to <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code>. <code>resultSelector</code> is still optional, but that form\nof calling <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> allows you to omit <code>condition</code> as well. If you omit it, that means\ncondition always holds, or in other words the resulting Observable will never complete.</p>\n\n<p translation-result=\"on\">這兩種形式的 <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> 都可以選擇接受一個排程器。在多引數呼叫的情況下，排程器只能作為最後一個引數出現（無論是否有 <code>resultSelector</code> 函式）。在單引數呼叫的情況下，你可以將其作為引數物件的 <code>scheduler</code> 屬性傳給運算子。在這兩種情況下，排程器都會決定下一次迴圈迭代何時發生，也就是下一個值將何時由 Observable 傳送。例如，要確保在事件迴圈中的單獨任務上把每個值推送到 Observer，你可以使用 <code>async</code> 排程器。請注意，預設情況下（當沒有傳遞排程器時）這些值只會同步傳送。</p><p translation-origin=\"off\">Both forms of <code><a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a></code> can optionally accept a scheduler. In case of a multi-parameter call,\nscheduler simply comes as a last argument (no matter if there is a <code>resultSelector</code>\nfunction or not). In case of a single-parameter call, you can provide it as a\n<code>scheduler</code> property on the object passed to the operator. In both cases, a scheduler decides when\nthe next iteration of the loop will happen and therefore when the next value will be emitted\nby the Observable. For example, to ensure that each value is pushed to the Observer\non a separate task in the event loop, you could use the <code>async</code> scheduler. Note that\nby default (when no scheduler is passed) values are simply emitted synchronously.</p>\n\n<h2 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#examples\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"examples-1\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#examples-1\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">與條件和迭代函式一起使用</p><p translation-origin=\"off\">Use with condition and iterate functions</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(0, x => x &#x3C; 3, x => x + 1);\n\nresult.subscribe({\n  next: value => console.log(value),\n  complete: () => console.log('Complete!')\n});\n\n// Logs:\n// 0\n// 1\n// 2\n// 'Complete!'\n</code-example>\n<p translation-result=\"on\">與條件、迭代和結果選擇函式一起使用</p><p translation-origin=\"off\">Use with condition, iterate and resultSelector functions</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(0, x => x &#x3C; 3, x => x + 1, x => x * 1000);\n\nresult.subscribe({\n  next: value => console.log(value),\n  complete: () => console.log('Complete!')\n});\n\n// Logs:\n// 0\n// 1000\n// 2000\n// 'Complete!'\n</code-example>\n<p translation-result=\"on\">與選項物件一起使用</p><p translation-origin=\"off\">Use with options object</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>({\n  initialState: 0,\n  condition(value) { return value &#x3C; 3; },\n  iterate(value) { return value + 1; },\n  resultSelector(value) { return value * 1000; }\n});\n\nresult.subscribe({\n  next: value => console.log(value),\n  complete: () => console.log('Complete!')\n});\n\n// Logs:\n// 0\n// 1000\n// 2000\n// 'Complete!'\n</code-example>\n<p translation-result=\"on\">使用不帶條件函式的選項物件</p><p translation-origin=\"off\">Use options object without condition function</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>({\n  initialState: 0,\n  iterate(value) { return value + 1; },\n  resultSelector(value) { return value * 1000; }\n});\n\nresult.subscribe({\n  next: value => console.log(value),\n  complete: () => console.log('Complete!') // This will <a href=\"api/index/function/never\" class=\"code-anchor\">never</a> run\n});\n\n// Logs:\n// 0\n// 1000\n// 2000\n// 3000\n// ...and <a href=\"api/index/function/never\" class=\"code-anchor\">never</a> stops.\n</code-example>\n\n</div>\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">不要用獨立引數傳參，而是使用 options 引數。帶有獨立引數的簽名將在 v8 中被刪除。</p><p translation-origin=\"off\">Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.</p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>initialState</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">初始狀態。</p><p translation-origin=\"off\">        Initial state.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>condition</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">終止生成的條件（回傳 false 時）。</p><p translation-origin=\"off\">        Condition to terminate generation (upon returning false).</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>iterate</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">迭代階躍（step）函式。</p><p translation-origin=\"off\">        Iteration step function.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n      <p>        可選。預設值為 <code>undefined</code>。</p>\n<p translation-result=\"on\">用來執行產生器迴圈的排程器類似物。如果未提供，則預設為立即傳送。</p><p translation-origin=\"off\">        A <a href=\"api/index/class/Scheduler\"><code>Scheduler</code></a> on which to run the generator loop. If not provided, defaults to emitting immediately.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-2\">回傳值</h4>\n  <p translation-result=\"on\">已生成的序列。</p><p translation-origin=\"off\"><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;S></code>: The generated sequence.</p>\n\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(options: GenerateBaseOptions&#x3C;S>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;S></code-example>\n\n\n  <div class=\"short-description\">\n    <p translation-result=\"on\">透過執行一個狀態驅動的迴圈來生成 Observable 序列，該迴圈會產生元素序列，並使用指定的排程器向 Observer 傳送訊息。此過載接受可能包含初始狀態、迭代、條件和排程器的選項物件。</p><p translation-origin=\"off\">Generates an observable sequence by running a state-driven loop\nproducing the sequence's elements, using the specified scheduler\nto send out observer messages.\nThe overload accepts options object that might contain initial state, iterate,\ncondition and scheduler.</p>\n\n<p><img src=\"/assets/images/marble-diagrams/generate.png\" width=\"100%\" alt=\"generate marble diagram\"></p>\n<h2 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#examples\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"examples-2\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#examples-2\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">使用帶有條件函式的選項物件</p><p translation-origin=\"off\">Use options object with condition function</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>({\n  initialState: 0,\n  condition: x => x &#x3C; 3,\n  iterate: x => x + 1\n});\n\nresult.subscribe({\n  next: value => console.log(value),\n  complete: () => console.log('Complete!')\n});\n\n// Logs:\n// 0\n// 1\n// 2\n// 'Complete!'\n</code-example>\n\n</div>\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>options</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">必須包含初始狀態、迭代，並可能包含條件和排程器的物件。</p><p translation-origin=\"off\">        Object that must contain initialState, iterate and might contain condition and scheduler.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-3\">回傳值</h4>\n  <p translation-result=\"on\">已生成的序列。</p><p translation-origin=\"off\"><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;S></code>: The generated sequence.</p>\n\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>(options: GenerateOptions&#x3C;T, S>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T></code-example>\n\n\n  <div class=\"short-description\">\n    <p translation-result=\"on\">透過執行一個狀態驅動的迴圈來生成一個 Observable 序列，該迴圈會產生元素序列，使用指定的排程器傳送 Observer 訊息。過載接受可能包含初始狀態、迭代、條件、結果選擇器和排程器的選項物件。</p><p translation-origin=\"off\">Generates an observable sequence by running a state-driven loop\nproducing the sequence's elements, using the specified scheduler\nto send out observer messages.\nThe overload accepts options object that might contain initial state, iterate,\ncondition, result selector and scheduler.</p>\n\n<p><img src=\"/assets/images/marble-diagrams/generate.png\" width=\"100%\" alt=\"generate marble diagram\"></p>\n<h2 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#examples\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"examples-3\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/generate#examples-3\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">使用帶有條件和迭代功能的選項物件</p><p translation-origin=\"off\">Use options object with condition and iterate function</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst result = <a href=\"api/index/function/generate\" class=\"code-anchor\">generate</a>({\n  initialState: 0,\n  condition: x => x &#x3C; 3,\n  iterate: x => x + 1,\n  resultSelector: x => x\n});\n\nresult.subscribe({\n  next: value => console.log(value),\n  complete: () => console.log('Complete!')\n});\n\n// Logs:\n// 0\n// 1\n// 2\n// 'Complete!'\n</code-example>\n\n</div>\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>options</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">必須包含 initialState、iterate、resultSelector 並且可能包含條件和排程器的物件。</p><p translation-origin=\"off\">        Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-4\">回傳值</h4>\n  <p translation-result=\"on\">已生成的序列。</p><p translation-origin=\"off\"><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable&#x3C;T></a></code>: The generated sequence.</p>\n\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable\n - api/index/class/Scheduler\n - api/index/const/asapScheduler\n - api/index/function/from\n - api/index/function/generate#deprecation-notes\n - api/index/function/generate#examples\n - api/index/function/generate#examples-1\n - api/index/function/generate#examples-2\n - api/index/function/generate#examples-3\n - api/index/function/generate#generate\n - api/index/function/generate#overloads\n - api/index/function/never\n - api/index/interface/SchedulerLike\n - https://github.com/reactivex/rxjs/edit/master/src/internal/observable/generate.ts?message=docs(index)%3A%20describe%20your%20change...#L436-L488\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/observable/generate.ts#L436-L488\n-->"
}