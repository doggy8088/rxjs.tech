{
  "id": "api/index/function/skipWhile",
  "title": "skipWhile",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/skipWhile.ts?message=docs(index)%3A%20describe%20your%20change...#L8-L74\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/skipWhile.ts#L8-L74\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/skipWhile\", \"name\": \"skipWhile\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"skipwhile\">skipWhile<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/skipWhile#skipwhile\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">返回一个 Observable，只要指定条件成立，它就会跳过源 Observable 发送的所有条目，但一旦条件变为 false，就会发送所有其他源条目。</p><p translation-origin=\"off\">Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\ntrue, but emits all further source items as soon as the condition becomes false.</p>\n\n<p><img src=\"/assets/images/marble-diagrams/skipWhile.png\" width=\"100%\" alt=\"skipWhile marble diagram\"></p>\n<p translation-result=\"on\">使用真实谓词跳过所有通知。当谓词为假时，它不会跳过通知。也可以使用索引跳过它。一旦谓词为真，就不会再次调用它。</p><p translation-origin=\"off\">Skips all the notifications with a truthy predicate. It will not skip the notifications when the predicate is falsy.\nIt can also be skipped using index. Once the predicate is true, it will not be called again.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/skipWhile#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/skipWhile#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">跳过一些超级英雄</p><p translation-origin=\"off\">Skip some super heroes</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/from\" class=\"code-anchor\">from</a>, <a href=\"api/index/function/skipWhile\" class=\"code-anchor\">skipWhile</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst source = <a href=\"api/index/function/from\" class=\"code-anchor\">from</a>(['Green Arrow', 'SuperMan', 'Flash', 'SuperGirl', 'Black Canary'])\n// Skip the heroes until SuperGirl\nconst example = source.pipe(<a href=\"api/index/function/skipWhile\" class=\"code-anchor\">skipWhile</a>(hero => hero !== 'SuperGirl'));\n// output: SuperGirl, Black Canary\nexample.subscribe(femaleHero => console.log(femaleHero));\n</code-example>\n<p translation-result=\"on\">跳过数组中的值直到索引 5</p><p translation-origin=\"off\">Skip values from the array until index 5</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/from\" class=\"code-anchor\">from</a>, <a href=\"api/index/function/skipWhile\" class=\"code-anchor\">skipWhile</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst source = <a href=\"api/index/function/from\" class=\"code-anchor\">from</a>([1, 2, 3, 4, 5, 6, 7, 9, 10]);\nconst example = source.pipe(<a href=\"api/index/function/skipWhile\" class=\"code-anchor\">skipWhile</a>((_, i) => i !== 5));\n// output: 6, 7, 9, 10\nexample.subscribe(value => console.log(value));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/skipWhile\" class=\"code-anchor\">skipWhile</a>&#x3C;T>(predicate: (value: T, index: number) => boolean): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>predicate</td>\n      \n      <td class=\"param-description\">\n        <p translation-result=\"on\">用于测试从源 Observable 发送的每个条目的函数。</p><p translation-origin=\"off\">      A function to test each item emitted from the source Observable.</p>\n  \n  \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p translation-result=\"on\">一个返回 Observable 的函数，当指定的谓词变为 false 时，该 Observable 开始发送源 Observable 发送的条目。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that begins emitting items\nemitted by the source Observable when the specified predicate becomes false.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n<section class=\"overloads\">\n  <h2 id=\"overloads\">重载形式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/skipWhile#overloads\"><i class=\"material-icons\">link</i></a></h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/skipWhile\" class=\"code-anchor\">skipWhile</a>(predicate: BooleanConstructor): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, Extract&#x3C;T, <a href=\"api/index/type-alias/Falsy\" class=\"code-anchor\">Falsy</a>> extends <a href=\"api/index/function/never\" class=\"code-anchor\">never</a> ? <a href=\"api/index/function/never\" class=\"code-anchor\">never</a> : T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>predicate</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>BooleanConstructor</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值-1\">返回值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, Extract&#x3C;T, <a href=\"api/index/type-alias/Falsy\" class=\"code-anchor\">Falsy</a>> extends <a href=\"api/index/function/never\" class=\"code-anchor\">never</a> ? <a href=\"api/index/function/never\" class=\"code-anchor\">never</a> : T></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/skipWhile\" class=\"code-anchor\">skipWhile</a>(predicate: (value: T, index: number) => true): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>predicate</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>(value: T, index: number) => true</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值-2\">返回值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/skipWhile\" class=\"code-anchor\">skipWhile</a>(predicate: (value: T, index: number) => boolean): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>predicate</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>(value: T, index: number) => boolean</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值-3\">返回值</h4>\n  <p><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/skipWhile#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/last\"><code>last</code></a>\n</li>\n    <li><a href=\"api/index/function/skip\"><code>skip</code></a>\n</li>\n    <li><a href=\"api/index/function/skipUntil\"><code>skipUntil</code></a>\n</li>\n    <li><a href=\"api/index/function/skipLast\"><code>skipLast</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/function/last\n - api/index/function/skip\n - api/index/function/skipLast\n - api/index/function/skipUntil\n - api/operators/skipWhile\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/from\n - api/index/function/last\n - api/index/function/never\n - api/index/function/skip\n - api/index/function/skipLast\n - api/index/function/skipUntil\n - api/index/function/skipWhile#example\n - api/index/function/skipWhile#overloads\n - api/index/function/skipWhile#see-also\n - api/index/function/skipWhile#skipwhile\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/interface/OperatorFunction\n - api/index/type-alias/Falsy\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/skipWhile.ts?message=docs(index)%3A%20describe%20your%20change...#L8-L74\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/skipWhile.ts#L8-L74\n-->"
}