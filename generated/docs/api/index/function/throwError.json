{
  "id": "api/index/function/throwError",
  "title": "throwError",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/observable/throwError.ts?message=docs(index)%3A%20describe%20your%20change...#L157-L162\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/observable/throwError.ts#L157-L162\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/throwError\", \"name\": \"throwError\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"throwerror\">throwError<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#throwerror\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(errorOrErrorFactory: any, scheduler?: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>errorOrErrorFactory</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>any</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>undefined</code>。</p>\n        <p>型別：<code><a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code></p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n<section class=\"overloads\">\n  <h2 id=\"overloads\">過載形式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#overloads\"><i class=\"material-icons\">link</i></a></h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(errorFactory: () => any): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code-example>\n\n\n  <div class=\"short-description\">\n    <p translation-result=\"on\">建立一個 observable，它將建立一個錯誤實例，並在訂閱後立即將其作為錯誤推送給消費者。</p><p translation-origin=\"off\">Creates an observable that will create an error instance and push it to the consumer as an error\nimmediately upon subscription.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">只是報錯，什麼都不做</span></p><p translation-origin=\"off\"><span class=\"informal\">Just errors and does nothing else</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/throw.png\" width=\"100%\" alt=\"throw marble diagram\"></p>\n<p translation-result=\"on\">這個建立函式對於建立一個 observable 很有用，它會在每次訂閱時建立一個錯誤並報錯。通常，在大多數運算子中，當你可能要回傳錯誤的 Observable 時，這是沒必要的。在大多數情況下，例如在 <a href=\"api/index/function/concatMap\"><code>concatMap</code></a>、<a href=\"api/index/function/mergeMap\"><code>mergeMap</code></a>、<a href=\"api/index/function/defer\"><code>defer</code></a> 和許多其它的內部回傳中，你可以簡單地丟擲錯誤，RxJS 會捕獲它並把這個錯誤通知消費者。</p><p translation-origin=\"off\">This creation function is useful for creating an observable that will create an error and error every\ntime it is subscribed to. Generally, inside of most operators when you might want to return an errored\nobservable, this is unnecessary. In most cases, such as in the inner return of <a href=\"api/index/function/concatMap\"><code>concatMap</code></a>,\n<a href=\"api/index/function/mergeMap\"><code>mergeMap</code></a>, <a href=\"api/index/function/defer\"><code>defer</code></a>, and many others, you can simply throw the error, and RxJS will pick\nthat up and notify the consumer of the error.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">建立一個簡單的 Observable，它將建立一個帶有時間戳的新錯誤，並在你每次訂閱它時記錄它和錯誤訊息</p><p translation-origin=\"off\">Create a simple observable that will create a new error with a timestamp and log it\nand the message every time you subscribe to it</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nlet errorCount = 0;\n\nconst errorWithTimestamp$ = <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => {\n  const error: any = new Error(`This is error number ${ ++errorCount }`);\n  error.timestamp = Date.now();\n  return error;\n});\n\nerrorWithTimestamp$.subscribe({\n  error: err => console.log(err.timestamp, err.message)\n});\n\nerrorWithTimestamp$.subscribe({\n  error: err => console.log(err.timestamp, err.message)\n});\n\n// Logs the <a href=\"api/index/function/timestamp\" class=\"code-anchor\">timestamp</a> and a new error message for each subscription\n</code-example>\n<h3 id=\"unnecessary-usage\" translation-result=\"on\">非必要的使用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#unnecessary-usage\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"unnecessary-usage\">Unnecessary usage<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#unnecessary-usage\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">在運算子或帶有回呼的建立函式中使用 <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a></code> 通常不是必需的</p><p translation-origin=\"off\">Using <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a></code> inside of an operator or creation function\nwith a callback, is usually not necessary</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/concatMap\" class=\"code-anchor\">concatMap</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>, <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst delays$ = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1000, 2000, Infinity, 3000);\n\ndelays$.pipe(\n  <a href=\"api/index/function/concatMap\" class=\"code-anchor\">concatMap</a>(ms => {\n    if (ms &#x3C; 10000) {\n      return <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(ms);\n    } else {\n      // This is probably overkill.\n      return <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => new Error(`Invalid time ${ ms }`));\n    }\n  })\n)\n.subscribe({\n  next: console.log,\n  error: console.error\n});\n</code-example>\n<p translation-result=\"on\">你可以改為丟擲錯誤</p><p translation-origin=\"off\">You can just throw the error instead</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>, <a href=\"api/index/function/concatMap\" class=\"code-anchor\">concatMap</a>, <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst delays$ = <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1000, 2000, Infinity, 3000);\n\ndelays$.pipe(\n  <a href=\"api/index/function/concatMap\" class=\"code-anchor\">concatMap</a>(ms => {\n    if (ms &#x3C; 10000) {\n      return <a href=\"api/index/function/timer\" class=\"code-anchor\">timer</a>(ms);\n    } else {\n      // Cleaner and easier to read for most folks.\n      throw new Error(`Invalid time ${ ms }`);\n    }\n  })\n)\n.subscribe({\n  next: console.log,\n  error: console.error\n});\n</code-example>\n\n</div>\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>errorFactory</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">一個工廠函式，它將建立被推送的錯誤實例。</p><p translation-origin=\"off\">        A factory function that will create the error instance that is pushed.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-1\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(error: any): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code-example>\n\n\n  <div class=\"short-description\">\n    <p translation-result=\"on\">回傳一個 observable，它會在訂閱後立即傳送指定的錯誤。</p><p translation-origin=\"off\">Returns an observable that will error with the specified error immediately upon subscription.</p>\n\n\n</div>\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">在 v8 中將刪除對傳入錯誤值的支援。相反，要傳入工廠函式 <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => new Error('test'))</code>。這是因為它會在要建立它的那一刻建立錯誤並捕獲一個更合適的跟蹤堆疊。如果由於某種原因你需要提前建立錯誤，你仍然可以這樣做： <code>const err = new Error('test'); <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => err);</code>。</p><p translation-origin=\"off\">Support for passing an error value will be removed in v8. Instead, pass a factory function to <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => new Error('test'))</code>. This is\nbecause it will create the error at the moment it should be created and capture a more appropriate stack trace. If\nfor some reason you need to create the error ahead of time, you can still do that: <code>const err = new Error('test'); <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => err);</code>.</p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>error</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">要傳送的錯誤實例</p><p translation-origin=\"off\">        The error instance to emit</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-2\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(errorOrErrorFactory: any, scheduler: <a href=\"api/index/interface/SchedulerLike\" class=\"code-anchor\">SchedulerLike</a>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code-example>\n\n\n  <div class=\"short-description\">\n    <p translation-result=\"on\">透過訂閱時在延遲 <code>0</code> 處排程它，可以使用給定的排程器來通知消費者錯誤。</p><p translation-origin=\"off\">Notifies the consumer of an error using a given scheduler by scheduling it at delay <code>0</code> upon subscription.</p>\n\n\n</div>\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/throwError#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\"><code>scheduler</code> 引數將在 v8 中刪除。請將 <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a></code> 與 <a href=\"api/index/function/observeOn\"><code>observeOn</code></a> 結合使用： <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => new Error('test')).pipe(<a href=\"api/index/function/observeOn\" class=\"code-anchor\">observeOn</a>(scheduler));</code>。詳細訊息： <a href=\"https://rxjs.dev/deprecations/scheduler-argument\">https://rxjs.dev/deprecations/scheduler-argument</a></p><p translation-origin=\"off\">The <code>scheduler</code> parameter will be removed in v8.\nUse <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a></code> in combination with <a href=\"api/index/function/observeOn\"><code>observeOn</code></a>: <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => new Error('test')).pipe(<a href=\"api/index/function/observeOn\" class=\"code-anchor\">observeOn</a>(scheduler));</code>.\nDetails: <a href=\"https://rxjs.dev/deprecations/scheduler-argument\">https://rxjs.dev/deprecations/scheduler-argument</a></p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>errorOrErrorFactory</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">錯誤實例或錯誤工廠</p><p translation-origin=\"off\">        An error instance or error factory</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">用於安排錯誤通知的排程器</p><p translation-origin=\"off\">        A scheduler to use to schedule the error notification</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-3\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;<a href=\"api/index/function/never\" class=\"code-anchor\">never</a>></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - 6-to-7-change-summary\n - api/index\n - api/index/const/NEVER\n - api/index/function/empty\n - api/index/function/timeout\n - api/operators/timeout\n - deprecations/breaking-changes\n - deprecations/subscribe-arguments\n - guide/testing/marble-testing\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable\n - api/index/function/concatMap\n - api/index/function/defer\n - api/index/function/from\n - api/index/function/mergeMap\n - api/index/function/never\n - api/index/function/observeOn\n - api/index/function/of\n - api/index/function/throwError#deprecation-notes\n - api/index/function/throwError#example\n - api/index/function/throwError#overloads\n - api/index/function/throwError#throwerror\n - api/index/function/throwError#unnecessary-usage\n - api/index/function/timer\n - api/index/function/timestamp\n - api/index/interface/SchedulerLike\n - https://github.com/reactivex/rxjs/edit/master/src/internal/observable/throwError.ts?message=docs(index)%3A%20describe%20your%20change...#L157-L162\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/observable/throwError.ts#L157-L162\n - https://rxjs.dev/deprecations/scheduler-argument\n-->"
}