{
  "id": "api/index/function/takeWhile",
  "title": "takeWhile",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/takeWhile.ts?message=docs(index)%3A%20describe%20your%20change...#L11-L83\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/takeWhile.ts#L11-L83\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/takeWhile\", \"name\": \"takeWhile\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"takewhile\">takeWhile<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/takeWhile#takewhile\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    <label class=\"api-status-label operator\">操作符</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">只要每个值都满足给定的 <code>predicate</code>，就发出源 Observable 发出的值，然后在不满足该 <code>predicate</code> 时立即完成。</p><p translation-origin=\"off\">Emits values emitted by the source Observable so long as each value satisfies\nthe given <code>predicate</code>, and then completes as soon as this <code>predicate</code> is not\nsatisfied.</p>\n\n<p translation-result=\"on\">仅当它们通过给定条件时才从源中获取值。当第一个值不满足时，它完成。</p><p translation-origin=\"off\"><span class=\"informal\">Takes values from the source only while they pass the\ncondition given. When the first value does not satisfy, it completes.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/takeWhile.png\" width=\"100%\" alt=\"takeWhile marble diagram\"></p>\n<p translation-result=\"on\"><code><a href=\"api/index/function/takeWhile\" class=\"code-anchor\">takeWhile</a></code> 订阅并开始镜像源 Observable。源上发出的每个值都被赋予返回布尔值的 <code>predicate</code> 函数，表示源值要满足的条件。输出 Observable 发出源值，直到 <code>predicate</code> 返回 false，此时 <code><a href=\"api/index/function/takeWhile\" class=\"code-anchor\">takeWhile</a></code> 停止镜像源 Observable 并完成输出 Observable。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/takeWhile\" class=\"code-anchor\">takeWhile</a></code> subscribes and begins mirroring the source Observable. Each value\nemitted on the source is given to the <code>predicate</code> function which returns a\nboolean, representing a condition to be satisfied by the source values. The\noutput Observable emits the source values until such time as the <code>predicate</code>\nreturns false, at which point <code><a href=\"api/index/function/takeWhile\" class=\"code-anchor\">takeWhile</a></code> stops mirroring the source\nObservable and completes the output Observable.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/takeWhile#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/takeWhile#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">仅当 clientX 属性大于 200 时才发出点击事件</p><p translation-origin=\"off\">Emit click events only while the clientX property is greater than 200</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/takeWhile\" class=\"code-anchor\">takeWhile</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>&#x3C;PointerEvent>(document, 'click');\nconst result = clicks.pipe(<a href=\"api/index/function/takeWhile\" class=\"code-anchor\">takeWhile</a>(ev => ev.clientX > 200));\nresult.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/takeWhile\" class=\"code-anchor\">takeWhile</a>&#x3C;T>(predicate: (value: T, index: number) => boolean, inclusive: boolean = false): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>predicate</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">计算源 Observable 发出的值并返回布尔值的函数。还将（从零开始的）索引作为第二个参数。</p><p translation-origin=\"off\">        A function that\nevaluates a value emitted by the source Observable and returns a boolean.\nAlso takes the (zero-based) index as the second argument.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>inclusive</td>\n      \n      <td class=\"param-description\">\n      <p>        可选。默认值为 <code>false</code>。</p>\n<p translation-result=\"on\">当设置为 <code>true</code> 时，导致 <code>predicate</code> 返回 <code>false</code> 的值也将被发出。</p><p translation-origin=\"off\">        When set to <code>true</code> the value that caused\n<code>predicate</code> to return <code>false</code> will also be emitted.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p translation-result=\"on\">一个返回 Observable 的函数，只要每个值满足 <code>predicate</code> 定义的条件，它就会从源 Observable 发出值，然后完成。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that emits values from the\nsource Observable so long as each value satisfies the condition defined by\nthe <code>predicate</code>, then completes.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n<section class=\"overloads\">\n  <h2 id=\"overloads\">重载形式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/takeWhile#overloads\"><i class=\"material-icons\">link</i></a></h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/takeWhile\" class=\"code-anchor\">takeWhile</a>(predicate: BooleanConstructor, inclusive: true): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>predicate</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>BooleanConstructor</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>inclusive</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>true</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值-1\">返回值</h4>\n  <p><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/takeWhile\" class=\"code-anchor\">takeWhile</a>(predicate: BooleanConstructor, inclusive: false): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/type-alias/TruthyTypesOf\" class=\"code-anchor\">TruthyTypesOf</a>&#x3C;T>></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>predicate</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>BooleanConstructor</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>inclusive</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>false</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值-2\">返回值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/type-alias/TruthyTypesOf\" class=\"code-anchor\">TruthyTypesOf</a>&#x3C;T>></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/takeWhile\" class=\"code-anchor\">takeWhile</a>(predicate: BooleanConstructor): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/type-alias/TruthyTypesOf\" class=\"code-anchor\">TruthyTypesOf</a>&#x3C;T>></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>predicate</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>BooleanConstructor</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值-3\">返回值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, <a href=\"api/index/type-alias/TruthyTypesOf\" class=\"code-anchor\">TruthyTypesOf</a>&#x3C;T>></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/takeWhile\" class=\"code-anchor\">takeWhile</a>(predicate: (value: T, index: number) => value is S): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, S></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>predicate</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>(value: T, index: number) => value is S</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值-4\">返回值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, S></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/takeWhile\" class=\"code-anchor\">takeWhile</a>(predicate: (value: T, index: number) => value is S, inclusive: false): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, S></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>predicate</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>(value: T, index: number) => value is S</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>inclusive</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>false</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值-5\">返回值</h4>\n  <p><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, S></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/takeWhile\" class=\"code-anchor\">takeWhile</a>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>predicate</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>(value: T, index: number) => boolean</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>inclusive</td>\n      \n      <td class=\"param-description\">\n              <p>可选。默认值为 <code>undefined</code>。</p>\n        <p>类型：<code>boolean</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值-6\">返回值</h4>\n  <p><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/takeWhile#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/take\"><code>take</code></a>\n</li>\n    <li><a href=\"api/index/function/takeLast\"><code>takeLast</code></a>\n</li>\n    <li><a href=\"api/index/function/takeUntil\"><code>takeUntil</code></a>\n</li>\n    <li><a href=\"api/index/function/skip\"><code>skip</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/class/Observable\n - api/index/function/animationFrames\n - api/index/function/connect\n - api/index/function/firstValueFrom\n - api/index/function/lastValueFrom\n - api/index/function/repeat\n - api/index/function/take\n - api/index/function/takeLast\n - api/index/function/takeUntil\n - api/operators/takeWhile\n - deprecations/to-promise\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/skip\n - api/index/function/take\n - api/index/function/takeLast\n - api/index/function/takeUntil\n - api/index/function/takeWhile#example\n - api/index/function/takeWhile#overloads\n - api/index/function/takeWhile#see-also\n - api/index/function/takeWhile#takewhile\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/interface/OperatorFunction\n - api/index/type-alias/TruthyTypesOf\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/takeWhile.ts?message=docs(index)%3A%20describe%20your%20change...#L11-L83\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/takeWhile.ts#L11-L83\n-->"
}