{
  "id": "api/index/function/audit",
  "title": "audit",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/audit.ts?message=docs(index)%3A%20describe%20your%20change...#L7-L110\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/audit.ts#L7-L110\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/audit\", \"name\": \"audit\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"audit\">audit<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/audit#audit\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    <label class=\"api-status-label operator\">運算子</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">在由另一個 Observable 確定的持續時間內忽略源的值，然後從來源 Observable 傳送最新值，然後重複此過程。</p><p translation-origin=\"off\">Ignores source values for a duration determined by another Observable, then\nemits the most recent value from the source Observable, then repeats this\nprocess.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">就像 <a href=\"api/index/function/auditTime\"><code>auditTime</code></a>，但其靜默的持續時間由第二個 Observable 決定。</span></p><p translation-origin=\"off\"><span class=\"informal\">It's like <a href=\"api/index/function/auditTime\"><code>auditTime</code></a>, but the silencing\nduration is determined by a second Observable.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/audit.svg\" width=\"100%\" alt=\"audit marble diagram\"></p>\n<p translation-result=\"on\"><code><a href=\"api/index/function/audit\" class=\"code-anchor\">audit</a></code> 類似於 <code><a href=\"api/index/function/throttle\" class=\"code-anchor\">throttle</a></code>，但它會從靜默時間視窗傳送最後一個值，而不是第一個。<code><a href=\"api/index/function/audit\" class=\"code-anchor\">audit</a></code> 會在其內部計時器停用後立即在輸出 Observable 上傳送來自來源 Observable 的最新值，並在啟用計時器時忽略源值。最初，定時器被停用。一旦第一個來源值抵達，透過使用源值呼叫 <code>durationSelector</code> 函式來啟用計時器，該函式回傳一個控制『持續時間』的 Observable。當持續時間 Observable 傳送一個值時，計時器就會被停用，然後在輸出 Observable 上傳送最近的源值，並對下一個源值重複此過程。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/audit\" class=\"code-anchor\">audit</a></code> is similar to <code><a href=\"api/index/function/throttle\" class=\"code-anchor\">throttle</a></code>, but emits the last value from the silenced\ntime window, instead of the first value. <code><a href=\"api/index/function/audit\" class=\"code-anchor\">audit</a></code> emits the most recent value\nfrom the source Observable on the output Observable as soon as its internal\ntimer becomes disabled, and ignores source values while the timer is enabled.\nInitially, the timer is disabled. As soon as the first source value arrives,\nthe timer is enabled by calling the <code>durationSelector</code> function with the\nsource value, which returns the \"duration\" Observable. When the duration\nObservable emits a value, the timer is disabled, then the most\nrecent source value is emitted on the output Observable, and this process\nrepeats for the next source value.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/audit#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/audit#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">以每秒最多一次點選的速度傳送點選事件</p><p translation-origin=\"off\">Emit clicks at a rate of at most one click per second</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/audit\" class=\"code-anchor\">audit</a>, <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nconst result = clicks.pipe(<a href=\"api/index/function/audit\" class=\"code-anchor\">audit</a>(ev => <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000)));\nresult.subscribe(x => console.log(x));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/audit\" class=\"code-anchor\">audit</a>&#x3C;T>(durationSelector: (value: T) => <a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a>&#x3C;any>): <a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>durationSelector</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">一個從來源 Observable 接收值的函式，用於計算靜默持續時間，以 Observable 或 Promise 的形式回傳。</p><p translation-origin=\"off\">        A function\nthat receives a value from the source Observable, for computing the silencing\nduration, returned as an Observable or a Promise.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">一個回傳 Observable 的函式，該 Observable 會對來源 Observable 的進行傳送速率的限制。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/MonoTypeOperatorFunction\" class=\"code-anchor\">MonoTypeOperatorFunction&#x3C;T></a></code>: A function that returns an Observable that performs rate-limiting of\nemissions from the source Observable.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/audit#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/auditTime\"><code>auditTime</code></a>\n</li>\n    <li><a href=\"api/index/function/debounce\"><code>debounce</code></a>\n</li>\n    <li><a href=\"api/index/function/delayWhen\"><code>delayWhen</code></a>\n</li>\n    <li><a href=\"api/index/function/sample\"><code>sample</code></a>\n</li>\n    <li><a href=\"api/index/function/throttle\"><code>throttle</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - 6-to-7-change-summary\n - api/index\n - api/index/function/auditTime\n - api/index/function/debounce\n - api/index/function/debounceTime\n - api/index/function/delay\n - api/index/function/delayWhen\n - api/index/function/sample\n - api/index/function/throttle\n - api/operators/audit\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/audit#audit\n - api/index/function/audit#example\n - api/index/function/audit#see-also\n - api/index/function/auditTime\n - api/index/function/debounce\n - api/index/function/delayWhen\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/interval\n - api/index/function/sample\n - api/index/function/throttle\n - api/index/interface/MonoTypeOperatorFunction\n - api/index/type-alias/ObservableInput\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/audit.ts?message=docs(index)%3A%20describe%20your%20change...#L7-L110\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/audit.ts#L7-L110\n-->"
}