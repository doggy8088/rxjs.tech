{
  "id": "api/index/function/sequenceEqual",
  "title": "sequenceEqual",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/sequenceEqual.ts?message=docs(index)%3A%20describe%20your%20change...#L6-L149\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/sequenceEqual.ts#L6-L149\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/sequenceEqual\", \"name\": \"sequenceEqual\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"sequenceequal\">sequenceEqual<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/sequenceEqual#sequenceequal\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    <label class=\"api-status-label operator\">運算子</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">使用可選的比較器函式按順序比較兩個 Observable 的所有值，並回傳一個表示兩個序列是否相等的單布林值 Observable。</p><p translation-origin=\"off\">Compares all values of two observables in sequence using an optional comparator function\nand returns an observable of a single boolean value representing whether or not the two sequences\nare equal.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">按順序檢查兩個 Observable 傳送的所有值是否相等。</span></p><p translation-origin=\"off\"><span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/sequenceEqual.png\" width=\"100%\" alt=\"sequenceEqual marble diagram\"></p>\n<p translation-result=\"on\"><code><a href=\"api/index/function/sequenceEqual\" class=\"code-anchor\">sequenceEqual</a></code> 會訂閱兩個 observable 並緩衝來自每個 observable 的傳入值。每當任何一個 observable 傳送一個值時，該值都會被緩衝，並且緩衝區會從底部向上移動和比較；如果任何一對值不對應，則回傳的 observable 將傳送 <code>false</code> 並完成。如果其中一個 observable 完成，則運算子將等待另一個 observable 完成；如果另一個 observable 在完成之前還發送了別的值，則回傳的 observable 將傳送 <code>false</code> 並完成。如果一個 observable 從未完成或在另一個完成後傳送，則回傳的 observable 將永遠不會完成。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/sequenceEqual\" class=\"code-anchor\">sequenceEqual</a></code> subscribes to two observables and buffers incoming values from each observable. Whenever either\nobservable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\nup; If any value pair doesn't match, the returned observable will emit <code>false</code> and complete. If one of the\nobservables completes, the operator will wait for the other observable to complete; If the other\nobservable emits before completing, the returned observable will emit <code>false</code> and complete. If one observable never\ncompletes or emits after the other completes, the returned observable will never complete.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/sequenceEqual#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/sequenceEqual#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">確定 Konami 程式碼是否對應</p><p translation-origin=\"off\">Figure out if the Konami code matches</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/from\" class=\"code-anchor\">from</a>, <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>, <a href=\"api/index/function/map\" class=\"code-anchor\">map</a>, <a href=\"api/index/function/bufferCount\" class=\"code-anchor\">bufferCount</a>, <a href=\"api/index/function/mergeMap\" class=\"code-anchor\">mergeMap</a>, <a href=\"api/index/function/sequenceEqual\" class=\"code-anchor\">sequenceEqual</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst codes = <a href=\"api/index/function/from\" class=\"code-anchor\">from</a>([\n  'ArrowUp',\n  'ArrowUp',\n  'ArrowDown',\n  'ArrowDown',\n  'ArrowLeft',\n  'ArrowRight',\n  'ArrowLeft',\n  'ArrowRight',\n  'KeyB',\n  'KeyA',\n  'Enter', // no start key, clearly.\n]);\n\nconst keys = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>&#x3C;KeyboardEvent>(document, 'keyup').pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(e => e.code));\nconst matches = keys.pipe(\n  <a href=\"api/index/function/bufferCount\" class=\"code-anchor\">bufferCount</a>(11, 1),\n  <a href=\"api/index/function/mergeMap\" class=\"code-anchor\">mergeMap</a>(last11 => <a href=\"api/index/function/from\" class=\"code-anchor\">from</a>(last11).pipe(<a href=\"api/index/function/sequenceEqual\" class=\"code-anchor\">sequenceEqual</a>(codes)))\n);\nmatches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/sequenceEqual\" class=\"code-anchor\">sequenceEqual</a>&#x3C;T>(compareTo: <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>, comparator: (a: T, b: T) => boolean = (a, b) => a === b): <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, boolean></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>compareTo</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">要與源序列進行比較的 Observable 序列。</p><p translation-origin=\"off\">        The observable sequence to compare the source sequence to.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>comparator</td>\n      \n      <td class=\"param-description\">\n      <p>        可選。預設值為 <code>(a, b) => a === b</code>。</p>\n<p translation-result=\"on\">用於比較每個值對的可選函式</p><p translation-origin=\"off\">        An optional function to compare each value pair</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">一個回傳 Observable 的函式，該 Observable 會發送一個布林值，表示源 Observable 傳送的值和所提供的 Observable 傳送的值是否依序相等。</p><p translation-origin=\"off\"><code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, boolean></code>: A function that returns an Observable that emits a single boolean\nvalue representing whether or not the values emitted by the source\nObservable and provided Observable were equal in sequence.</p>\n\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/sequenceEqual#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/combineLatest\"><code>combineLatest</code></a>\n</li>\n    <li><a href=\"api/index/function/zip\"><code>zip</code></a>\n</li>\n    <li><a href=\"api/index/function/withLatestFrom\"><code>withLatestFrom</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/operators/sequenceEqual\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable\n - api/index/function/bufferCount\n - api/index/function/combineLatest\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/map\n - api/index/function/mergeMap\n - api/index/function/sequenceEqual#example\n - api/index/function/sequenceEqual#see-also\n - api/index/function/sequenceEqual#sequenceequal\n - api/index/function/withLatestFrom\n - api/index/function/zip\n - api/index/interface/OperatorFunction\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/sequenceEqual.ts?message=docs(index)%3A%20describe%20your%20change...#L6-L149\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/operators/sequenceEqual.ts#L6-L149\n-->"
}