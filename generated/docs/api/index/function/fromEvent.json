{
  "id": "api/index/function/fromEvent",
  "title": "fromEvent",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/observable/fromEvent.ts?message=docs(index)%3A%20describe%20your%20change...#L121-L348\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/observable/fromEvent.ts#L121-L348\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/fromEvent\", \"name\": \"fromEvent\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"fromevent\">fromEvent<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/fromEvent#fromevent\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">建立一個 Observable，它會發出來自給定事件目標的特定型別的事件。</p><p translation-origin=\"off\">Creates an Observable that emits events of a specific type coming from the\ngiven event target.</p>\n\n<p translation-result=\"on\"><span class=\"informal\">從 DOM 事件或 Node.js EventEmitter 事件或其它事件建立一個 Observable。</span></p><p translation-origin=\"off\"><span class=\"informal\">Creates an Observable from DOM events, or Node.js\nEventEmitter events or others.</span></p>\n\n<p><img src=\"/assets/images/marble-diagrams/fromEvent.png\" width=\"100%\" alt=\"fromEvent marble diagram\"></p>\n<p translation-result=\"on\"><code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> 的第一個引數是要從中接收事件的目標，它是一個物件，具有一個能用來註冊事件處理器的方法。第二個引數是一個字串，用來指出我們要監聽的事件型別。<code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> 支援一些選定型別的事件目標，稍後將詳細介紹。如果你的事件目標與下面列出的任何目標都不對應，則應該使用可用於任意 API 的 <a href=\"api/index/function/fromEventPattern\"><code>fromEventPattern</code></a>。對於 <code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> 支援的 API，它們用於新增和刪除事件處理函式的方法有不同的名稱，但它們都能接受用於描述事件型別的字串和一個函式，每當這類事件發生時都會呼叫該函式。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> accepts as a first argument event target, which is an object with methods\nfor registering event handler functions. As a second argument it takes string that indicates\ntype of event we want to listen for. <code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> supports selected types of event targets,\nwhich are described in detail below. If your event target does not match any of the ones listed,\nyou should use <a href=\"api/index/function/fromEventPattern\"><code>fromEventPattern</code></a>, which can be used on arbitrary APIs.\nWhen it comes to APIs supported by <code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code>, their methods for adding and removing event\nhandler functions have different names, but they all accept a string describing event type\nand function itself, which will be called whenever said event happens.</p>\n\n<p translation-result=\"on\">每當訂閱所生成的 Observable 時，事件處理函式都會註冊到給定事件型別的事件目標。當該事件觸發時，作為第一個引數傳給註冊函式的那個值將由輸出 Observable 發出。當 Observable 被退訂時，該函式將從事件目標中取消註冊。</p><p translation-origin=\"off\">Every time resulting Observable is subscribed, event handler function will be registered\nto event target on given event type. When that event fires, value\npassed as a first argument to registered function will be emitted by output Observable.\nWhen Observable is unsubscribed, function will be unregistered from event target.</p>\n\n<p translation-result=\"on\">請注意，如果事件目標呼叫的是具有多個引數的已註冊函式，則第二個和後續引數將不會出現在結果流中。為了訪問它們，你可以給 <code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> 傳一個可選的投影函式，該函式將使用傳給事件處理器的所有引數進行呼叫。然後，輸出 Observable 將發出此投影函式回傳的值，而不是通常的值。</p><p translation-origin=\"off\">Note that if event target calls registered function with more than one argument, second\nand following arguments will not appear in resulting stream. In order to get access to them,\nyou can pass to <code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> optional project function, which will be called with all arguments\npassed to event handler. Output Observable will then emit value returned by project function,\ninstead of the usual value.</p>\n\n<p translation-result=\"on\">請記住，下面列出的事件目標都是透過鴨子型別進行檢查的。這意味著無論你擁有什麼樣的物件，也無論你在什麼環境中工作，只要它公開瞭如前所述的方法（當然前提是它們的行為也如前所述），你都可以安全地在該物件上使用 <code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code>。因此，如果 Node.js 函式庫公開了與 DOM EventTarget 具有相同方法名稱的事件目標，<code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> 仍然是一個不錯的選擇。</p><p translation-origin=\"off\">Remember that event targets listed below are checked via duck typing. It means that\nno matter what kind of object you have and no matter what environment you work in,\nyou can safely use <code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> on that object if it exposes described methods (provided\nof course they behave as was described above). So for example if Node.js library exposes\nevent target which has the same method names as DOM EventTarget, <code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> is still\na good choice.</p>\n\n<p translation-result=\"on\">如果你使用的 API 更像回呼，而非事件處理器（已訂閱的回呼函式只會觸發一次，因此無需手動取消註冊它），你應該改用 <a href=\"api/index/function/bindCallback\"><code>bindCallback</code></a> 或 <a href=\"api/index/function/bindNodeCallback\"><code>bindNodeCallback</code></a>。</p><p translation-origin=\"off\">If the API you use is more callback then event handler oriented (subscribed\ncallback function fires only once and thus there is no need to manually\nunregister it), you should use <a href=\"api/index/function/bindCallback\"><code>bindCallback</code></a> or <a href=\"api/index/function/bindNodeCallback\"><code>bindNodeCallback</code></a>\ninstead.</p>\n\n<p translation-result=\"on\"><code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> 支援以下型別的事件目標：</p><p translation-origin=\"off\"><code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> supports following types of event targets:</p>\n\n<p><strong>DOM EventTarget</strong></p>\n<p translation-result=\"on\">這是一個帶有 <code>addEventListener</code> 和 <code>removeEventListener</code> 方法的物件。</p><p translation-origin=\"off\">This is an object with <code>addEventListener</code> and <code>removeEventListener</code> methods.</p>\n\n<p translation-result=\"on\">在瀏覽器中，<code>addEventListener</code> 接受除了事件型別字串和事件處理函式引數之外的第三個可選引數，它是一個物件或布林值，都用於額外設定如何以及何時呼叫傳入的函式。當 <code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> 與該類別型的事件目標一起使用時，你也可以將此值作為第三個引數來提供。</p><p translation-origin=\"off\">In the browser, <code>addEventListener</code> accepts - apart from event type string and event\nhandler function arguments - optional third parameter, which is either an object or boolean,\nboth used for additional configuration how and when passed function will be called. When\n<code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> is used with event target of that type, you can provide this values\nas third parameter as well.</p>\n\n<p><strong>Node.js EventEmitter</strong></p>\n<p translation-result=\"on\">具有 <code>addListener</code> 和 <code>removeListener</code> 方法的物件。</p><p translation-origin=\"off\">An object with <code>addListener</code> and <code>removeListener</code> methods.</p>\n\n<p translation-result=\"on\"><strong>jQuery 風格的事件目標</strong></p><p translation-origin=\"off\"><strong>JQuery-style event target</strong></p>\n\n<p translation-result=\"on\">具有 <code>on</code> 和 <code>off</code> 方法的物件</p><p translation-origin=\"off\">An object with <code>on</code> and <code>off</code> methods</p>\n\n<p><strong>DOM NodeList</strong></p>\n<p translation-result=\"on\">DOM 節點的清單，例如由 <code>document.querySelectorAll</code> 或 <code>Node.childNodes</code>。</p><p translation-origin=\"off\">List of DOM Nodes, returned for example by <code>document.querySelectorAll</code> or <code>Node.childNodes</code>.</p>\n\n<p translation-result=\"on\">雖然這個集合本身不是事件目標，但 <code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> 將遍歷它包含的所有節點並在每個節點中安裝事件處理函式。當回傳的 Observable 被退訂時，函式將從所有節點中移除。</p><p translation-origin=\"off\">Although this collection is not event target in itself, <code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> will iterate over all Nodes\nit contains and install event handler function in every of them. When returned Observable\nis unsubscribed, function will be removed from all Nodes.</p>\n\n<p><strong>DOM HtmlCollection</strong></p>\n<p translation-result=\"on\">就像 NodeList 一樣，它是 DOM 節點的集合。在這裡，事件處理函式也會在每個元素中安裝和刪除。</p><p translation-origin=\"off\">Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\ninstalled and removed in each of elements.</p>\n\n<h2 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/fromEvent#examples\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/fromEvent#examples\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">發出在 DOM 文件上發生的點選</p><p translation-origin=\"off\">Emit clicks happening on the DOM document</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst clicks = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click');\nclicks.subscribe(x => console.log(x));\n\n// Results in:\n// MouseEvent object logged to console <a href=\"api/index/function/every\" class=\"code-anchor\">every</a> time a click\n// occurs on the document.\n</code-example>\n<p translation-result=\"on\">使用帶有捕獲選項的 <code>addEventListener</code></p><p translation-origin=\"off\">Use <code>addEventListener</code> with capture option</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst clicksInDocument = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(document, 'click', true); // note optional configuration parameter\n                                                             // which will be passed to addEventListener\nconst clicksInDiv = <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(someDivInDocument, 'click');\n\nclicksInDocument.subscribe(() => console.log('document'));\nclicksInDiv.subscribe(() => console.log('div'));\n\n// By default events bubble UP in DOM tree, so normally\n// when we would click on div in document\n// \"div\" would be logged <a href=\"api/index/function/first\" class=\"code-anchor\">first</a> and then \"document\".\n// Since we specified optional `capture` option, document\n// will catch event when it goes DOWN DOM tree, so console\n// will log \"document\" and then \"div\".\n</code-example>\n<p></p>\n  \n\n  \n\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>&#x3C;T>(target: any, eventName: string, options?: EventListenerOptions | ((...args: any[]) => T), resultSelector?: (...args: any[]) => T): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>target</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">要附加事件處理器的 DOM EventTarget、Node.js EventEmitter、類似 JQuery 的事件目標、NodeList 或 HTMLCollection。</p><p translation-origin=\"off\">        The DOM EventTarget, Node.js\nEventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>eventName</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">由 <code>target</code> 發出的感興趣的事件名稱。</p><p translation-origin=\"off\">        The event name of interest, being emitted by the\n<code>target</code>.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>options</td>\n      \n      <td class=\"param-description\">\n      <p>        可選。預設值為 <code>undefined</code>。</p>\n<p translation-result=\"on\">要傳給 addEventListener 的選項</p><p translation-origin=\"off\">        Options to pass through to addEventListener</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>resultSelector</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>undefined</code>。</p>\n        <p>型別：<code>(...args: any[]) => T</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable&#x3C;T></a></code>: </p>\n\n  \n\n\n\n\n\n\n\n  \n\n\n\n<section class=\"overloads\">\n  <h2 id=\"overloads\">過載形式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/fromEvent#overloads\"><i class=\"material-icons\">link</i></a></h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(target: HasEventTargetAddRemove&#x3C;T> | ArrayLike&#x3C;HasEventTargetAddRemove&#x3C;T>>, eventName: string): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>target</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>HasEventTargetAddRemove<t> | ArrayLike<haseventtargetaddremove<t>></haseventtargetaddremove<t></t></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>eventName</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>string</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-1\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable&#x3C;T></a></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(target: HasEventTargetAddRemove&#x3C;T> | ArrayLike&#x3C;HasEventTargetAddRemove&#x3C;T>>, eventName: string, resultSelector: (event: T) => R): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>target</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>HasEventTargetAddRemove<t> | ArrayLike<haseventtargetaddremove<t>></haseventtargetaddremove<t></t></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>eventName</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>string</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>resultSelector</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>(event: T) => R</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-2\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(target: HasEventTargetAddRemove&#x3C;T> | ArrayLike&#x3C;HasEventTargetAddRemove&#x3C;T>>, eventName: string, options: EventListenerOptions): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>target</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>HasEventTargetAddRemove<t> | ArrayLike<haseventtargetaddremove<t>></haseventtargetaddremove<t></t></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>eventName</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>string</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>options</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>EventListenerOptions</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-3\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable&#x3C;T></a></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(target: HasEventTargetAddRemove&#x3C;T> | ArrayLike&#x3C;HasEventTargetAddRemove&#x3C;T>>, eventName: string, options: EventListenerOptions, resultSelector: (event: T) => R): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>target</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>HasEventTargetAddRemove<t> | ArrayLike<haseventtargetaddremove<t>></haseventtargetaddremove<t></t></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>eventName</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>string</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>options</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>EventListenerOptions</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>resultSelector</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>(event: T) => R</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-4\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(target: NodeStyleEventEmitter | ArrayLike&#x3C;NodeStyleEventEmitter>, eventName: string): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>target</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>NodeStyleEventEmitter | ArrayLike<nodestyleeventemitter></nodestyleeventemitter></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>eventName</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>string</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-5\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(target: NodeStyleEventEmitter | ArrayLike&#x3C;NodeStyleEventEmitter>, eventName: string): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T></code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/fromEvent#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">不要指定顯式型別引數。那些帶有無法推斷的型別引數的簽名將在 v8 中刪除。</p><p translation-origin=\"off\">Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8.</p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>target</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>NodeStyleEventEmitter | ArrayLike<nodestyleeventemitter></nodestyleeventemitter></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>eventName</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>string</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-6\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable&#x3C;T></a></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(target: NodeStyleEventEmitter | ArrayLike&#x3C;NodeStyleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>target</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>NodeStyleEventEmitter | ArrayLike<nodestyleeventemitter></nodestyleeventemitter></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>eventName</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>string</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>resultSelector</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>(...args: any[]) => R</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-7\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(target: NodeCompatibleEventEmitter | ArrayLike&#x3C;NodeCompatibleEventEmitter>, eventName: string): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>target</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>NodeCompatibleEventEmitter | ArrayLike<nodecompatibleeventemitter></nodecompatibleeventemitter></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>eventName</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>string</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-8\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"> <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(target: NodeCompatibleEventEmitter | ArrayLike&#x3C;NodeCompatibleEventEmitter>, eventName: string): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T></code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/fromEvent#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">不要指定顯式型別引數。那些帶有無法推斷的型別引數的簽名將在 v8 中刪除。</p><p translation-origin=\"off\">Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8.</p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>target</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>NodeCompatibleEventEmitter | ArrayLike<nodecompatibleeventemitter></nodecompatibleeventemitter></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>eventName</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>string</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-9\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable&#x3C;T></a></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(target: NodeCompatibleEventEmitter | ArrayLike&#x3C;NodeCompatibleEventEmitter>, eventName: string, resultSelector: (...args: any[]) => R): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>target</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>NodeCompatibleEventEmitter | ArrayLike<nodecompatibleeventemitter></nodecompatibleeventemitter></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>eventName</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>string</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>resultSelector</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>(...args: any[]) => R</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-10\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(target: JQueryStyleEventEmitter&#x3C;any, T> | ArrayLike&#x3C;JQueryStyleEventEmitter&#x3C;any, T>>, eventName: string): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>target</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>JQueryStyleEventEmitter<any, t=\"\"> | ArrayLike<jquerystyleeventemitter<any, t=\"\">></jquerystyleeventemitter<any,></any,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>eventName</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>string</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-11\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable&#x3C;T></a></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a>(target: JQueryStyleEventEmitter&#x3C;any, T> | ArrayLike&#x3C;JQueryStyleEventEmitter&#x3C;any, T>>, eventName: string, resultSelector: (value: T, ...args: any[]) => R): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>target</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>JQueryStyleEventEmitter<any, t=\"\"> | ArrayLike<jquerystyleeventemitter<any, t=\"\">></jquerystyleeventemitter<any,></any,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>eventName</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>string</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>resultSelector</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>(value: T, ...args: any[]) => R</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-12\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code></p>\n\n  \n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/function/fromEvent#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/bindCallback\"><code>bindCallback</code></a>\n</li>\n    <li><a href=\"api/index/function/bindNodeCallback\"><code>bindNodeCallback</code></a>\n</li>\n    <li><a href=\"api/index/function/fromEventPattern\"><code>fromEventPattern</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - 6-to-7-change-summary\n - api/index\n - api/index/function/audit\n - api/index/function/auditTime\n - api/index/function/buffer\n - api/index/function/bufferCount\n - api/index/function/bufferTime\n - api/index/function/bufferToggle\n - api/index/function/bufferWhen\n - api/index/function/combineLatestAll\n - api/index/function/combineLatestWith\n - api/index/function/concatAll\n - api/index/function/concatMap\n - api/index/function/concatMapTo\n - api/index/function/concatWith\n - api/index/function/count\n - api/index/function/debounce\n - api/index/function/debounceTime\n - api/index/function/defaultIfEmpty\n - api/index/function/defer\n - api/index/function/delay\n - api/index/function/delayWhen\n - api/index/function/elementAt\n - api/index/function/endWith\n - api/index/function/exhaustAll\n - api/index/function/exhaustMap\n - api/index/function/expand\n - api/index/function/filter\n - api/index/function/find\n - api/index/function/findIndex\n - api/index/function/first\n - api/index/function/from\n - api/index/function/fromEventPattern\n - api/index/function/map\n - api/index/function/mapTo\n - api/index/function/merge\n - api/index/function/mergeAll\n - api/index/function/mergeMapTo\n - api/index/function/mergeScan\n - api/index/function/mergeWith\n - api/index/function/pairwise\n - api/index/function/pluck\n - api/index/function/reduce\n - api/index/function/repeatWhen\n - api/index/function/sample\n - api/index/function/sampleTime\n - api/index/function/sequenceEqual\n - api/index/function/skipUntil\n - api/index/function/switchAll\n - api/index/function/switchMap\n - api/index/function/switchMapTo\n - api/index/function/takeUntil\n - api/index/function/takeWhile\n - api/index/function/throttle\n - api/index/function/throttleTime\n - api/index/function/throwIfEmpty\n - api/index/function/timestamp\n - api/index/function/window\n - api/index/function/windowCount\n - api/index/function/windowTime\n - api/index/function/windowToggle\n - api/index/function/windowWhen\n - api/index/function/withLatestFrom\n - api/operators/audit\n - api/operators/auditTime\n - api/operators/buffer\n - api/operators/bufferCount\n - api/operators/bufferTime\n - api/operators/bufferToggle\n - api/operators/bufferWhen\n - api/operators/combineLatestAll\n - api/operators/combineLatestWith\n - api/operators/concatAll\n - api/operators/concatMap\n - api/operators/concatMapTo\n - api/operators/concatWith\n - api/operators/count\n - api/operators/debounce\n - api/operators/debounceTime\n - api/operators/defaultIfEmpty\n - api/operators/delay\n - api/operators/delayWhen\n - api/operators/elementAt\n - api/operators/endWith\n - api/operators/exhaustAll\n - api/operators/exhaustMap\n - api/operators/expand\n - api/operators/filter\n - api/operators/find\n - api/operators/findIndex\n - api/operators/first\n - api/operators/map\n - api/operators/mapTo\n - api/operators/mergeAll\n - api/operators/mergeMapTo\n - api/operators/mergeScan\n - api/operators/mergeWith\n - api/operators/pairwise\n - api/operators/partition\n - api/operators/pluck\n - api/operators/reduce\n - api/operators/repeatWhen\n - api/operators/sample\n - api/operators/sampleTime\n - api/operators/sequenceEqual\n - api/operators/skipUntil\n - api/operators/switchAll\n - api/operators/switchMap\n - api/operators/switchMapTo\n - api/operators/takeUntil\n - api/operators/takeWhile\n - api/operators/throttle\n - api/operators/throttleTime\n - api/operators/throwIfEmpty\n - api/operators/timestamp\n - api/operators/window\n - api/operators/windowCount\n - api/operators/windowTime\n - api/operators/windowToggle\n - api/operators/windowWhen\n - api/operators/withLatestFrom\n - deprecations/resultSelector\n - guide/overview\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable\n - api/index/function/bindCallback\n - api/index/function/bindNodeCallback\n - api/index/function/every\n - api/index/function/first\n - api/index/function/from\n - api/index/function/fromEvent#deprecation-notes\n - api/index/function/fromEvent#examples\n - api/index/function/fromEvent#fromevent\n - api/index/function/fromEvent#overloads\n - api/index/function/fromEvent#see-also\n - api/index/function/fromEventPattern\n - https://github.com/reactivex/rxjs/edit/master/src/internal/observable/fromEvent.ts?message=docs(index)%3A%20describe%20your%20change...#L121-L348\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/observable/fromEvent.ts#L121-L348\n-->"
}