{
  "id": "api/index/class/Observable",
  "title": "Observable",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/Observable.ts?message=docs(index)%3A%20describe%20your%20change...#L10-L618\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/Observable.ts#L10-L618\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/class/Observable\", \"name\": \"Observable\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"observable\">Observable<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#observable\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">在任何時間對任何一組值的表示。這是 RxJS 最基本的建立塊。</p><p translation-origin=\"off\">A representation of any set of values over any amount of time. This is the most basic building block\nof RxJS.</p>\n\n<p></p>\n  \n\n  \n\n  \n  <section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T> implements <a class=\"code-anchor\" href=\"api/index/interface/Subscribable\">Subscribable<t></t></a> {\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#create\">static create: (...args: any[]) => any</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#constructor()\">constructor(subscribe?: (this: Observable&#x3C;T>, subscriber: Subscriber&#x3C;T>) => TeardownLogic)</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#source\">source: Observable&#x3C;any> | undefined</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#operator\">operator: Operator&#x3C;any, T> | undefined</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#lift\">lift&#x3C;R>(operator?: Operator&#x3C;T, R>): Observable&#x3C;R></a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#subscribe\">subscribe(observerOrNext?: Partial&#x3C;Observer&#x3C;T>> | ((value: T) => void), error?: (error: any) => void, complete?: () => void): Subscription</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#forEach\">forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise&#x3C;void></a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#pipe\">pipe(...operations: OperatorFunction&#x3C;any, any>[]): Observable&#x3C;any></a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#toPromise\">toPromise(promiseCtor?: PromiseConstructorLike): Promise&#x3C;T | undefined></a>\n}\n</code-example>\n\n  \n  \n  <div class=\"descendants class\">\n    <h2 id=\"子類別\">子類別<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#子類別\"><i class=\"material-icons\">link</i></a></h2>\n    \n\n<ul>\n  \n  <li>\n    <code><a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a></code>\n      \n\n\n  </li>\n  \n  <li>\n    <code><a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a></code>\n      \n\n<ul>\n  \n  <li>\n    <code><a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a></code>\n      \n\n\n  </li>\n  \n  <li>\n    <code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code>\n      \n\n\n  </li>\n  \n  <li>\n    <code><a href=\"api/index/class/AsyncSubject\" class=\"code-anchor\">AsyncSubject</a></code>\n      \n\n\n  </li>\n  \n</ul>\n\n\n  </li>\n  \n</ul>\n\n\n  </div>\n  \n\n</section>\n\n\n  \n  \n  \n\n\n<section class=\"static-properties\">\n  <h2 id=\"靜態屬性\">靜態屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#靜態屬性\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table properties-table\">\n    <thead>\n      <tr><th>屬性</th><th>型別</th><th>說明</th></tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"static-property\">\n        <td><a id=\"create\"></a><code class=\"deprecated-api-item\">create</code></td>\n        <td><label class=\"property-type-label\"><code>(...args: any[]) => any</code></label></td>\n        <td>\n          <p translation-result=\"on\">透過呼叫 Observable 的建構式函式來建立一個新的 Observable</p><p translation-origin=\"off\">Creates a new Observable by calling the Observable constructor</p>\n\n\n          \n          \n        </td>\n      </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n\n\n<h2 id=\"建構式函式\">建構式函式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#建構式函式\"><i class=\"material-icons\">link</i></a></h2>\n<a id=\"constructor()\"></a>\n<table class=\"is-full-width method-table constructor\">\n  \n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor(subscribe?: (this: <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T>, subscriber: <a href=\"api/index/class/Subscriber\" class=\"code-anchor\">Subscriber</a>&#x3C;T>) => <a href=\"api/index/type-alias/TeardownLogic\" class=\"code-anchor\">TeardownLogic</a>)</code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table constructor-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>subscribe</td>\n      \n      <td class=\"param-description\">\n      <p>        可選。預設值為 <code>undefined</code>。</p>\n<p translation-result=\"on\">最初訂閱 Observable 時調用的函式。這個函式有一個訂閱者，可以 <code>next</code> 新的值，或者可以呼叫 <code>error</code> 方法來引發錯誤，或者可以呼叫 <code>complete</code> 來通知成功完成。</p><p translation-origin=\"off\">        the function that is called when the Observable is\ninitially subscribed to. This function is given a Subscriber, to which new values\ncan be <code>next</code>ed, or an <code>error</code> method can be called to raise an error, or\n<code>complete</code> can be called to notify of a successful completion.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n\n\n<section class=\"instance-properties\">\n  <h2 id=\"屬性\">屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#屬性\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table properties-table\">\n    <thead>\n      <tr><th>屬性</th><th>型別</th><th>說明</th></tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"source\"></a><code class=\"deprecated-api-item\">source</code></td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;any> | undefined</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n      </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"operator\"></a><code class=\"deprecated-api-item\">operator</code></td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/index/interface/Operator\" class=\"code-anchor\">Operator</a>&#x3C;any, T> | undefined</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n      </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n\n\n<section class=\"instance-methods\">\n  <h2 id=\"方法\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#方法\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"lift\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"lift\">\n    lift()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#lift\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">建立一個新的 Observable，以這個 Observable 實例作為源，把傳入的運算子定義為新 observable 的運算子。</p><p translation-origin=\"off\">Creates a new Observable, with this Observable instance as the source, and the passed\noperator defined as the new observable's operator.</p>\n\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\">lift&#x3C;R>(operator?: <a href=\"api/index/interface/Operator\" class=\"code-anchor\">Operator</a>&#x3C;T, R>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">內部實現細節，請勿直接使用。將在 v8 中內部化。如果你已經使用 <code>lift</code> 實現了一個運算子，建議你透過直接回傳 <code>new <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>()</code> 來建立一個運算子。請參閱此處的『從零開始建立新運算子』部分： <a href=\"https://rxjs.dev/guide/operators\">https://rxjs.dev/guide/operators</a></p><p translation-origin=\"off\">Internal implementation detail, do not use directly. Will be made internal in v8.\nIf you have implemented an operator using <code>lift</code>, it is recommended that you create an\noperator by simply returning <code>new <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>()</code> directly. See \"Creating new operators from\nscratch\" section here: <a href=\"https://rxjs.dev/guide/operators\">https://rxjs.dev/guide/operators</a></p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>operator</td>\n      \n      <td class=\"param-description\">\n      <p>        可選。預設值為 <code>undefined</code>。</p>\n<p translation-result=\"on\">定義對此 Observable 進行操作的運算子</p><p translation-origin=\"off\">        the operator defining the operation to take on the observable</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p translation-result=\"on\">應用了此 Operator 的新 observable</p><p translation-origin=\"off\"><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code>: a new observable with the Operator applied</p>\n\n\n  \n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"subscribe\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"subscribe\">\n    subscribe()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#subscribe\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">呼叫 Observable 的執行併為它將傳送的通知註冊 Observer 處理器。</p><p translation-origin=\"off\">Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.</p>\n\n\n      </td>\n    </tr>\n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary><h4 class=\"no-anchor\" id=\"有-3-個過載形式\">有 3 個過載形式...</h4></summary>\n          <div class=\"detail-contents\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">subscribe(observer?: Partial&#x3C;<a href=\"api/index/interface/Observer\" class=\"code-anchor\">Observer</a>&#x3C;T>>): <a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>observer</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>undefined</code>。</p>\n        <p>型別：<code>Partial<observer<t>></observer<t></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-1\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">subscribe(next: (value: T) => void): <a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>next</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>(value: T) => void</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-2\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\">subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): <a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">不要傳遞單獨的回呼引數，而是使用 Observer 引數。帶有單獨回呼引數的簽名將在 v8 中被刪除。詳細訊息： <a href=\"https://rxjs.dev/deprecations/subscribe-arguments\">https://rxjs.dev/deprecations/subscribe-arguments</a></p><p translation-origin=\"off\">Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: <a href=\"https://rxjs.dev/deprecations/subscribe-arguments\">https://rxjs.dev/deprecations/subscribe-arguments</a></p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>next</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>undefined</code>。</p>\n        <p>型別：<code>(value: T) => void</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>error</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>undefined</code>。</p>\n        <p>型別：<code>(error: any) => void</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>complete</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>undefined</code>。</p>\n        <p>型別：<code>() => void</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-3\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code></p>\n\n  \n\n\n\n\n\n                \n              \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n  <tr>\n      <td class=\"description\">\n        <p translation-result=\"on\"><span class=\"informal\">當你已擁有所有這些 Observables 但仍然什麼也沒做時使用它。</span></p><p translation-origin=\"off\"><span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span></p>\n\n<p translation-result=\"on\"><code>subscribe</code> 不是一個普通的運算子，而是一個呼叫 Observable 的內部函式 <code>subscribe</code> 的方法。例如，它可能是你傳給 Observable 建構式函式的函式，但大多數時候它是一個函式庫實現，它定義了 Observable 將傳送什麼以及何時傳送。這意味著呼叫 <code>subscribe</code> 實際上是 Observable 開始工作的時刻，而不是它被建立的時刻，就像通常認為的一樣。</p><p translation-origin=\"off\"><code>subscribe</code> is not a regular operator, but a method that calls Observable's internal <code>subscribe</code> function. It\nmight be for example a function that you passed to Observable's constructor, but most of the time it is\na library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\nthat calling <code>subscribe</code> is actually the moment when Observable starts its work, not when it is created, as it is often\nthe thought.</p>\n\n<p translation-result=\"on\">除了開始執行 Observable 之外，此方法還允許你偵聽 Observable 傳送的值，以及它何時完成或出錯。你可以透過以下兩種方式實現此目的。</p><p translation-origin=\"off\">Apart from starting the execution of an Observable, this method allows you to listen for values\nthat an Observable emits, as well as for when it completes or errors. You can achieve this in two\nof the following ways.</p>\n\n<p translation-result=\"on\">第一種方法是建立一個實現了 <a href=\"api/index/interface/Observer\"><code>Observer</code></a> 介面的物件。它應該具有由該介面定義的方法，但請注意，它應該只是一個常規的 JavaScript 物件，你可以用任何方式建立它（ES6 類、經典函式建構式函式、物件字面量等）。特別是，不要嘗試使用任何 RxJS 實現細節來建立 Observer，因為你不需要如此。還要記住，你的物件不必實現所有方法。如果你發現自己建立了一個什麼都不做的方法，你可以簡單地省略它。但是請注意，如果沒有提供 <code>error</code> 方法並且發生了錯誤，它將被非同步丟擲。而使用 <code>try</code> / <code>catch</code> 無法捕獲非同步丟擲的錯誤。要改用 <a href=\"api/index/interface/GlobalConfig#onUnhandledError\"><code>onUnhandledError</code></a> 設定選項或執行時處理器（如 <code>window.onerror</code> 或 <code>process.on('error)</code>）來通知未處理的錯誤。因此，建議你提供 <code>error</code> 方法以免丟失丟擲的各種錯誤。</p><p translation-origin=\"off\">The first way is creating an object that implements <a href=\"api/index/interface/Observer\"><code>Observer</code></a> interface. It should have methods\ndefined by that interface, but note that it should be just a regular JavaScript object, which you can create\nyourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\nnot attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\nthat your object does not have to implement all methods. If you find yourself creating a method that doesn't\ndo anything, you can simply omit it. Note however, if the <code>error</code> method is not provided and an error happens,\nit will be thrown asynchronously. Errors thrown asynchronously cannot be caught using <code>try</code>/<code>catch</code>. Instead,\nuse the <a href=\"api/index/interface/GlobalConfig#onUnhandledError\"><code>onUnhandledError</code></a> configuration option or use a runtime handler (like <code>window.onerror</code> or\n<code>process.on('error)</code>) to be notified of unhandled errors. Because of this, it's recommended that you provide\nan <code>error</code> method to avoid missing thrown errors.</p>\n\n<p translation-result=\"on\">第二種方法是完全放棄 Observer 物件，並簡單地提供回呼函式來代替它。這意味著你可以提供三個函式作為 <code>subscribe</code> 的引數，其中第一個函式等效於 <code>next</code> 方法，第二個函式等效於 <code>error</code> 方法，第三個函式等效於 <code>complete</code> 方法。就像 Observer 的情況一樣，如果你不需要監聽某些東西，就可以透過傳遞 <code>undefined</code> 或 <code>null</code> 來省略一個函式，因為 <code>subscribe</code> 會通過它們在函式呼叫中的位置來識別這些函式。當涉及到 <code>error</code> 函式時，與 Observer 一樣，如果未提供，則 Observable 發出的錯誤將被非同步丟擲。</p><p translation-origin=\"off\">The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\nThis means you can provide three functions as arguments to <code>subscribe</code>, where the first function is equivalent\nof a <code>next</code> method, the second of an <code>error</code> method and the third of a <code>complete</code> method. Just as in case of an Observer,\nif you do not need to listen for something, you can omit a function by passing <code>undefined</code> or <code>null</code>,\nsince <code>subscribe</code> recognizes these functions by where they were placed in function call. When it comes\nto the <code>error</code> function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.</p>\n\n<p translation-result=\"on\">但是，你還可以完全不使用任何引數進行訂閱。這可能是你對最終事件不感興趣，而是使用運算子（例如使用 <code><a href=\"api/index/function/tap\" class=\"code-anchor\">tap</a></code>）在內部處理產出物的情況。</p><p translation-origin=\"off\">You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\nand you also handled emissions internally by using operators (e.g. using <code><a href=\"api/index/function/tap\" class=\"code-anchor\">tap</a></code>).</p>\n\n<p translation-result=\"on\">無論你使用哪種呼叫方式 <code>subscribe</code>，在這兩種情況下它都會回傳一個 Subscription 物件。這個物件允許你呼叫它的 <code>unsubscribe</code>，這反過來會停止 Observable 所做的工作並清理 Observable 用到的所有資源。請注意，退訂不會呼叫提供給 <code>subscribe</code> 函式的 <code>complete</code> 回呼，該回調是為來自 Observable 的常規完成訊號保留的。</p><p translation-origin=\"off\">Whichever style of calling <code>subscribe</code> you use, in both cases it returns a Subscription object.\nThis object allows you to call <code>unsubscribe</code> on it, which in turn will stop the work that an Observable does and will clean\nup all resources that an Observable used. Note that cancelling a subscription will not call <code>complete</code> callback\nprovided to <code>subscribe</code> function, which is reserved for a regular completion signal that comes from an Observable.</p>\n\n<p translation-result=\"on\">請記住，提供給 <code>subscribe</code> 的回呼不能保證被非同步呼叫。決定何時呼叫這些函式的是 Observable 本身。例如 <a href=\"api/index/function/of\"><code>of</code></a> 預設同步地傳送它的所有值。始終檢查文件，瞭解給定的 Observable 在訂閱時的行為方式以及是否可以使用 <code>scheduler</code> 修改其預設行為。</p><p translation-origin=\"off\">Remember that callbacks provided to <code>subscribe</code> are not guaranteed to be called asynchronously.\nIt is an Observable itself that decides when these functions will be called. For example <a href=\"api/index/function/of\"><code>of</code></a>\nby default emits all its values synchronously. Always check documentation for how given Observable\nwill behave when subscribed and if its default behavior can be modified with a <code>scheduler</code>.</p>\n\n<h2 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#examples\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#examples\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">透過 <a href=\"guide/observer\">Observer</a> 訂閱</p><p translation-origin=\"off\">Subscribe with an <a href=\"guide/observer\">Observer</a></p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst sumObserver = {\n  sum: 0,\n  next(value) {\n    console.log('Adding: ' + value);\n    this.sum = this.sum + value;\n  },\n  error() {\n    // We actually could just remove this method,\n    // since we do not really care about errors right now.\n  },\n  complete() {\n    console.log('Sum equals: ' + this.sum);\n  }\n};\n\n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n  .subscribe(sumObserver);\n\n// Logs:\n// 'Adding: 1'\n// 'Adding: 2'\n// 'Adding: 3'\n// 'Sum equals: 6'\n</code-example>\n<p translation-result=\"on\">使用函式進行訂閱（<a href=\"deprecations/subscribe-arguments\">deprecated</a>）</p><p translation-origin=\"off\">Subscribe with functions (<a href=\"deprecations/subscribe-arguments\">deprecated</a>)</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/of\" class=\"code-anchor\">of</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs'\n\nlet sum = 0;\n\n<a href=\"api/index/function/of\" class=\"code-anchor\">of</a>(1, 2, 3).subscribe(\n  value => {\n    console.log('Adding: ' + value);\n    sum = sum + value;\n  },\n  undefined,\n  () => console.log('Sum equals: ' + sum)\n);\n\n// Logs:\n// 'Adding: 1'\n// 'Adding: 2'\n// 'Adding: 3'\n// 'Sum equals: 6'\n</code-example>\n<p translation-result=\"on\">退訂</p><p translation-origin=\"off\">Cancel a subscription</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst subscription = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000).subscribe({\n  next(num) {\n    console.log(num)\n  },\n  complete() {\n    // Will not be called, even when cancelling subscription.\n    console.log('completed!');\n  }\n});\n\nsetTimeout(() => {\n  subscription.unsubscribe();\n  console.log('unsubscribed!');\n}, 2500);\n\n// Logs:\n// 0 after 1s\n// 1 after 2s\n// 'unsubscribed!' after 2.5s\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n    <a id=\"forEach\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"foreach\">\n    forEach()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#foreach\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    \n  <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">forEach(next: (value: T) => void): Promise&#x3C;void></code-example>\n\n\n  <div class=\"short-description\">\n    <p translation-result=\"on\">用於訂閱 observable 的不可取消的方式，用於期望 Promise 的 API，如 <code>async/await</code>。你不能退訂它。</p><p translation-origin=\"off\">Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\nAPIs that expect promises, like <code>async/await</code>. You cannot unsubscribe from this.</p>\n\n<p translation-result=\"on\"><strong>警告</strong>：僅將其與你<em>知道</em>一定會完成的 Observable 一起使用。如果源 observable 無法完成，你最終會得到一個被掛起的 Promise，並可能導致所有非同步函式的狀態都掛在記憶體中。為避免這種情況，請考慮新增 <a href=\"api/index/function/timeout\"><code>timeout</code></a>、<a href=\"api/index/function/take\"><code>take</code></a>、<a href=\"api/index/function/takeWhile\"><code>takeWhile</code></a> 或 <a href=\"api/index/function/takeUntil\"><code>takeUntil</code></a> 等運算子。</p><p translation-origin=\"off\"><strong>WARNING</strong>: Only use this with observables you <em>know</em> will complete. If the source\nobservable does not complete, you will end up with a promise that is hung up, and\npotentially all of the state of an async function hanging out in memory. To avoid\nthis situation, look into adding something like <a href=\"api/index/function/timeout\"><code>timeout</code></a>, <a href=\"api/index/function/take\"><code>take</code></a>,\n<a href=\"api/index/function/takeWhile\"><code>takeWhile</code></a>, or <a href=\"api/index/function/takeUntil\"><code>takeUntil</code></a> amongst others.</p>\n\n<h2 id=\"example\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#example\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#example\"><i class=\"material-icons\">link</i></a></h2>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>, <a href=\"api/index/function/take\" class=\"code-anchor\">take</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst source$ = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000).pipe(<a href=\"api/index/function/take\" class=\"code-anchor\">take</a>(4));\n\nasync function getTotal() {\n  let total = 0;\n\n  await source$.forEach(value => {\n    total += value;\n    console.log('<a href=\"api/index/const/observable\" class=\"code-anchor\">observable</a> -> ' + value);\n  });\n\n  return total;\n}\n\ngetTotal().then(\n  total => console.log('Total: ' + total)\n);\n\n// Expected:\n// '<a href=\"api/index/const/observable\" class=\"code-anchor\">observable</a> -> 0'\n// '<a href=\"api/index/const/observable\" class=\"code-anchor\">observable</a> -> 1'\n// '<a href=\"api/index/const/observable\" class=\"code-anchor\">observable</a> -> 2'\n// '<a href=\"api/index/const/observable\" class=\"code-anchor\">observable</a> -> 3'\n// 'Total: 6'\n</code-example>\n\n</div>\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>next</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">針對 Observable 發出的每個值的處理器</p><p translation-origin=\"off\">        a handler for each value emitted by the observable</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-4\">回傳值</h4>\n  <p translation-result=\"on\">一個在 Observable 完成時解決（resolve）或拒絕（reject）這個已處理錯誤的 Promise</p><p translation-origin=\"off\"><code>Promise&#x3C;void></code>: a promise that either resolves on observable completion or\nrejects with the handled error</p>\n\n\n  \n\n\n\n\n\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\">forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise&#x3C;void></code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">在即將發布的 RxJS 版本中，將不再提供傳遞 Promise 建構式函式。這是因為它增加了函式庫的重量，但收益甚微。如果你需要此功能，建議你使用 Promise 填充函式庫（polyfill），或者建立一個配接器以將其回傳的原生 Promise 轉換為你想要的任何 Promise 實現。將在 v8 中刪除。</p><p translation-origin=\"off\">Passing a Promise constructor will no longer be available\nin upcoming versions of RxJS. This is because it adds weight to the library, for very\nlittle benefit. If you need this functionality, it is recommended that you either\npolyfill Promise, or you create an adapter to convert the returned native promise\nto whatever promise implementation you wanted. Will be removed in v8.</p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>next</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">針對 Observable 傳送的每個值的處理器</p><p translation-origin=\"off\">        a handler for each value emitted by the observable</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>promiseCtor</td>\n      \n      <td class=\"param-description\">\n      <p translation-result=\"on\">用於實例化 Promise 的建構式函式</p><p translation-origin=\"off\">        a constructor function used to instantiate the Promise</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-5\">回傳值</h4>\n  <p translation-result=\"on\">一個會在 Observable 完成時解決（resolve）或拒絕（reject）這個已處理錯誤的 Promise</p><p translation-origin=\"off\"><code>Promise&#x3C;void></code>: a promise that either resolves on observable completion or\nrejects with the handled error</p>\n\n\n  \n\n\n\n\n\n      </td>\n    </tr>\n    \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"pipe\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"pipe\">\n    pipe()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#pipe\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">用於將函式式運算子串聯起來。</p><p translation-origin=\"off\">Used to stitch together functional operators into a chain.</p>\n\n\n      </td>\n    </tr>\n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary><h4 class=\"no-anchor\" id=\"有-11-個過載形式\">有 11 個過載形式...</h4></summary>\n          <div class=\"detail-contents\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/index/function/pipe\" class=\"code-anchor\">pipe</a>(): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <p>沒有引數。</p>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-6\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable&#x3C;T></a></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/index/function/pipe\" class=\"code-anchor\">pipe</a>&#x3C;A>(op1: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, A>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;A></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><t, a=\"\"></t,></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-7\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;A></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/index/function/pipe\" class=\"code-anchor\">pipe</a>&#x3C;A, B>(op1: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, A>, op2: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;A, B>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;B></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><t, a=\"\"></t,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><a, b=\"\"></a,></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-8\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;B></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/index/function/pipe\" class=\"code-anchor\">pipe</a>&#x3C;A, B, C>(op1: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, A>, op2: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;A, B>, op3: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;B, C>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;C></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><t, a=\"\"></t,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><a, b=\"\"></a,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><b, c=\"\"></b,></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-9\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;C></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/index/function/pipe\" class=\"code-anchor\">pipe</a>&#x3C;A, B, C, D>(op1: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, A>, op2: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;A, B>, op3: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;B, C>, op4: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;C, D>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;D></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><t, a=\"\"></t,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><a, b=\"\"></a,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><b, c=\"\"></b,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><c, d=\"\"></c,></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-10\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;D></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/index/function/pipe\" class=\"code-anchor\">pipe</a>&#x3C;A, B, C, D, E>(op1: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, A>, op2: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;A, B>, op3: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;B, C>, op4: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;C, D>, op5: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;D, E>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;E></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><t, a=\"\"></t,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><a, b=\"\"></a,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><b, c=\"\"></b,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><c, d=\"\"></c,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op5</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><d, e=\"\"></d,></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-11\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;E></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/index/function/pipe\" class=\"code-anchor\">pipe</a>&#x3C;A, B, C, D, E, F>(op1: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, A>, op2: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;A, B>, op3: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;B, C>, op4: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;C, D>, op5: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;D, E>, op6: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;E, F>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;F></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><t, a=\"\"></t,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><a, b=\"\"></a,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><b, c=\"\"></b,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><c, d=\"\"></c,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op5</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><d, e=\"\"></d,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op6</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><e, f=\"\"></e,></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-12\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;F></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/index/function/pipe\" class=\"code-anchor\">pipe</a>&#x3C;A, B, C, D, E, F, G>(op1: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, A>, op2: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;A, B>, op3: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;B, C>, op4: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;C, D>, op5: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;D, E>, op6: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;E, F>, op7: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;F, G>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;G></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><t, a=\"\"></t,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><a, b=\"\"></a,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><b, c=\"\"></b,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><c, d=\"\"></c,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op5</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><d, e=\"\"></d,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op6</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><e, f=\"\"></e,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op7</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><f, g=\"\"></f,></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-13\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;G></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/index/function/pipe\" class=\"code-anchor\">pipe</a>&#x3C;A, B, C, D, E, F, G, H>(op1: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, A>, op2: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;A, B>, op3: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;B, C>, op4: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;C, D>, op5: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;D, E>, op6: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;E, F>, op7: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;F, G>, op8: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;G, H>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;H></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><t, a=\"\"></t,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><a, b=\"\"></a,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><b, c=\"\"></b,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><c, d=\"\"></c,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op5</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><d, e=\"\"></d,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op6</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><e, f=\"\"></e,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op7</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><f, g=\"\"></f,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op8</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><g, h=\"\"></g,></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-14\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;H></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/index/function/pipe\" class=\"code-anchor\">pipe</a>&#x3C;A, B, C, D, E, F, G, H, I>(op1: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, A>, op2: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;A, B>, op3: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;B, C>, op4: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;C, D>, op5: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;D, E>, op6: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;E, F>, op7: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;F, G>, op8: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;G, H>, op9: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;H, I>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;I></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><t, a=\"\"></t,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><a, b=\"\"></a,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><b, c=\"\"></b,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><c, d=\"\"></c,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op5</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><d, e=\"\"></d,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op6</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><e, f=\"\"></e,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op7</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><f, g=\"\"></f,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op8</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><g, h=\"\"></g,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op9</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><h, i=\"\"></h,></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-15\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;I></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/index/function/pipe\" class=\"code-anchor\">pipe</a>&#x3C;A, B, C, D, E, F, G, H, I>(op1: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;T, A>, op2: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;A, B>, op3: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;B, C>, op4: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;C, D>, op5: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;D, E>, op6: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;E, F>, op7: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;F, G>, op8: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;G, H>, op9: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;H, I>, ...operations: <a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a>&#x3C;any, any>[]): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><t, a=\"\"></t,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><a, b=\"\"></a,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><b, c=\"\"></b,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><c, d=\"\"></c,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op5</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><d, e=\"\"></d,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op6</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><e, f=\"\"></e,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op7</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><f, g=\"\"></f,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op8</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><g, h=\"\"></g,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op9</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><h, i=\"\"></h,></code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>operations</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code><a href=\"api/index/interface/OperatorFunction\" class=\"code-anchor\">OperatorFunction</a><any, any=\"\">[]</any,></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-16\">回傳值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code></p>\n\n  \n\n\n\n\n\n                \n              \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"toPromise\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"topromise\">\n    toPromise()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#topromise\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">訂閱這個 Observable 並獲得一個在 <code>complete</code> 時以最後一個值（如果有的話）進行解析的 Promise。</p><p translation-origin=\"off\">Subscribe to this Observable and get a Promise resolving on\n<code>complete</code> with the last emission (if any).</p>\n\n<p translation-result=\"on\"><strong>警告</strong>：僅將其與你<em>知道</em>一定會完成的 Observable 一起使用。如果源 observable 沒有完成，你最終會得到一個已掛起的 Promise，並且可能導致所有非同步函式的狀態都掛在記憶體中。為避免這種情況，請考慮新增 <a href=\"api/index/function/timeout\"><code>timeout</code></a>、<a href=\"api/index/function/take\"><code>take</code></a>、<a href=\"api/index/function/takeWhile\"><code>takeWhile</code></a> 或 <a href=\"api/index/function/takeUntil\"><code>takeUntil</code></a> 等運算子。</p><p translation-origin=\"off\"><strong>WARNING</strong>: Only use this with observables you <em>know</em> will complete. If the source\nobservable does not complete, you will end up with a promise that is hung up, and\npotentially all of the state of an async function hanging out in memory. To avoid\nthis situation, look into adding something like <a href=\"api/index/function/timeout\"><code>timeout</code></a>, <a href=\"api/index/function/take\"><code>take</code></a>,\n<a href=\"api/index/function/takeWhile\"><code>takeWhile</code></a>, or <a href=\"api/index/function/takeUntil\"><code>takeUntil</code></a> amongst others.</p>\n\n\n      </td>\n    </tr>\n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary><h4 class=\"no-anchor\" id=\"有-3-個過載形式-1\">有 3 個過載形式...</h4></summary>\n          <div class=\"detail-contents\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\">toPromise(): Promise&#x3C;T | undefined></code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">已替換為 <a href=\"api/index/function/firstValueFrom\"><code>firstValueFrom</code></a> 和 <a href=\"api/index/function/lastValueFrom\"><code>lastValueFrom</code></a>。將在 v8 中刪除。詳細訊息： <a href=\"https://rxjs.dev/deprecations/to-promise\">https://rxjs.dev/deprecations/to-promise</a></p><p translation-origin=\"off\">Replaced with <a href=\"api/index/function/firstValueFrom\"><code>firstValueFrom</code></a> and <a href=\"api/index/function/lastValueFrom\"><code>lastValueFrom</code></a>. Will be removed in v8. Details: <a href=\"https://rxjs.dev/deprecations/to-promise\">https://rxjs.dev/deprecations/to-promise</a></p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <p>沒有引數。</p>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-17\">回傳值</h4>\n  <p><code>Promise&#x3C;T | undefined></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\">toPromise(PromiseCtor: any): Promise&#x3C;T | undefined></code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">已替換為 <a href=\"api/index/function/firstValueFrom\"><code>firstValueFrom</code></a> 和 <a href=\"api/index/function/lastValueFrom\"><code>lastValueFrom</code></a>。將在 v8 中刪除。詳細訊息： <a href=\"https://rxjs.dev/deprecations/to-promise\">https://rxjs.dev/deprecations/to-promise</a></p><p translation-origin=\"off\">Replaced with <a href=\"api/index/function/firstValueFrom\"><code>firstValueFrom</code></a> and <a href=\"api/index/function/lastValueFrom\"><code>lastValueFrom</code></a>. Will be removed in v8. Details: <a href=\"https://rxjs.dev/deprecations/to-promise\">https://rxjs.dev/deprecations/to-promise</a></p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>PromiseCtor</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>any</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-18\">回傳值</h4>\n  <p><code>Promise&#x3C;T | undefined></code></p>\n\n  \n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n            <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\">toPromise(PromiseCtor: PromiseConstructorLike): Promise&#x3C;T | undefined></code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">棄用說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Observable#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">已替換為 <a href=\"api/index/function/firstValueFrom\"><code>firstValueFrom</code></a> 和 <a href=\"api/index/function/lastValueFrom\"><code>lastValueFrom</code></a>。將在 v8 中刪除。詳細訊息： <a href=\"https://rxjs.dev/deprecations/to-promise\">https://rxjs.dev/deprecations/to-promise</a></p><p translation-origin=\"off\">Replaced with <a href=\"api/index/function/firstValueFrom\"><code>firstValueFrom</code></a> and <a href=\"api/index/function/lastValueFrom\"><code>lastValueFrom</code></a>. Will be removed in v8. Details: <a href=\"https://rxjs.dev/deprecations/to-promise\">https://rxjs.dev/deprecations/to-promise</a></p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>PromiseCtor</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>PromiseConstructorLike</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值-19\">回傳值</h4>\n  <p><code>Promise&#x3C;T | undefined></code></p>\n\n  \n\n\n\n\n\n                \n              \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n</section>\n\n\n\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - 6-to-7-change-summary\n - api/fetch/fromFetch\n - api/index\n - api/index/class/AsyncSubject\n - api/index/class/BehaviorSubject\n - api/index/class/ConnectableObservable\n - api/index/class/Notification\n - api/index/class/ReplaySubject\n - api/index/class/Subject\n - api/index/class/Subscriber\n - api/index/const/EMPTY\n - api/index/const/NEVER\n - api/index/function/buffer\n - api/index/function/catchError\n - api/index/function/combineLatest\n - api/index/function/connect\n - api/index/function/defer\n - api/index/function/delayWhen\n - api/index/function/distinct\n - api/index/function/empty\n - api/index/function/every\n - api/index/function/find\n - api/index/function/findIndex\n - api/index/function/first\n - api/index/function/firstValueFrom\n - api/index/function/forkJoin\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/fromEventPattern\n - api/index/function/generate\n - api/index/function/groupBy\n - api/index/function/iif\n - api/index/function/interval\n - api/index/function/isObservable\n - api/index/function/last\n - api/index/function/lastValueFrom\n - api/index/function/merge\n - api/index/function/multicast\n - api/index/function/of\n - api/index/function/pairs\n - api/index/function/partition\n - api/index/function/publishBehavior\n - api/index/function/publishLast\n - api/index/function/publishReplay\n - api/index/function/range\n - api/index/function/repeatWhen\n - api/index/function/retryWhen\n - api/index/function/sample\n - api/index/function/scheduled\n - api/index/function/sequenceEqual\n - api/index/function/shareReplay\n - api/index/function/single\n - api/index/function/skipUntil\n - api/index/function/switchAll\n - api/index/function/tap\n - api/index/function/throwError\n - api/index/function/timer\n - api/index/function/using\n - api/index/function/window\n - api/index/function/windowCount\n - api/index/function/windowTime\n - api/index/function/windowToggle\n - api/index/function/windowWhen\n - api/index/function/zip\n - api/index/interface/Connectable\n - api/index/interface/GlobalConfig\n - api/index/interface/GroupedObservable\n - api/index/interface/ShareConfig\n - api/index/interface/Subscribable\n - api/index/type-alias/ObservableInput\n - api/index/type-alias/ObservableInputTuple\n - api/index/type-alias/ObservedValueOf\n - api/index/type-alias/ObservedValueTupleFromArray\n - api/index/type-alias/ObservedValueUnionFromArray\n - api/operators/ShareConfig\n - api/operators/buffer\n - api/operators/catchError\n - api/operators/combineLatest\n - api/operators/connect\n - api/operators/delayWhen\n - api/operators/distinct\n - api/operators/every\n - api/operators/find\n - api/operators/findIndex\n - api/operators/first\n - api/operators/groupBy\n - api/operators/last\n - api/operators/multicast\n - api/operators/partition\n - api/operators/publishBehavior\n - api/operators/publishLast\n - api/operators/publishReplay\n - api/operators/repeatWhen\n - api/operators/retryWhen\n - api/operators/sample\n - api/operators/sequenceEqual\n - api/operators/shareReplay\n - api/operators/single\n - api/operators/skipUntil\n - api/operators/switchAll\n - api/operators/tap\n - api/operators/window\n - api/operators/windowCount\n - api/operators/windowTime\n - api/operators/windowToggle\n - api/operators/windowWhen\n - api/operators/zip\n - api/testing/TestScheduler\n - api/webSocket/WebSocketSubject\n - deprecations/breaking-changes\n - guide/core-semantics\n - guide/observable\n - guide/observer\n - guide/operators\n - guide/scheduler\n - guide/subject\n - guide/subscription\n - guide/testing/marble-testing\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/AsyncSubject\n - api/index/class/BehaviorSubject\n - api/index/class/ConnectableObservable\n - api/index/class/Observable#constructor()\n - api/index/class/Observable#create\n - api/index/class/Observable#deprecation-notes\n - api/index/class/Observable#example\n - api/index/class/Observable#examples\n - api/index/class/Observable#forEach\n - api/index/class/Observable#foreach\n - api/index/class/Observable#lift\n - api/index/class/Observable#observable\n - api/index/class/Observable#operator\n - api/index/class/Observable#pipe\n - api/index/class/Observable#source\n - api/index/class/Observable#subscribe\n - api/index/class/Observable#toPromise\n - api/index/class/Observable#topromise\n - api/index/class/Observable#子類別\n - api/index/class/Observable#屬性\n - api/index/class/Observable#方法\n - api/index/class/Observable#建構式函式\n - api/index/class/Observable#靜態屬性\n - api/index/class/ReplaySubject\n - api/index/class/Subject\n - api/index/class/Subscriber\n - api/index/class/Subscription\n - api/index/const/observable\n - api/index/function/firstValueFrom\n - api/index/function/from\n - api/index/function/interval\n - api/index/function/lastValueFrom\n - api/index/function/of\n - api/index/function/pipe\n - api/index/function/take\n - api/index/function/takeUntil\n - api/index/function/takeWhile\n - api/index/function/tap\n - api/index/function/timeout\n - api/index/interface/GlobalConfig#onUnhandledError\n - api/index/interface/Observer\n - api/index/interface/Operator\n - api/index/interface/OperatorFunction\n - api/index/interface/Subscribable\n - api/index/type-alias/TeardownLogic\n - deprecations/subscribe-arguments\n - guide/observer\n - https://github.com/reactivex/rxjs/edit/master/src/internal/Observable.ts?message=docs(index)%3A%20describe%20your%20change...#L10-L618\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/Observable.ts#L10-L618\n - https://rxjs.dev/deprecations/subscribe-arguments\n - https://rxjs.dev/deprecations/to-promise\n - https://rxjs.dev/guide/operators\n-->"
}