{
  "id": "api/index/class/ReplaySubject",
  "title": "ReplaySubject",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/ReplaySubject.ts?message=docs(index)%3A%20describe%20your%20change...#L6-L143\" aria-label=\"編輯建議\" title=\"編輯建議\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/ReplaySubject.ts#L6-L143\" aria-label=\"檢視原始碼\" title=\"檢視原始碼\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/class/ReplaySubject\", \"name\": \"ReplaySubject\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"replaysubject\">ReplaySubject<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/ReplaySubject#replaysubject\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    <label class=\"api-status-label stable\">穩定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\"> 的一種變體，它透過在新訂閱者首次訂閱時傳送舊值來『重播』舊值。</p><p translation-origin=\"off\">A variant of <a href=\"api/index/class/Subject\"><code>Subject</code></a> that \"replays\" old values to new subscribers by emitting them when they first subscribe.</p>\n<a href=\"api/index/class/Subject\"><code>Subject</code></a>\n\n<p></p>\n  \n\n  \n\n  \n  <section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a>&#x3C;T> extends <a class=\"code-anchor\" href=\"api/index/class/Subject\">Subject<t></t></a> {\n  <a class=\"code-anchor\" href=\"api/index/class/ReplaySubject#constructor()\">constructor(_bufferSize: number = Infinity, _windowTime: number = Infinity, _timestampProvider: TimestampProvider = dateTimestampProvider)</a>\n  <a class=\"code-anchor\" href=\"api/index/class/ReplaySubject#next\">next(value: T): void</a>\n\n  // 繼承自 <a class=\"code-anchor\" href=\"api/index/class/Subject\">index/Subject</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Subject#create\">static create: (...args: any[]) => any</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#constructor()\">constructor()</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#closed\">closed: false</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Subject#observers\">observers: Observer&#x3C;T>[]</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Subject#isStopped\">isStopped: false</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Subject#hasError\">hasError: false</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Subject#thrownError\">thrownError: any</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#observed\">get observed</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Subject#lift\">lift&#x3C;R>(operator: Operator&#x3C;T, R>): Observable&#x3C;R></a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#next\">next(value: T)</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#error\">error(err: any)</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#complete\">complete()</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#unsubscribe\">unsubscribe()</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#asObservable\">asObservable(): Observable&#x3C;T></a>\n\n  // 繼承自 <a class=\"code-anchor\" href=\"api/index/class/Observable\">index/Observable</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#create\">static create: (...args: any[]) => any</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#constructor()\">constructor(subscribe?: (this: Observable&#x3C;T>, subscriber: Subscriber&#x3C;T>) => TeardownLogic)</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#source\">source: Observable&#x3C;any> | undefined</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#operator\">operator: Operator&#x3C;any, T> | undefined</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#lift\">lift&#x3C;R>(operator?: Operator&#x3C;T, R>): Observable&#x3C;R></a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#subscribe\">subscribe(observerOrNext?: Partial&#x3C;Observer&#x3C;T>> | ((value: T) => void), error?: (error: any) => void, complete?: () => void): Subscription</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#forEach\">forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise&#x3C;void></a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#pipe\">pipe(...operations: OperatorFunction&#x3C;any, any>[]): Observable&#x3C;any></a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#toPromise\">toPromise(promiseCtor?: PromiseConstructorLike): Promise&#x3C;T | undefined></a>\n}\n</code-example>\n\n  \n  \n\n</section>\n\n\n  \n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">說明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/ReplaySubject#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\"><code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code> 有一個內部緩衝區，它將儲存它觀察到的指定數量的值。與 <code><a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a></code> 一樣，<code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code> 透過將值傳給 <code>next</code> 方法來『觀察』值。當它觀察到一個值時，它將將該值儲存一段時間，該時間由 <code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code> 的設定確定，並傳給其建構式函式。</p><p translation-origin=\"off\"><code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code> has an internal buffer that will store a specified number of values that it has observed. Like <code><a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a></code>,\n<code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code> \"observes\" values by having them passed to its <code>next</code> method. When it observes a value, it will store that\nvalue for a time determined by the configuration of the <code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code>, as passed to its constructor.</p>\n\n<p translation-result=\"on\">當新訂閱者訂閱 <code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code> 實例時，它將以先進先出 (FIFO) 的方式同步傳送其緩衝區中的所有值。如果 <code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code> 觀察到完成，它也將完成；如果它觀察到錯誤，它將出錯。</p><p translation-origin=\"off\">When a new subscriber subscribes to the <code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code> instance, it will synchronously emit all values in its buffer in\na First-In-First-Out (FIFO) manner. The <code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code> will also complete, if it has observed completion; and it will\nerror if it has observed an error.</p>\n\n<p translation-result=\"on\">有兩個主要的設定項需要關注：</p><p translation-origin=\"off\">There are two main configuration items to be concerned with:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\"><code>bufferSize</code> - 這將確定緩衝區中儲存了多少項目，預設為無限。</p><p translation-origin=\"off\"><code>bufferSize</code> - This will determine how many items are stored in the buffer, defaults to infinite.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/windowTime\" class=\"code-anchor\">windowTime</a></code> - 從緩衝區中刪除值之前在緩衝區中保存值的時間量。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/windowTime\" class=\"code-anchor\">windowTime</a></code> - The amount of time to hold a value in the buffer before removing it from the buffer.</p>\n\n</li>\n</ol>\n<p translation-result=\"on\">兩種設定可以同時存在。因此，如果你想緩衝最多 3 個值，只要這些值小於 2 秒，你就可以使用 <code>new <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a>(3, 2000)</code> 來實現。</p><p translation-origin=\"off\">Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\nare less than 2 seconds old, you could do so with a <code>new <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a>(3, 2000)</code>.</p>\n\n<h3 id=\"differences-with-behaviorsubject\" translation-result=\"on\">與 BehaviorSubject 的差異<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/ReplaySubject#differences-with-behaviorsubject\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"differences-with-behaviorsubject\">Differences with BehaviorSubject<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/ReplaySubject#differences-with-behaviorsubject\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\"><code><a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a></code> 類似於 <code>new <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a>(1)</code>，但有幾個例外：</p><p translation-origin=\"off\"><code><a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a></code> is similar to <code>new <a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a>(1)</code>, with a couple fo exceptions:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a></code> 在構造時帶有一個單一的值。</p><p translation-origin=\"off\"><code><a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a></code> comes \"primed\" with a single value upon construction.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code> 將重播值，即使在觀察到錯誤之後，<code><a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a></code> 也不會。</p><p translation-origin=\"off\"><code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code> will replay values, even after observing an error, where <code><a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a></code> will not.</p>\n\n</li>\n</ol>\n\n</section>\n\n\n\n\n\n\n\n<h2 id=\"建構式函式\">建構式函式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/ReplaySubject#建構式函式\"><i class=\"material-icons\">link</i></a></h2>\n<a id=\"constructor()\"></a>\n<table class=\"is-full-width method-table constructor\">\n  \n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor(_bufferSize: number = Infinity, _windowTime: number = Infinity, _timestampProvider: <a href=\"api/index/interface/TimestampProvider\" class=\"code-anchor\">TimestampProvider</a> = dateTimestampProvider)</code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table constructor-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>_bufferSize</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>Infinity</code>。</p>\n        <p>型別：<code>number</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>_windowTime</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>Infinity</code>。</p>\n        <p>型別：<code>number</code>。</p>\n        \n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>_timestampProvider</td>\n      \n      <td class=\"param-description\">\n              <p>可選。預設值為 <code>dateTimestampProvider</code>。</p>\n        <p>型別：<code><a href=\"api/index/interface/TimestampProvider\" class=\"code-anchor\">TimestampProvider</a></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n\n\n\n\n\n\n<section class=\"instance-methods\">\n  <h2 id=\"方法\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/ReplaySubject#方法\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"next\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"next\">\n    next()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/ReplaySubject#next\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">next(value: T): void</code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">引數</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>value</td>\n      \n      <td class=\"param-description\">\n              <p>型別：<code>T</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"回傳值\">回傳值</h4>\n  <p><code>void</code></p>\n\n  \n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n</section>\n\n\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">參見<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/ReplaySubject#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><a href=\"api/index/class/Subject\"><code>Subject</code></a>\n</li>\n    <li><a href=\"api/index/class/BehaviorSubject\"><code>BehaviorSubject</code></a>\n</li>\n    <li><a href=\"api/index/function/shareReplay\"><code>shareReplay</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - 6-to-7-change-summary\n - api/index\n - api/index/class/Observable\n - api/index/class/Subject\n - api/index/function/publishReplay\n - api/index/function/shareReplay\n - api/index/interface/ShareConfig\n - api/index/interface/Subscribable\n - api/index/interface/SubscriptionLike\n - api/index/interface/TimestampProvider\n - api/operators/ShareConfig\n - api/operators/publishReplay\n - api/operators/shareReplay\n - deprecations/breaking-changes\n - deprecations/multicasting\n - guide/subject\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/BehaviorSubject\n - api/index/class/Observable\n - api/index/class/Observable#constructor()\n - api/index/class/Observable#create\n - api/index/class/Observable#forEach\n - api/index/class/Observable#lift\n - api/index/class/Observable#operator\n - api/index/class/Observable#pipe\n - api/index/class/Observable#source\n - api/index/class/Observable#subscribe\n - api/index/class/Observable#toPromise\n - api/index/class/ReplaySubject#constructor()\n - api/index/class/ReplaySubject#description\n - api/index/class/ReplaySubject#differences-with-behaviorsubject\n - api/index/class/ReplaySubject#next\n - api/index/class/ReplaySubject#replaysubject\n - api/index/class/ReplaySubject#see-also\n - api/index/class/ReplaySubject#方法\n - api/index/class/ReplaySubject#建構式函式\n - api/index/class/Subject\n - api/index/class/Subject#asObservable\n - api/index/class/Subject#closed\n - api/index/class/Subject#complete\n - api/index/class/Subject#constructor()\n - api/index/class/Subject#create\n - api/index/class/Subject#error\n - api/index/class/Subject#hasError\n - api/index/class/Subject#isStopped\n - api/index/class/Subject#lift\n - api/index/class/Subject#next\n - api/index/class/Subject#observed\n - api/index/class/Subject#observers\n - api/index/class/Subject#thrownError\n - api/index/class/Subject#unsubscribe\n - api/index/function/shareReplay\n - api/index/function/windowTime\n - api/index/interface/TimestampProvider\n - https://github.com/reactivex/rxjs/edit/master/src/internal/ReplaySubject.ts?message=docs(index)%3A%20describe%20your%20change...#L6-L143\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/ReplaySubject.ts#L6-L143\n-->"
}