{
  "id": "api/index/class/Subject",
  "title": "Subject",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/Subject.ts?message=docs(index)%3A%20describe%20your%20change...#L9-L188\" aria-label=\"编辑建议\" title=\"编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/Subject.ts#L9-L188\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/class/Subject\", \"name\": \"Subject\" } }\n          ]\n        }\n      </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n    </div>\n  <header class=\"api-header\">\n    <h1 id=\"subject\">Subject<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Subject#subject\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    <label class=\"api-status-label stable\">稳定</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  \n\n  <p class=\"short-description\"></p><p translation-result=\"on\">Subject（主体）是一种特殊类型的 Observable，它允许将一些值多播到多个 Observer。主体很像 EventEmitters。</p><p translation-origin=\"off\">A Subject is a special type of Observable that allows values to be\nmulticasted to many Observers. Subjects are like EventEmitters.</p>\n\n<p translation-result=\"on\">每个 Subject 都同时是 Observable 和 Observer。你可以订阅一个主体，也你可以调用 next 来取得值，还能调用 error 和 complete。</p><p translation-origin=\"off\">Every Subject is an Observable and an Observer. You can subscribe to a\nSubject, and you can call next to feed values as well as error and complete.</p>\n\n<p></p>\n  \n\n  \n\n  \n  <section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a>&#x3C;T> extends <a class=\"code-anchor\" href=\"api/index/class/Observable\">Observable<t></t></a> implements <a class=\"code-anchor\" href=\"api/index/interface/SubscriptionLike\">SubscriptionLike</a> {\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Subject#create\">static create: (...args: any[]) => any</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#constructor()\">constructor()</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#closed\">closed: false</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Subject#observers\">observers: Observer&#x3C;T>[]</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Subject#isStopped\">isStopped: false</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Subject#hasError\">hasError: false</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Subject#thrownError\">thrownError: any</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#observed\">get observed</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Subject#lift\">lift&#x3C;R>(operator: Operator&#x3C;T, R>): Observable&#x3C;R></a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#next\">next(value: T)</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#error\">error(err: any)</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#complete\">complete()</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#unsubscribe\">unsubscribe()</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Subject#asObservable\">asObservable(): Observable&#x3C;T></a>\n\n  // 继承自 <a class=\"code-anchor\" href=\"api/index/class/Observable\">index/Observable</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#create\">static create: (...args: any[]) => any</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#constructor()\">constructor(subscribe?: (this: Observable&#x3C;T>, subscriber: Subscriber&#x3C;T>) => TeardownLogic)</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#source\">source: Observable&#x3C;any> | undefined</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#operator\">operator: Operator&#x3C;any, T> | undefined</a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#lift\">lift&#x3C;R>(operator?: Operator&#x3C;T, R>): Observable&#x3C;R></a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#subscribe\">subscribe(observerOrNext?: Partial&#x3C;Observer&#x3C;T>> | ((value: T) => void), error?: (error: any) => void, complete?: () => void): Subscription</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#forEach\">forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise&#x3C;void></a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#pipe\">pipe(...operations: OperatorFunction&#x3C;any, any>[]): Observable&#x3C;any></a>\n  <a class=\"code-anchor deprecated-api-item\" href=\"api/index/class/Observable#toPromise\">toPromise(promiseCtor?: PromiseConstructorLike): Promise&#x3C;T | undefined></a>\n}\n</code-example>\n\n  \n  \n  <div class=\"descendants class\">\n    <h2 id=\"子类\">子类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Subject#子类\"><i class=\"material-icons\">link</i></a></h2>\n    \n\n<ul>\n  \n  <li>\n    <code><a href=\"api/index/class/BehaviorSubject\" class=\"code-anchor\">BehaviorSubject</a></code>\n      \n\n\n  </li>\n  \n  <li>\n    <code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code>\n      \n\n\n  </li>\n  \n  <li>\n    <code><a href=\"api/index/class/AsyncSubject\" class=\"code-anchor\">AsyncSubject</a></code>\n      \n\n\n  </li>\n  \n</ul>\n\n\n  </div>\n  \n\n</section>\n\n\n  \n  \n  \n\n\n<section class=\"static-properties\">\n  <h2 id=\"静态属性\">静态属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Subject#静态属性\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table properties-table\">\n    <thead>\n      <tr><th>属性</th><th>类型</th><th>说明</th></tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"static-property\">\n        <td><a id=\"create\"></a><code class=\"deprecated-api-item\">create</code></td>\n        <td><label class=\"property-type-label\"><code>(...args: any[]) => any</code></label></td>\n        <td>\n          <p translation-result=\"on\">本质上是通过将 Observer 粘结到 Observable 来创建“主体”。</p><p translation-origin=\"off\">Creates a \"subject\" by basically gluing an observer to an observable.</p>\n\n\n          \n          \n        </td>\n      </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n\n\n<h2 id=\"构造函数\">构造函数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Subject#构造函数\"><i class=\"material-icons\">link</i></a></h2>\n<a id=\"constructor()\"></a>\n<table class=\"is-full-width method-table constructor\">\n  \n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor()</code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <p>没有参数。</p>\n\n  \n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n\n\n<section class=\"instance-properties\">\n  <h2 id=\"属性\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Subject#属性\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table properties-table\">\n    <thead>\n      <tr><th>属性</th><th>类型</th><th>说明</th></tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"closed\"></a><code class=\"\">closed</code></td>\n        <td><label class=\"property-type-label\"><code>false</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n      </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"observers\"></a><code class=\"deprecated-api-item\">observers</code></td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/index/interface/Observer\" class=\"code-anchor\">Observer</a>&#x3C;T>[]</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n      </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"isStopped\"></a><code class=\"deprecated-api-item\">isStopped</code></td>\n        <td><label class=\"property-type-label\"><code>false</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n      </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"hasError\"></a><code class=\"deprecated-api-item\">hasError</code></td>\n        <td><label class=\"property-type-label\"><code>false</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n      </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"thrownError\"></a><code class=\"deprecated-api-item\">thrownError</code></td>\n        <td><label class=\"property-type-label\"><code>any</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n      </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"observed\"></a><code class=\"\">observed</code></td>\n        <td><label class=\"property-type-label\"><code></code></label></td>\n        <td><span class=\"read-only-property\">只读。</span>\n          \n          \n          \n        </td>\n      </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n\n\n<section class=\"instance-methods\">\n  <h2 id=\"方法\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Subject#方法\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"lift\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"lift\">\n    lift()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Subject#lift\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\">lift&#x3C;R>(operator: <a href=\"api/index/interface/Operator\" class=\"code-anchor\">Operator</a>&#x3C;T, R>): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code-example>\n\n\n\n  <div class=\"deprecated\">\n  <h4 id=\"deprecation-notes\">弃用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Subject#deprecation-notes\"><i class=\"material-icons\">link</i></a></h4>\n  <p translation-result=\"on\">内部实现细节，请勿直接使用。将在 v8 中内部化。</p><p translation-origin=\"off\">Internal implementation detail, do not use directly. Will be made internal in v8.</p>\n\n\n  </div>\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>operator</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code><a href=\"api/index/interface/Operator\" class=\"code-anchor\">Operator</a><t, r=\"\"></t,></code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值\">返回值</h4>\n  <p><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;R></code></p>\n\n  \n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"next\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"next\">\n    next()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Subject#next\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">next(value: T)</code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>value</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>T</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"error\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"error\">\n    error()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Subject#error\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">error(err: any)</code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>err</td>\n      \n      <td class=\"param-description\">\n              <p>类型：<code>any</code>。</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"complete\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"complete\">\n    complete()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Subject#complete\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">complete()</code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <p>没有参数。</p>\n\n  \n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"unsubscribe\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"unsubscribe\">\n    unsubscribe()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Subject#unsubscribe\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">unsubscribe()</code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <p>没有参数。</p>\n\n  \n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"asObservable\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"asobservable\">\n    asObservable()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/index/class/Subject#asobservable\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">创建一个以此 Subject 为源的新 Observable。你可以像这样创建 Subject 的自定义 Observer 端逻辑，并将其在使用 Observable 的代码中隐身。</p><p translation-origin=\"off\">Creates a new Observable with this Subject as the source. You can do this\nto create customize Observer-side logic of the Subject and conceal it from\ncode that uses the Observable.</p>\n\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">asObservable(): <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;T></code-example>\n\n\n\n\n  <h4 class=\"no-anchor\" id=\"parameters\">参数</h4>\n  <p>没有参数。</p>\n\n  \n  <h4 class=\"no-anchor\" id=\"返回值-1\">返回值</h4>\n  <p translation-result=\"on\">由主体转换成的 Observable</p><p translation-origin=\"off\"><code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable&#x3C;T></a></code>: Observable that the Subject casts to</p>\n\n\n  \n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n</section>\n\n\n\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - 6-to-7-change-summary\n - api/index\n - api/index/class/AsyncSubject\n - api/index/class/BehaviorSubject\n - api/index/class/ConnectableObservable\n - api/index/class/Observable\n - api/index/class/ReplaySubject\n - api/index/function/groupBy\n - api/index/function/isEmpty\n - api/index/function/multicast\n - api/index/function/publishReplay\n - api/index/function/refCount\n - api/index/function/share\n - api/index/interface/ConnectConfig\n - api/index/interface/Connectable\n - api/index/interface/ObjectUnsubscribedError\n - api/index/interface/Subscribable\n - api/index/interface/SubscriptionLike\n - api/operators/ConnectConfig\n - api/operators/groupBy\n - api/operators/isEmpty\n - api/operators/multicast\n - api/operators/publishReplay\n - api/operators/refCount\n - api/operators/share\n - api/webSocket/webSocket\n - deprecations/multicasting\n - guide/subject\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/AsyncSubject\n - api/index/class/BehaviorSubject\n - api/index/class/Observable\n - api/index/class/Observable#constructor()\n - api/index/class/Observable#create\n - api/index/class/Observable#forEach\n - api/index/class/Observable#lift\n - api/index/class/Observable#operator\n - api/index/class/Observable#pipe\n - api/index/class/Observable#source\n - api/index/class/Observable#subscribe\n - api/index/class/Observable#toPromise\n - api/index/class/ReplaySubject\n - api/index/class/Subject#asObservable\n - api/index/class/Subject#asobservable\n - api/index/class/Subject#closed\n - api/index/class/Subject#complete\n - api/index/class/Subject#constructor()\n - api/index/class/Subject#create\n - api/index/class/Subject#deprecation-notes\n - api/index/class/Subject#error\n - api/index/class/Subject#hasError\n - api/index/class/Subject#isStopped\n - api/index/class/Subject#lift\n - api/index/class/Subject#next\n - api/index/class/Subject#observed\n - api/index/class/Subject#observers\n - api/index/class/Subject#subject\n - api/index/class/Subject#thrownError\n - api/index/class/Subject#unsubscribe\n - api/index/class/Subject#子类\n - api/index/class/Subject#属性\n - api/index/class/Subject#方法\n - api/index/class/Subject#构造函数\n - api/index/class/Subject#静态属性\n - api/index/interface/Observer\n - api/index/interface/Operator\n - api/index/interface/SubscriptionLike\n - https://github.com/reactivex/rxjs/edit/master/src/internal/Subject.ts?message=docs(index)%3A%20describe%20your%20change...#L9-L188\n - https://github.com/reactivex/rxjs/tree/7.5.2/src/internal/Subject.ts#L9-L188\n-->"
}