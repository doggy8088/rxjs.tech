{
  "id": "guide/subscription",
  "title": "",
  "contents": "\n<div class=\"content\">\n<h1 id=\"subscription\" translation-result=\"on\">訂閱<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/subscription#subscription\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"subscription\">Subscription<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/subscription#subscription\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\"><strong>什麼是訂閱？</strong> 訂閱是一個表示可釋放資源的物件，通常是 Observable 的一次執行。訂閱有一個重要的方法 <code>unsubscribe</code>，它不接受任何引數，只是釋放本訂閱所持有的資源。在以前的 RxJS 版本中，Subscription 被稱為 『Disposable』。</p><p translation-origin=\"off\"><strong>What is a Subscription?</strong> A Subscription is an object that represents a disposable resource, usually the execution of an Observable. A Subscription has one important method, <code>unsubscribe</code>, that takes no argument and just disposes the resource held by the subscription. In previous versions of RxJS, Subscription was called \"Disposable\".</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst <a href=\"api/index/const/observable\" class=\"code-anchor\">observable</a> = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(1000);\nconst subscription = observable.subscribe(x => console.log(x));\n// Later:\n// This cancels the ongoing <a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a> execution which\n// was started by calling subscribe with an Observer.\nsubscription.unsubscribe(); \n</code-example>\n<p translation-result=\"on\"><span class=\"informal\">Subscription 本質上只有一個 <code>unsubscribe()</code> 函式來釋放資源或取消 Observable 的執行過程。</span></p><p translation-origin=\"off\"><span class=\"informal\">A Subscription essentially just has an <code>unsubscribe()</code> function to release resources or cancel Observable executions.</span></p>\n\n<p translation-result=\"on\">多個訂閱也可以放在一起，以便呼叫一個訂閱的 <code>unsubscribe()</code> 就可以退訂多個訂閱。你可以透過將一個訂閱『新增』到另一個訂閱中來做到這一點：</p><p translation-origin=\"off\">Subscriptions can also be put together, so that a call to an <code>unsubscribe()</code> of one Subscription may unsubscribe multiple Subscriptions. You can do this by \"adding\" one subscription into another:</p>\n\n<code-example language=\"ts\">\nimport { <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a> } <a href=\"api/index/function/from\" class=\"code-anchor\">from</a> 'rxjs';\n\nconst observable1 = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(400);\nconst observable2 = <a href=\"api/index/function/interval\" class=\"code-anchor\">interval</a>(300);\n\nconst subscription = observable1.subscribe(x => console.log('<a href=\"api/index/function/first\" class=\"code-anchor\">first</a>: ' + x));\nconst childSubscription = observable2.subscribe(x => console.log('second: ' + x));\n\nsubscription.add(childSubscription);\n\nsetTimeout(() => {\n  // Unsubscribes BOTH subscription and childSubscription\n  subscription.unsubscribe();\n}, 1000);\n</code-example>\n<p translation-result=\"on\">執行時，我們在控制台中看到：</p><p translation-origin=\"off\">When executed, we see in the console:</p>\n\n<code-example language=\"none\">\nsecond: 0\n<a href=\"api/index/function/first\" class=\"code-anchor\">first</a>: 0\nsecond: 1\n<a href=\"api/index/function/first\" class=\"code-anchor\">first</a>: 1\nsecond: 2\n</code-example>\n<p translation-result=\"on\">訂閱也有一個 <code>remove(otherSubscription)</code> 方法，以撤消新增進來的子訂閱。</p><p translation-origin=\"off\">Subscriptions also have a <code>remove(otherSubscription)</code> method, in order to undo the addition of a child Subscription.</p>\n\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/index/class/Observable\n - api/index/const/observable\n - api/index/function/first\n - api/index/function/from\n - api/index/function/interval\n - guide/subscription#subscription\n-->"
}