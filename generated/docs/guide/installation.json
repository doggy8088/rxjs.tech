{
  "id": "guide/installation",
  "title": "",
  "contents": "\n<div class=\"content\">\n<h1 id=\"installation-instructions\" translation-result=\"on\">安裝指南<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#installation-instructions\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"installation-instructions\">Installation Instructions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#installation-instructions\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">以下是安裝 RxJS 的不同方法：</p><p translation-origin=\"off\">Here are different ways you can install RxJS:</p>\n\n<h2 id=\"es2015-via-npm\" translation-result=\"on\">透過 npm 安裝 ES2015<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#es2015-via-npm\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"es2015-via-npm\">ES2015 via npm<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#es2015-via-npm\"><i class=\"material-icons\">link</i></a></h2>\n\n<code-example language=\"shell\">\nnpm install rxjs\n</code-example>\n<p translation-result=\"on\">預設情況下，RxJS 7.x 會根據消費者提供不同的程式碼變體：</p><p translation-origin=\"off\">By default, RxJS 7.x will provide different variants of the code based on the consumer:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">在 Node.js 上使用 RxJS 7.x 時，無論是透過 <code>require</code> 還是 <code>import</code> 使用，都會提供針對 ES5 的 CommonJS 程式碼以供執行。</p><p translation-origin=\"off\">When RxJS 7.x is used on Node.js regardless of whether it is consumed via <code>require</code> or <code>import</code>, CommonJS code targetting ES5 will be provided for execution.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">當透過針對瀏覽器（或其它非 Node.js 平台）的捆綁器使用 RxJS 7.4+ 時，將預設提供針對 ES5 的 ES 模組程式碼，並提供使用 ES2015 程式碼的選項。7.4.0 之前的 7.x 版本將僅提供 ES5 程式碼。</p><p translation-origin=\"off\">When RxJS 7.4+ is used via a bundler targeting a browser (or other non-Node.js platform) ES module code targetting ES5 will be provided by default with the option to use ES2015 code. 7.x versions prior to 7.4.0 will only provide ES5 code.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">如果專案的目標瀏覽器支援 ES2015+ 或其捆綁過程支援降級到 ES5，則可以選擇將捆綁器設定為允許使用 ES2015 RxJS 程式碼。你可以透過將捆綁器設定為在模組解析期間使用 <code>es2015</code> 自定義匯出條件來啟用對使用 ES2015 RxJS 程式碼的支援。將捆綁器設定為讓每個捆綁器使用獨特的 <code>es2015</code> 自定義匯出條件。如果你有興趣使用此選項，請查閱捆綁器的文件以獲取更多訊息。但是，可以在此處找到一些一般訊息： <a href=\"https://webpack.js.org/guides/package-exports/#conditions-custom\">https://webpack.js.org/guides/package-exports/#conditions-custom</a></p><p translation-origin=\"off\">If the target browsers for a project support ES2015+ or the bundle process supports down-leveling to ES5 then the bundler can optionally be configured to allow the ES2015 RxJS code to be used instead. You can enable support for using the ES2015 RxJS code by configuring a bundler to use the <code>es2015</code> custom export condition during module resolution. Configuring a bundler to use the <code>es2015</code> custom export condition is specific to each bundler. If you are interested in using this option, please consult the\ndocumentation of your bundler for additional information. However, some general information can be found here: <a href=\"https://webpack.js.org/guides/package-exports/#conditions-custom\">https://webpack.js.org/guides/package-exports/#conditions-custom</a></p>\n\n<p translation-result=\"on\">要僅匯入你需要的內容，請<a href=\"guide/importing#es6-via-npm\">檢視這份</a>指南。</p><p translation-origin=\"off\">To import only what you need, please <a href=\"guide/importing#es6-via-npm\">check out this</a> guide.</p>\n\n<h2 id=\"commonjs-via-npm\" translation-result=\"on\">透過 npm 匯入 CommonJS<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#commonjs-via-npm\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"commonjs-via-npm\">CommonJS via npm<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#commonjs-via-npm\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">如果你在使用 RxJS 時收到錯誤 TS2304: Cannot find name 'Promise' 或 error TS2304: Cannot find name 'Iterable' 之類的錯誤，你可能需要安裝一組補充的型別。</p><p translation-origin=\"off\">If you receive an error like error TS2304: Cannot find name 'Promise' or error TS2304: Cannot find name\n'Iterable' when using RxJS you may need to install a supplemental set of typings.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">對於 typings 使用者：</p><p translation-origin=\"off\">For typings users:</p>\n\n</li>\n</ol>\n<code-example language=\"shell\">\ntypings install es6-shim --ambient\n</code-example>\n<ol start=\"2\">\n<li>\n<p translation-result=\"on\">如果你不使用 typings，則可以從 /es6-shim/es6-shim.d.ts 中複製介面。</p><p translation-origin=\"off\">If you're not using typings the interfaces can be copied from /es6-shim/es6-shim.d.ts.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">新增要包含在 tsconfig.json 或 CLI 引數中的型別定義檔案。</p><p translation-origin=\"off\">Add type definition file included in tsconfig.json or CLI argument.</p>\n\n</li>\n</ol>\n<h2 id=\"all-module-types-cjses6amdtypescript-via-npm\" translation-result=\"on\">透過 npm 安裝所有模組型別 (CJS/ES6/AMD/TypeScript)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#all-module-types-cjses6amdtypescript-via-npm\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"all-module-types-cjses6amdtypescript-via-npm\">All Module Types (CJS/ES6/AMD/TypeScript) via npm<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#all-module-types-cjses6amdtypescript-via-npm\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要透過 npm 版本 3 安裝此函式庫，請使用以下指令：</p><p translation-origin=\"off\">To install this library via npm version 3, use the following command:</p>\n\n<code-example language=\"shell\">\nnpm install @reactivex/rxjs\n</code-example>\n<p translation-result=\"on\">如果你使用的是 npm 版本 2，則需要明確指定庫版本：</p><p translation-origin=\"off\">If you are using npm version 2, you need to specify the library version explicitly:</p>\n\n<code-example language=\"shell\">\nnpm install @reactivex/rxjs@7.3.0\n</code-example>\n<h2 id=\"cdn\">CDN<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/installation#cdn\"><i class=\"material-icons\">link</i></a></h2>\n<p translation-result=\"on\">對於 CDN，你可以使用 <a href=\"https://unpkg.com/\">unpkg</a>：</p><p translation-origin=\"off\">For CDN, you can use <a href=\"https://unpkg.com/\">unpkg</a>:</p>\n\n<p><a href=\"https://unpkg.com/rxjs@%5E7/dist/bundles/rxjs.umd.min.js\">https://unpkg.com/rxjs@^7/dist/bundles/rxjs.umd.min.js</a></p>\n<p translation-result=\"on\">要匯入你需要的內容，請<a href=\"guide/importing#cdn\">檢視此</a> 指南。</p><p translation-origin=\"off\">To import what you need, please <a href=\"guide/importing#cdn\">check out this</a> guide.</p>\n\n\n</div>\n<!-- links to this doc:\n - guide/importing\n-->\n<!-- links from this doc:\n - guide/importing#cdn\n - guide/importing#es6-via-npm\n - guide/installation#all-module-types-cjses6amdtypescript-via-npm\n - guide/installation#cdn\n - guide/installation#commonjs-via-npm\n - guide/installation#es2015-via-npm\n - guide/installation#installation-instructions\n - https://unpkg.com/\n - https://unpkg.com/rxjs@%5E7/dist/bundles/rxjs.umd.min.js\n - https://webpack.js.org/guides/package-exports/#conditions-custom\n-->"
}