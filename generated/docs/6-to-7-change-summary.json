{
  "id": "6-to-7-change-summary",
  "title": "",
  "contents": "\n<div class=\"content\">\n<h1 id=\"rxjs-6x-to-7x-detailed-change-list\" translation-result=\"on\">RxJS 6.x 到 7.x 詳細變更清單<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#rxjs-6x-to-7x-detailed-change-list\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"rxjs-6x-to-7x-detailed-change-list\">RxJS 6.x to 7.x Detailed Change List<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#rxjs-6x-to-7x-detailed-change-list\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">本文件包含 RxJS 6.x 和 RxJS 7.x 之間更改的詳細清單，按照在不同模組檔案中區分 TypeScript API 時可以找到的順序顯示。</p><p translation-origin=\"off\">This document contains a detailed list of changes between RxJS 6.x and RxJS 7.x, presented in the order they can be found when diffing the TypeScript APIs in various module files.</p>\n\n<h1 id=\"module-rxjs\" translation-result=\"on\">模組 <code>rxjs</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#module-rxjs\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"module-rxjs\">module <code>rxjs</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#module-rxjs\"><i class=\"material-icons\">link</i></a></h1>\n\n<h2 id=\"breaking-changes\" translation-result=\"on\">重大變化<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#breaking-changes\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"breaking-changes\">Breaking changes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#breaking-changes\"><i class=\"material-icons\">link</i></a></h2>\n\n<h3 id=\"asyncsubject\" translation-result=\"on\">AsyncSubject(非同步主體)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#asyncsubject\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"asyncsubject\">AsyncSubject<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#asyncsubject\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>_subscribe</code> 方法不再是 <code>public</code> 的，現在是 <code>protected</code> 的。</p><p translation-origin=\"off\"><code>_subscribe</code> method is no longer <code>public</code> and is now <code>protected</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">不再有自己的、從 <code><a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a></code> 繼承來的 <code>error</code> 方法的實現。</p><p translation-origin=\"off\">no longer has its own implementation of the <code>error</code> method inherited from <code><a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a></code>.</p>\n\n</li>\n</ul>\n<h3 id=\"behaviorsubject\" translation-result=\"on\">BehaviorSubject(行為主體)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#behaviorsubject\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"behaviorsubject\">BehaviorSubject<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#behaviorsubject\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>_subscribe</code> 方法不再是 <code>public</code> 的，現在是 <code>protected</code> 的。</p><p translation-origin=\"off\"><code>_subscribe</code> method is no longer <code>public</code> and is now <code>protected</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>value</code> 屬性是 getter <code>get value()</code> 而不是 <code>readonly value</code>，不能再強制設定。</p><p translation-origin=\"off\"><code>value</code> property is a getter <code>get value()</code> instead of <code>readonly value</code>, and can no longer be forcibly set.</p>\n\n</li>\n</ul>\n<h3 id=\"bindcallback\" translation-result=\"on\">bindCallback(繫結回調)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#bindcallback\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"bindcallback\">bindCallback<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#bindcallback\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"combinelatest\" translation-result=\"on\">combineLatest(組合最新的)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#combinelatest\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"combinelatest\">combineLatest<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#combinelatest\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"concat\" translation-result=\"on\">concat(串聯)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#concat\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"concat\">concat<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#concat\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"connectableobservable\" translation-result=\"on\">ConnectableObservable(可連線的 Observable)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#connectableobservable\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"connectableobservable\">ConnectableObservable<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#connectableobservable\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>_isComplete</code> 不再是一個屬性。</p><p translation-origin=\"off\"><code>_isComplete</code> is no longer a property.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>_subscribe</code> 方法不再是 <code>public</code> 的，現在是 <code>protected</code> 的。</p><p translation-origin=\"off\"><code>_subscribe</code> method is no longer <code>public</code> and is now <code>protected</code>.</p>\n\n</li>\n</ul>\n<h3 id=\"defer\" translation-result=\"on\">defer(推遲)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#defer\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"defer\">defer<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#defer\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">通用引數不再擴充套件 <code>void</code>。</p><p translation-origin=\"off\">Generic argument no longer extends <code>void</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/defer\" class=\"code-anchor\">defer</a></code> 不再允許工廠回傳 void 或 undefined。所有傳遞給 <code><a href=\"api/index/function/defer\" class=\"code-anchor\">defer</a></code> 的工廠都必須回傳一個適當的 <code><a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a></code>，例如 <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a></code>、<code>Promise</code> 等。要獲得與你之前可能依賴的相同行為，請從工廠 <code>return <a href=\"api/index/const/EMPTY\" class=\"code-anchor\">EMPTY</a></code> 或 <code>return <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>()</code>。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/defer\" class=\"code-anchor\">defer</a></code> no longer allows factories to return void or undefined. All factories passed to <code><a href=\"api/index/function/defer\" class=\"code-anchor\">defer</a></code> must return a proper <code><a href=\"api/index/type-alias/ObservableInput\" class=\"code-anchor\">ObservableInput</a></code>, such as <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a></code>, <code>Promise</code>, et al. To get the same behavior as you may have relied on previously, <code>return <a href=\"api/index/const/EMPTY\" class=\"code-anchor\">EMPTY</a></code> or <code>return <a href=\"api/index/function/of\" class=\"code-anchor\">of</a>()</code> from the factory.</p>\n\n</li>\n</ul>\n<h3 id=\"forkjoin\" translation-result=\"on\">forkJoin(分叉加入)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#forkjoin\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"forkjoin\">forkJoin<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#forkjoin\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"fromevent\" translation-result=\"on\">fromEvent(從事件)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#fromevent\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"fromevent\">fromEvent<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#fromevent\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> 簽名已更改，現在每種型別的目標（DOM、Node、jQuery 等）都有單獨的簽名。這意味著嘗試將選項（例如 <code>{ once: true }</code>）傳遞給不支援 options 引數將導致 TypeScript 錯誤。</p><p translation-origin=\"off\">The <code><a href=\"api/index/function/fromEvent\" class=\"code-anchor\">fromEvent</a></code> signatures have been changed and there are now separate signatures for each type of target - DOM, Node, jQuery, etc. That means that an attempt to pass options - like <code>{ once: true }</code> - to a target that does not support an options argument will result in a TypeScript error.</p>\n\n</li>\n</ul>\n<h3 id=\"groupedobservable\" translation-result=\"on\">GroupedObservable(已分組的 Observable)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#groupedobservable\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"groupedobservable\">GroupedObservable<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#groupedobservable\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">不再公開暴露 <code>_subscribe</code></p><p translation-origin=\"off\">No longer publicly exposes <code>_subscribe</code></p>\n\n</li>\n<li>\n<p translation-result=\"on\">正確的 <code>key</code> 是 <code>readonly</code> 的。</p><p translation-origin=\"off\"><code>key</code> properly is <code>readonly</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">不再公開公開 <code>constructor</code>。</p><p translation-origin=\"off\">No longer publicly exposes <code>constructor</code>.</p>\n\n</li>\n</ul>\n<h3 id=\"iif\" translation-result=\"on\">iif(如果)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#iif\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"iif\">iif<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#iif\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/iif\" class=\"code-anchor\">iif</a></code> 將不再允許 <code>undefined</code> 的結果引數。這是一個糟糕的呼叫模式，在大多數情況下可能是一個錯誤。如果由於某種原因你依賴這種行為，只需用 <code><a href=\"api/index/const/EMPTY\" class=\"code-anchor\">EMPTY</a></code> 代替 <code>undefined</code> 引數。這確保了行為是有意的和期望的，而不是意外 <code>undefined</code> 引數的結果。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/iif\" class=\"code-anchor\">iif</a></code> will no longer allow result arguments that are <code>undefined</code>. This was a bad call pattern that was likely an error in most cases. If for some reason you are relying on this behavior, simply substitute <code><a href=\"api/index/const/EMPTY\" class=\"code-anchor\">EMPTY</a></code> in place of the <code>undefined</code> argument. This ensures that the behavior was intentional and desired, rather than the result of an accidental <code>undefined</code> argument.</p>\n\n</li>\n</ul>\n<h3 id=\"isobservable\" translation-result=\"on\">isObservable(是 Observable)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#isobservable\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"isobservable\">isObservable<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#isobservable\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">不再具有泛型並回傳 <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code>，你必須轉換結果。</p><p translation-origin=\"off\">No longer has a generic and returns <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code>, you must cast the result.</p>\n\n</li>\n</ul>\n<h3 id=\"merge\" translation-result=\"on\">merge(合併)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#merge\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"merge\">merge<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#merge\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"notification\" translation-result=\"on\">Notification(通知)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#notification\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"notification\">Notification<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#notification\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>error</code> 屬性現在是 <code>readonly</code>。</p><p translation-origin=\"off\">The <code>error</code> property is now <code>readonly</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>hasValue</code> 屬性現在是 <code>readonly</code> 的。</p><p translation-origin=\"off\">The <code>hasValue</code> property is now <code>readonly</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>kind</code> 屬性現在是 <code>readonly</code>。</p><p translation-origin=\"off\">The <code>kind</code> property is now <code>readonly</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>value</code> 屬性現在是 <code>readonly</code> 的並且可能是 <code>undefined</code>。</p><p translation-origin=\"off\">The <code>value</code> property is now <code>readonly</code> and may be <code>undefined</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>constructor</code> 簽名現在只允許有效構造。例如 <code>new <a href=\"api/index/class/Notification\" class=\"code-anchor\">Notification</a>('C', 'some_value')</code> 在 TypeScript 中將是一個錯誤。</p><p translation-origin=\"off\"><code>constructor</code> signature now only allows valid construction. For example <code>new <a href=\"api/index/class/Notification\" class=\"code-anchor\">Notification</a>('C', 'some_value')</code> will be an error in TypeScript.</p>\n\n</li>\n</ul>\n<h3 id=\"observable\">Observable<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#observable\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"observable-observable\">Observable( Observable)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#observable-observable\"><i class=\"material-icons\">link</i></a></h3>\n<ul>\n<li>\n<p translation-result=\"on\"><code>_isScalar</code> 屬性已刪除。</p><p translation-origin=\"off\"><code>_isScalar</code> property removed.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>_subscribe</code> 方法不再 <code>public</code>，現在標記為 <code>@internal</code>。</p><p translation-origin=\"off\"><code>_subscribe</code> method is no longer <code>public</code> and is now marked <code>@internal</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>_trySubscribe</code> 方法不再 <code>public</code>，現在是 <code>@internal</code>。</p><p translation-origin=\"off\"><code>_trySubscribe</code> method is no longer <code>public</code> and is now <code>@internal</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">具有 <code>9</code> 或更多引數的 <code><a href=\"api/index/function/pipe\" class=\"code-anchor\">pipe</a></code> 方法呼叫現在將回傳 <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code> 而不是 <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;{}></code>。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/pipe\" class=\"code-anchor\">pipe</a></code> method calls with <code>9</code> or more arguments will now return <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;unknown></code> rather than <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a>&#x3C;{}></code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>toPromise</code> 方法現在可以正確回傳 <code>Promise&#x3C;T | undefined></code> 而不是 <code>Promise&#x3C;T></code>。這是一個沒有執行時更改的更正，因為如果 observable 在完成之前沒有發出值，則 promise 將解析為 <code>undefined</code>。</p><p translation-origin=\"off\"><code>toPromise</code> method now correctly returns <code>Promise&#x3C;T | undefined></code> instead of <code>Promise&#x3C;T></code>. This a correction without a runtime change, because if the observable does not emit a value before completion, the promise will resolve with <code>undefined</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">不再定義 <code>static if</code> 和 <code>static throw</code> 屬性。它們在版本 6 中未使用。</p><p translation-origin=\"off\"><code>static if</code> and <code>static throw</code> properties are no longer defined. They were unused in version 6.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>lift</code>、<code>source</code> 和 <code>operator</code> 屬性仍然<strong>不推薦使用</strong>，不應使用。它們是實現細節，很可能在版本 8 中被重新命名或丟失。</p><p translation-origin=\"off\"><code>lift</code>, <code>source</code>, and <code>operator</code> properties are still <strong>deprecated</strong>, and should not be used. They are implementation details, and will very likely be renamed or missing in version 8.</p>\n\n</li>\n</ul>\n<h3 id=\"of\" translation-result=\"on\">of(對...包裝成)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#of\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"of\">of<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#of\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"onerrorresumenext\">onErrorResumeNext<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#onerrorresumenext\"><i class=\"material-icons\">link</i></a></h3>\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"pairs\" translation-result=\"on\">pairs(配對)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#pairs\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"pairs\">pairs<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#pairs\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">如果沒有 <code>Object.entries</code> 的 polyfill，<code><a href=\"api/index/function/pairs\" class=\"code-anchor\">pairs</a></code> 將不再在 IE 中起作用。<code><a href=\"api/index/function/pairs\" class=\"code-anchor\">pairs</a></code> 本身也被棄用，有利於僅使用 <code><a href=\"api/index/function/from\" class=\"code-anchor\">from</a>(Object.entries(obj))</code> 的使用者。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/pairs\" class=\"code-anchor\">pairs</a></code> will no longer function in IE without a polyfill for <code>Object.entries</code>. <code><a href=\"api/index/function/pairs\" class=\"code-anchor\">pairs</a></code> itself is also deprecated in favor of users just using <code><a href=\"api/index/function/from\" class=\"code-anchor\">from</a>(Object.entries(obj))</code>.</p>\n\n</li>\n</ul>\n<h3 id=\"partition\" translation-result=\"on\">partition(劃分)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#partition\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"partition\">partition<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#partition\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"pipe\" translation-result=\"on\">pipe(通道)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#pipe\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"pipe\">pipe<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#pipe\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">帶有 <code>9</code> 或更多引數的呼叫現在將回傳 <code>(arg: A) => unknown</code> 而不是 <code>(arg: A) => {}</code>。</p><p translation-origin=\"off\">Calls with <code>9</code> or more arguments will now return <code>(arg: A) => unknown</code> rather than <code>(arg: A) => {}</code>.</p>\n\n</li>\n</ul>\n<h3 id=\"race\" translation-result=\"on\">race(競速)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#race\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"race\">race<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#race\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">如果提供的源同步出錯或完成，<code><a href=\"api/index/function/race\" class=\"code-anchor\">race</a></code> 將不再訂閱後續的 observables。這意味著在極少數情況下訂閱期間可能發生的副作用將不再發生。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/race\" class=\"code-anchor\">race</a></code> will no longer subscribe to subsequent observables if a provided source synchronously errors or completes. This means side effects that might have occurred during subscription in those rare cases will no longer occur.</p>\n\n</li>\n</ul>\n<h3 id=\"replaysubject\" translation-result=\"on\">ReplaySubject(重播主體)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#replaysubject\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"replaysubject\">ReplaySubject<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#replaysubject\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>_getNow</code> 方法已被刪除。</p><p translation-origin=\"off\"><code>_getNow</code> method has been removed.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>_subscribe</code> 方法不再是 <code>public</code> 的，現在是 <code>protected</code> 的。</p><p translation-origin=\"off\"><code>_subscribe</code> method is no longer <code>public</code> and is now <code>protected</code>.</p>\n\n</li>\n</ul>\n<h3 id=\"subscribable\" translation-result=\"on\">Subscribable(可訂閱的)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#subscribable\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"subscribable\">Subscribable<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#subscribable\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>subscribe</code> 現在將接受 <code>Partial&#x3C;<a href=\"api/index/interface/Observer\" class=\"code-anchor\">Observer</a>&#x3C;T>></code>。所有以函式作為引數的過載都已被刪除。這是因為 <code><a href=\"api/index/interface/Subscribable\" class=\"code-anchor\">Subscribable</a></code> 旨在對映到 TC39 提案中的基本可觀察合約和對 <code>[Symbol.observable]()</code> 的呼叫的回傳型別。</p><p translation-origin=\"off\"><code>subscribe</code> will accept <code>Partial&#x3C;<a href=\"api/index/interface/Observer\" class=\"code-anchor\">Observer</a>&#x3C;T>></code> now. All overloads with functions as arguments have been removed. This is because <code><a href=\"api/index/interface/Subscribable\" class=\"code-anchor\">Subscribable</a></code> is intended to map to the basic observable contract from the TC39 proposal and the the return type of a call to <code>[Symbol.observable]()</code>.</p>\n\n</li>\n</ul>\n<h3 id=\"subscribableorpromise\" translation-result=\"on\">SubscribableOrPromise(可訂閱者或 Promise)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#subscribableorpromise\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"subscribableorpromise\">SubscribableOrPromise<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#subscribableorpromise\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">請參閱上面關於 <code><a href=\"api/index/interface/Subscribable\" class=\"code-anchor\">Subscribable</a></code> 的註解。</p><p translation-origin=\"off\">See notes on <code><a href=\"api/index/interface/Subscribable\" class=\"code-anchor\">Subscribable</a></code> above.</p>\n\n</li>\n</ul>\n<h3 id=\"subscriber\" translation-result=\"on\">Subscriber(訂閱者)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#subscriber\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"subscriber\">Subscriber<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#subscriber\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>destination</code> 屬性現在必須是 <code><a href=\"api/index/class/Subscriber\" class=\"code-anchor\">Subscriber</a></code> 或完整的 <code><a href=\"api/index/interface/Observer\" class=\"code-anchor\">Observer</a></code>。</p><p translation-origin=\"off\"><code>destination</code> property must now be a <code><a href=\"api/index/class/Subscriber\" class=\"code-anchor\">Subscriber</a></code> or full <code><a href=\"api/index/interface/Observer\" class=\"code-anchor\">Observer</a></code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>syncErrorThrowable</code> 屬性已被移除。</p><p translation-origin=\"off\"><code>syncErrorThrowable</code> property has been removed.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>syncErrorThrown</code> 屬性已被刪除。</p><p translation-origin=\"off\"><code>syncErrorThrown</code> property has been removed.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>syncErrorValue</code> 屬性已被刪除。</p><p translation-origin=\"off\"><code>syncErrorValue</code> property has been removed.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>_unsubscribeAndRecycle</code> 方法已被刪除。</p><p translation-origin=\"off\"><code>_unsubscribeAndRecycle</code> method has been removed.</p>\n\n</li>\n</ul>\n<h3 id=\"subscription\" translation-result=\"on\">Subscription(訂閱)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#subscription\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"subscription\">Subscription<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#subscription\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>_parentOrParents</code> 屬性已被刪除。</p><p translation-origin=\"off\"><code>_parentOrParents</code> property has been removed.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>add</code> 方法回傳 <code>void</code> 並且不再回傳 <code><a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code>。回傳 <code><a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code> 是版本 5 早期的一個舊行為。如果你向訂閱新增一個函式（即 <code>subscription.add(fn)</code>），你可以透過使用相同的函式實例呼叫 <code>remove</code> 直接刪除該函式。（即 <code>subscription.remove(fn)</code>）。以前，你需要獲取回傳的 <code><a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code> 物件並將<em>其傳遞</em>給 <code>remove</code>。在版本 6 及更低版本中，使用另一個 <code><a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code> 呼叫 <code>add</code> 回傳的 <code><a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code> 始終與你傳入的訂閱相同。（意味著 <code>subscription.add(subs1).add(subs2)</code> 是一個反模式，與 <code>subscription.add(subs1); subs1.add(subs2);</code> .</p><p translation-origin=\"off\"><code>add</code> method returns <code>void</code> and no longer returns a <code><a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code>. Returning <code><a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code> was an old behavior from the early days of version 5. If you add a function to a subscription (i.e. <code>subscription.add(fn)</code>), you can remove that function directly by calling <code>remove</code> with the same function instance. (i.e. <code>subscription.remove(fn)</code>). Previously, you needed to get the returned <code><a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code> object and pass <em>that</em> to <code>remove</code>. In version 6 and lower, the <code><a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code> returned by calling <code>add</code> with\nanother <code><a href=\"api/index/class/Subscription\" class=\"code-anchor\">Subscription</a></code> was always the same subscription you passed in. (meaning <code>subscription.add(subs1).add(subs2)</code> was an antipattern and the same as <code>subscription.add(subs1); subs1.add(subs2);</code>.</p>\n\n</li>\n</ul>\n<h3 id=\"virtualaction\" translation-result=\"on\">VirtualAction(虛擬動作)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#virtualaction\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"virtualaction\">VirtualAction<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#virtualaction\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">靜態 <code>sortActions</code> 方法已被刪除。</p><p translation-origin=\"off\">The static <code>sortActions</code> method has been removed.</p>\n\n</li>\n</ul>\n<h3 id=\"zip\" translation-result=\"on\">zip(拉合)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#zip\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"zip\">zip<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#zip\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">壓縮單個陣列現在會有不同的結果。這是一個極端的極端情況，因為任何人都不太可能想要一無所有地壓縮一個陣列。解決方法是將陣列包裝在另一個陣列 <code><a href=\"api/index/function/zip\" class=\"code-anchor\">zip</a>([[1,2,3]])</code> 中。但同樣，這很奇怪。</p><p translation-origin=\"off\">Zipping a single array will now have a different result. This is an extreme corner-case, because it is very unlikely that anyone would want to zip an array with nothing at all. The workaround would be to wrap the array in another array <code><a href=\"api/index/function/zip\" class=\"code-anchor\">zip</a>([[1,2,3]])</code>. But again, that's pretty weird.</p>\n\n</li>\n</ul>\n<hr>\n<h2 id=\"new-features\" translation-result=\"on\">新屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#new-features\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"new-features\">New Features<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#new-features\"><i class=\"material-icons\">link</i></a></h2>\n\n<h3 id=\"animationframes\" translation-result=\"on\">animationFrames(動畫幀)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#animationframes\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"animationframes\">animationFrames<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#animationframes\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">一種建立動畫幀流的新方法。每個事件都將帶有一個高解析度的時間戳，以及自觀察開始以來經過的時間。</p><p translation-origin=\"off\">A new method for creating a stream of animation frames. Each event will carry with it a high-resolution timestamp, and an elapsed time since observation was started.</p>\n\n</li>\n</ul>\n<h3 id=\"config\" translation-result=\"on\">config(設定)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#config\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"config\">config<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#config\"><i class=\"material-icons\">link</i></a></h3>\n\n<h4 id=\"onunhandlederror\">onUnhandledError<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#onunhandlederror\"><i class=\"material-icons\">link</i></a></h4>\n<ul>\n<li>\n<p translation-result=\"on\">當 Observer 中沒有錯誤處理器時，用於處理一直到觀察鏈『末端』的錯誤的處理器。對於在 RxJS 可觀察鏈中記錄未處理的錯誤等事情很有用。</p><p translation-origin=\"off\">A handler for dealing with errors that make it all the way down to the \"end\" of the observation chain when there is no error handler in the observer. Useful for doing things like logging unhandled errors in RxJS observable chains.</p>\n\n</li>\n</ul>\n<h4 id=\"onstoppednotification\">onStoppedNotification<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#onstoppednotification\"><i class=\"material-icons\">link</i></a></h4>\n<ul>\n<li>\n<p translation-result=\"on\">邊緣情況的處理器，其中 RxJS 中的訂閱者在它已經『停止』之後得到通知，即它收到出錯或完成但尚未完成的時間點。這主要用於記錄目的。</p><p translation-origin=\"off\">A handler for edge cases where a subscriber within RxJS is notified after it has already \"stopped\", that is, a point in time where it has received an error or complete, but hasn't yet finalized. This is mostly useful for logging purposes.</p>\n\n</li>\n</ul>\n<h4 id=\"usedeprecatednextcontext\">useDeprecatedNextContext<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#usedeprecatednextcontext\"><i class=\"material-icons\">link</i></a></h4>\n<ul>\n<li>\n<p translation-result=\"on\">在 RxJS 6 中，一個很少使用的功能允許使用者在呼叫 <code>this</code> <code>next</code> 處理器時直接訪問 <code>subscriber</code> 者。這樣做的問題是它招致了嚴重的效能損失。該行為已更改（因為它沒有真正記錄並且幾乎從未使用過）以不更改任何使用者提供的訂閱處理器的 <code>this</code> 上下文。如果你需要恢復該功能，可以使用此標誌開啟它。請注意，此行為將在版本 8 中完全刪除。</p><p translation-origin=\"off\">In RxJS 6, a little used feature allowed users to access the <code>subscriber</code> directly as <code>this</code> within a call to the <code>next</code> handler. The problem with this is it incurred heavy performance penalties. That behavior has been changed (because it wasn't really documented and it was barely ever used) to not change the <code>this</code> context of any user-provided subscription handlers. If you need to get that feature back, you can switch it on with this flag. Note this behavior will be removed completely in version 8.</p>\n\n</li>\n</ul>\n<h3 id=\"connectable\" translation-result=\"on\">connectable(可連線的)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#connectable\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"connectable\">connectable<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#connectable\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">這是建立 <code><a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a></code> 的新方法，實際上是對 <code><a href=\"api/index/function/multicast\" class=\"code-anchor\">multicast</a></code> 和 <code><a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a></code> 變體的非選擇器使用的替代。只需將你的源 observable 傳遞給你想要 <code><a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a></code> 的 <code><a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a></code> 即可連線。</p><p translation-origin=\"off\">This is the new means for creating a <code><a href=\"api/index/class/ConnectableObservable\" class=\"code-anchor\">ConnectableObservable</a></code>, and really is a replacement for non-selector usage of <code><a href=\"api/index/function/multicast\" class=\"code-anchor\">multicast</a></code> and <code><a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a></code> variants. Simply pass your source observable to <code><a href=\"api/index/function/connectable\" class=\"code-anchor\">connectable</a></code> with the <code><a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a></code> you'd like to connect through.</p>\n\n</li>\n</ul>\n<h3 id=\"firstvaluefrom\" translation-result=\"on\">firstValueFrom(第一個值來自)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#firstvaluefrom\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"firstvaluefrom\">firstValueFrom<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#firstvaluefrom\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>toPromise()</code> 的更好、更可搖樹的替代品（現已棄用）。此函式允許使用者將任何 <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a></code> 轉換為 <code>Promise</code>，該 Promise 將在源 observable 發出其第一個值時解析。如果源 observable 在沒有發出值的情況下關閉，則回傳的 Promise 將拒絕並回傳 <code><a href=\"api/index/interface/EmptyError\" class=\"code-anchor\">EmptyError</a></code>，或者它將使用設定的 <code>defaultValue</code> 解析。有關詳細訊息，請參閱<a href=\"/deprecations/to-promise\">棄用指南</a>。</p><p translation-origin=\"off\">A better, more tree-shakable replacement for <code>toPromise()</code> (which is now deprecated). This function allows the user to convert any <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a></code> in to a <code>Promise</code> that will resolve when the source observable emits its first value. If the source observable closes without emitting a value, the returned promise will reject with an <code><a href=\"api/index/interface/EmptyError\" class=\"code-anchor\">EmptyError</a></code>, or it will resolve with a configured <code>defaultValue</code>. For more information, see the <a href=\"/deprecations/to-promise\">deprecation guide</a>.</p>\n\n</li>\n</ul>\n<h3 id=\"lastvaluefrom\" translation-result=\"on\">lastValueFrom(來自...的最後一個值)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#lastvaluefrom\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"lastvaluefrom\">lastValueFrom<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#lastvaluefrom\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>toPromise()</code> 的更好、更可搖樹的替代品（現已棄用）。此函式允許使用者將任何 <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a></code> 轉換為 <code>Promise</code>，該 Promise 將在源 observable 發出最後一個值時解析。如果源 observable 在沒有發出值的情況下關閉，則回傳的 Promise 將拒絕並回傳 <code><a href=\"api/index/interface/EmptyError\" class=\"code-anchor\">EmptyError</a></code>，或者它將使用設定的 <code>defaultValue</code> 解析。有關詳細訊息，請參閱<a href=\"/deprecations/to-promise\">棄用指南</a>。</p><p translation-origin=\"off\">A better, more tree-shakable replacement for <code>toPromise()</code> (which is now deprecated). This function allows the user to convert any <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a></code> in to a <code>Promise</code> that will resolve when the source observable emits the last value. If the source observable closes without emitting a value, the returned promise will reject with an <code><a href=\"api/index/interface/EmptyError\" class=\"code-anchor\">EmptyError</a></code>, or it will resolve with a configured <code>defaultValue</code>. For more information, see the <a href=\"/deprecations/to-promise\">deprecation guide</a>.</p>\n\n</li>\n</ul>\n<h3 id=\"observableinput\" translation-result=\"on\">ObservableInput( Observable 的輸入)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#observableinput\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"observableinput\">ObservableInput<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#observableinput\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">這只是一種型別，但它很重要。這種型別定義了可以傳遞給 RxJS 中幾乎所有接受 Observable 的 API 的允許型別。它一直接受 <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a></code>、<code>Promise</code>、<code>Iterable</code> 和 <code>ArrayLike</code>。現在它也將接受 <code>AsyncIterable</code> 和 <code>ReadableStream</code>。</p><p translation-origin=\"off\">This is just a type, but it's important. This type defines the allowed types that can be passed to almost every API within RxJS that accepts an Observable. It has always accepted <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a></code>, <code>Promise</code>, <code>Iterable</code>, and <code>ArrayLike</code>. Now it will also accept <code>AsyncIterable</code> and <code>ReadableStream</code>.</p>\n\n</li>\n</ul>\n<h4 id=\"asynciterable\" translation-result=\"on\">AsyncIterable(非同步可迭代者)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#asynciterable\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\" id=\"asynciterable\">AsyncIterable<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#asynciterable\"><i class=\"material-icons\">link</i></a></h4>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>AsyncIterables</code>，例如由 <code>IxJS</code> 或非同步產生器（<code>async function*</code>）定義的那些，現在可以傳遞給任何接受 observable 的 API，並且可以直接使用 <code><a href=\"api/index/function/from\" class=\"code-anchor\">from</a></code> 轉換為 <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a></code>。</p><p translation-origin=\"off\"><code>AsyncIterables</code> such as those defined by <code>IxJS</code> or by async generators (<code>async function*</code>), may now be passed to any API that accepts an observable, and can be converted to an <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a></code> directly using <code><a href=\"api/index/function/from\" class=\"code-anchor\">from</a></code>.</p>\n\n</li>\n</ul>\n<h4 id=\"readablestream\" translation-result=\"on\">ReadableStream(可讀流)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#readablestream\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\" id=\"readablestream\">ReadableStream<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#readablestream\"><i class=\"material-icons\">link</i></a></h4>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>ReadableStream</code>（例如 <code>fetch</code> 等回傳的）可以傳遞給任何接受 observable 的 API，並且可以直接使用 <code><a href=\"api/index/function/from\" class=\"code-anchor\">from</a></code> 轉換為 <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a></code>。</p><p translation-origin=\"off\"><code>ReadableStream</code> such as those returned by <code>fetch</code>, et al, can be passed to any API that accepts an observable, and can be converted to <code><a href=\"api/index/class/Observable\" class=\"code-anchor\">Observable</a></code> directly using <code><a href=\"api/index/function/from\" class=\"code-anchor\">from</a></code>.</p>\n\n</li>\n</ul>\n<h3 id=\"replaysubject-1\" translation-result=\"on\">ReplaySubject(重播主體)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#replaysubject-1\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"replaysubject-1\">ReplaySubject<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#replaysubject-1\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"https://github.com/ReactiveX/rxjs/pull/5696\">修復了一個錯誤，</a>該錯誤會阻止已完成或錯誤的 <code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code> 在重新訂閱另一個源時在其緩衝區中累積值。這打破了一些依賴於錯誤行為的用途——比如<a href=\"https://stackoverflow.com/a/54957061\">這個 StackOverflow 答案</a>。</p><p translation-origin=\"off\">A <a href=\"https://github.com/ReactiveX/rxjs/pull/5696\">bug was fixed</a> that prevented a completed or errored <code><a href=\"api/index/class/ReplaySubject\" class=\"code-anchor\">ReplaySubject</a></code> from accumulating values in its buffer when resubscribed to another source. This breaks some uses - like <a href=\"https://stackoverflow.com/a/54957061\">this StackOverflow answer</a> - that depended upon the buggy behavior.</p>\n\n</li>\n</ul>\n<h3 id=\"subscription-1\" translation-result=\"on\">Subscription(訂閱)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#subscription-1\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"subscription-1\">Subscription<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#subscription-1\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">現在允許透過 <code>add</code> 和 <code>remove</code> 方法直接新增和刪除函式。</p><p translation-origin=\"off\">Now allows adding and removing of functions directly via <code>add</code> and <code>remove</code> methods.</p>\n\n</li>\n</ul>\n<h3 id=\"throwerror\" translation-result=\"on\">throwError(丟擲錯誤)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#throwerror\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"throwerror\">throwError<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#throwerror\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">現在接受 <code>() => any</code> 的 <code>errorFactory</code> 以將錯誤的建立推遲到它發出的時間。建議使用此方法，因為在大多數流行的 JavaScript 執行時中建立的錯誤將保留當前範圍內的所有值以進行除錯。</p><p translation-origin=\"off\">Now accepts an <code>errorFactory</code> of <code>() => any</code> to defer the creation of the error until the time it will be emitted. It is recommended to use this method, as Errors created in most popular JavaScript runtimes will retain all values in the current scope for debugging purposes.</p>\n\n</li>\n</ul>\n<h1 id=\"module-rxjsoperators\" translation-result=\"on\">模組 <code>rxjs/operators</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#module-rxjsoperators\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"module-rxjsoperators\">module <code>rxjs/operators</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#module-rxjsoperators\"><i class=\"material-icons\">link</i></a></h1>\n\n<h2 id=\"breaking-changes-1\" translation-result=\"on\">重大變化<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#breaking-changes-1\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"breaking-changes-1\">Breaking Changes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#breaking-changes-1\"><i class=\"material-icons\">link</i></a></h2>\n\n<h3 id=\"audit\" translation-result=\"on\">audit(審計)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#audit\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"audit\">audit<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#audit\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/audit\" class=\"code-anchor\">audit</a></code> 運算子的持續時間選擇器回傳的 Observable 必須發出下一個通知以結束持續時間。complete 通知不再結束持續時間。</p><p translation-origin=\"off\">The observable returned by the <code><a href=\"api/index/function/audit\" class=\"code-anchor\">audit</a></code> operator's duration selector must emit a next notification to end the duration. Complete notifications no longer end the duration.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/audit\" class=\"code-anchor\">audit</a></code> 現在在源完成時從源發出最後一個值。以前，<code><a href=\"api/index/function/audit\" class=\"code-anchor\">audit</a></code> 會映象完成而不發出值。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/audit\" class=\"code-anchor\">audit</a></code> now emits the last value from the source when the source completes. Previously, <code><a href=\"api/index/function/audit\" class=\"code-anchor\">audit</a></code> would mirror the completion without emitting the value.</p>\n\n</li>\n</ul>\n<h3 id=\"audittime\" translation-result=\"on\">auditTime(審計時間)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#audittime\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"audittime\">auditTime<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#audittime\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">在審計持續時間過去後，<code><a href=\"api/index/function/auditTime\" class=\"code-anchor\">auditTime</a></code> 現在在源完成時從源發出最後一個值。以前，<code><a href=\"api/index/function/auditTime\" class=\"code-anchor\">auditTime</a></code> 會映象完成而不發出值，也不需要等待審計持續時間過去。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/auditTime\" class=\"code-anchor\">auditTime</a></code> now emits the last value from the source when the source completes, after the audit duration elapses. Previously, <code><a href=\"api/index/function/auditTime\" class=\"code-anchor\">auditTime</a></code> would mirror the completion without emitting the value and without waiting for the audit duration to elapse.</p>\n\n</li>\n</ul>\n<h3 id=\"buffer\" translation-result=\"on\">buffer(緩衝)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#buffer\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"buffer\">buffer<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#buffer\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/buffer\" class=\"code-anchor\">buffer</a></code> 現在在訂閱關閉通知器之前訂閱源 observable。以前，它首先訂閱關閉通知器。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/buffer\" class=\"code-anchor\">buffer</a></code> now subscribes to the source observable before it subscribes to the closing notifier. Previously, it subscribed to the closing notifier first.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">現在將始終發出最終緩衝值。要獲得與先前版本相同的行為，你可以使用 <code><a href=\"api/index/function/endWith\" class=\"code-anchor\">endWith</a></code> 和 <code><a href=\"api/index/function/skipLast\" class=\"code-anchor\">skipLast</a>(1)</code>，如下所示： <code>source$.pipe(<a href=\"api/index/function/buffer\" class=\"code-anchor\">buffer</a>(notifier$.pipe(<a href=\"api/index/function/endWith\" class=\"code-anchor\">endWith</a>(true))), <a href=\"api/index/function/skipLast\" class=\"code-anchor\">skipLast</a>(1))</code></p><p translation-origin=\"off\">Final buffered values will now always be emitted. To get the same behavior as the previous release, you can use <code><a href=\"api/index/function/endWith\" class=\"code-anchor\">endWith</a></code> and <code><a href=\"api/index/function/skipLast\" class=\"code-anchor\">skipLast</a>(1)</code>, like so: <code>source$.pipe(<a href=\"api/index/function/buffer\" class=\"code-anchor\">buffer</a>(notifier$.pipe(<a href=\"api/index/function/endWith\" class=\"code-anchor\">endWith</a>(true))), <a href=\"api/index/function/skipLast\" class=\"code-anchor\">skipLast</a>(1))</code></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>closingNotifier</code> 完成不再完成 <code><a href=\"api/index/function/buffer\" class=\"code-anchor\">buffer</a></code> 的結果。如果這確實是一種理想的行為，那麼你應該使用 <code><a href=\"api/index/function/takeUntil\" class=\"code-anchor\">takeUntil</a></code>。類似於： <code>source$.pipe(<a href=\"api/index/function/buffer\" class=\"code-anchor\">buffer</a>(notifier$), <a href=\"api/index/function/takeUntil\" class=\"code-anchor\">takeUntil</a>(notifier$.pipe(<a href=\"api/index/function/ignoreElements\" class=\"code-anchor\">ignoreElements</a>(), <a href=\"api/index/function/endWith\" class=\"code-anchor\">endWith</a>(true))))</code>，其中 <code>notifier$</code> 是多播，儘管有很多方法可以構成這種行為。</p><p translation-origin=\"off\"><code>closingNotifier</code> completion no longer completes the result of <code><a href=\"api/index/function/buffer\" class=\"code-anchor\">buffer</a></code>. If that is truly a desired behavior, then you should use <code><a href=\"api/index/function/takeUntil\" class=\"code-anchor\">takeUntil</a></code>. Something like: <code>source$.pipe(<a href=\"api/index/function/buffer\" class=\"code-anchor\">buffer</a>(notifier$), <a href=\"api/index/function/takeUntil\" class=\"code-anchor\">takeUntil</a>(notifier$.pipe(<a href=\"api/index/function/ignoreElements\" class=\"code-anchor\">ignoreElements</a>(), <a href=\"api/index/function/endWith\" class=\"code-anchor\">endWith</a>(true))))</code>, where <code>notifier$</code> is multicast, although there are many ways to compose this behavior.</p>\n\n</li>\n</ul>\n<h3 id=\"buffertoggle\" translation-result=\"on\">bufferToggle(緩衝區切換)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#buffertoggle\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"buffertoggle\">bufferToggle<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#buffertoggle\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/bufferToggle\" class=\"code-anchor\">bufferToggle</a></code> 運算子的關閉選擇器回傳的 observable 必須發出下一個通知來關閉緩衝區。complete 通知不再關閉緩衝區。</p><p translation-origin=\"off\">The observable returned by the <code><a href=\"api/index/function/bufferToggle\" class=\"code-anchor\">bufferToggle</a></code> operator's closing selector must emit a next notification to close the buffer. Complete notifications no longer close the buffer.</p>\n\n</li>\n</ul>\n<h3 id=\"bufferwhen\" translation-result=\"on\">bufferWhen(當...時緩衝)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#bufferwhen\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"bufferwhen\">bufferWhen<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#bufferwhen\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/bufferWhen\" class=\"code-anchor\">bufferWhen</a></code> 運算子的關閉選擇器回傳的 observable 必須發出下一個通知來關閉緩衝區。complete 通知不再關閉緩衝區。</p><p translation-origin=\"off\">The observable returned by the <code><a href=\"api/index/function/bufferWhen\" class=\"code-anchor\">bufferWhen</a></code> operator's closing selector must emit a next notification to close the buffer. Complete notifications no longer close the buffer.</p>\n\n</li>\n</ul>\n<h3 id=\"combinelatest-1\" translation-result=\"on\">combineLatest(組合最新的)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#combinelatest-1\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"combinelatest-1\">combineLatest<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#combinelatest-1\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"concat-1\" translation-result=\"on\">concat(串聯)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#concat-1\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"concat-1\">concat<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#concat-1\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">仍然不推薦使用，請使用新的 <code><a href=\"api/index/function/concatWith\" class=\"code-anchor\">concatWith</a></code>。</p><p translation-origin=\"off\">Still deprecated, use the new <code><a href=\"api/index/function/concatWith\" class=\"code-anchor\">concatWith</a></code>.</p>\n\n</li>\n</ul>\n<h3 id=\"concatall\" translation-result=\"on\">concatAll(串聯所有)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#concatall\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"concatall\">concatAll<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#concatall\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"concatmapto\" translation-result=\"on\">concatMapTo(串聯對映為)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#concatmapto\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"concatmapto\">concatMapTo<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#concatmapto\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"count\" translation-result=\"on\">count(計數)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#count\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"count\">count<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#count\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">不能再將 <code>source</code> observable 作為第三個引數傳遞給謂詞。該功能很少使用，並且價值有限。解決方法是如果你需要在其中訪問它，請簡單地關閉函式內部的源。</p><p translation-origin=\"off\">No longer passes <code>source</code> observable as a third argument to the predicate. That feature was rarely used, and of limited value. The workaround is to simply close over the source inside of the function if you need to access it in there.</p>\n\n</li>\n</ul>\n<h3 id=\"debounce\" translation-result=\"on\">debounce(防抖)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#debounce\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"debounce\">debounce<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#debounce\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/debounce\" class=\"code-anchor\">debounce</a></code> 運算子的持續時間選擇器回傳的 observable 必須發出下一個通知以結束持續時間。complete 通知不再結束持續時間。</p><p translation-origin=\"off\">The observable returned by the <code><a href=\"api/index/function/debounce\" class=\"code-anchor\">debounce</a></code> operator's duration selector must emit a next notification to end the duration. Complete notifications no longer end the duration.</p>\n\n</li>\n</ul>\n<h3 id=\"debouncetime\" translation-result=\"on\">debounceTime(按時間防抖)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#debouncetime\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"debouncetime\">debounceTime<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#debouncetime\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/debounceTime\" class=\"code-anchor\">debounceTime</a></code> 的實現更高效，不再為每個收到的下一個通知安排一個操作。不過，因為現在的實現使用了排程器的時間概念，所以任何使用 Jasmine <code>clock</code> 的測試都需要確保 <a href=\"https://jasmine.github.io/api/edge/Clock.html#mockDate\"><code>jasmine.clock().mockDate()</code></a> 是在 <code>jasmine.clock().install()</code> 之後呼叫的 - 因為預設情況下 Jasmine 不會模擬 <code>Date.now()</code>。</p><p translation-origin=\"off\">The <code><a href=\"api/index/function/debounceTime\" class=\"code-anchor\">debounceTime</a></code> implementation is more efficient and no longer schedules an action for each received next notification. However, because the implementation now uses the scheduler's concept of time, any tests using Jasmine's <code>clock</code> will need to ensure that <a href=\"https://jasmine.github.io/api/edge/Clock.html#mockDate\"><code>jasmine.clock().mockDate()</code></a> is called after <code>jasmine.clock().install()</code> - because Jasmine does not mock <code>Date.now()</code> by default.</p>\n\n</li>\n</ul>\n<h3 id=\"defaultifempty\" translation-result=\"on\">defaultIfEmpty(如果為空則預設)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#defaultifempty\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"defaultifempty\">defaultIfEmpty<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#defaultifempty\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/defaultIfEmpty\" class=\"code-anchor\">defaultIfEmpty</a></code> 需要傳遞一個值。不會再無緣無故地將 <code>undefined</code> 轉換為 <code>null</code>。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/defaultIfEmpty\" class=\"code-anchor\">defaultIfEmpty</a></code> requires a value be passed. Will no longer convert <code>undefined</code> to <code>null</code> for no good reason.</p>\n\n</li>\n</ul>\n<h3 id=\"delaywhen\" translation-result=\"on\">delayWhen(當...時延遲)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#delaywhen\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"delaywhen\">delayWhen<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#delaywhen\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">如果持續時間選擇器只是在沒有值的情況下就完成了，則 <code><a href=\"api/index/function/delayWhen\" class=\"code-anchor\">delayWhen</a></code> 將不再發出。通知器必須通知一個值，而不是完成。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/delayWhen\" class=\"code-anchor\">delayWhen</a></code> will no longer emit if the duration selector simply completes without a value. Notifiers must notify with a value, not a completion.</p>\n\n</li>\n</ul>\n<h3 id=\"endwith\" translation-result=\"on\">endWith(以...結束)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#endwith\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"endwith\">endWith<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#endwith\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"expand\" translation-result=\"on\">expand(展開)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#expand\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"expand\">expand<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#expand\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"finalize\" translation-result=\"on\">finalize(最終處理)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#finalize\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"finalize\">finalize<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#finalize\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/finalize\" class=\"code-anchor\">finalize</a></code> 現在將在呼叫其回呼<em>之前</em>退訂其來源。這意味著 <code><a href=\"api/index/function/finalize\" class=\"code-anchor\">finalize</a></code> 回呼將按照它們在通道中出現的順序執行： <code>source.pipe(<a href=\"api/index/function/finalize\" class=\"code-anchor\">finalize</a>(() => console.log(1)), <a href=\"api/index/function/finalize\" class=\"code-anchor\">finalize</a>(() => console.log(2)))</code> 將記錄 <code>1</code> 然後 <code>2</code>。在以前的版本中，回呼是按相反的順序呼叫的。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/finalize\" class=\"code-anchor\">finalize</a></code> will now unsubscribe from its source <em>before</em> it calls its callback. That means that <code><a href=\"api/index/function/finalize\" class=\"code-anchor\">finalize</a></code> callbacks will run in the order in which they occur in the pipeline: <code>source.pipe(<a href=\"api/index/function/finalize\" class=\"code-anchor\">finalize</a>(() => console.log(1)), <a href=\"api/index/function/finalize\" class=\"code-anchor\">finalize</a>(() => console.log(2)))</code> will log <code>1</code> and then <code>2</code>. Previously, callbacks were called in the reverse order.</p>\n\n</li>\n</ul>\n<h3 id=\"map\" translation-result=\"on\">map(對映)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#map\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"map\">map<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#map\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>thisArg</code> 現在將預設為 <code>undefined</code>。<code>MapSubscriber</code> 以前的預設設定從來沒有任何意義。這隻會影響那些使用 <code>function</code> 呼叫 map，並像這樣引用 <code>this</code> 的程式碼： <code>source.pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(function () { console.log(this); }))</code>。這樣做沒有任何用處，因此預期的破壞將非常小。如果有的話，那就我們吸取了教訓，以後不會再洩露實現細節。</p><p translation-origin=\"off\"><code>thisArg</code> will now default to <code>undefined</code>. The previous default of <code>MapSubscriber</code> never made any sense. This will only affect code that calls map with a <code>function</code> and references <code>this</code> like so: <code>source.pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(function () { console.log(this); }))</code>. There wasn't anything useful about doing this, so the breakage is expected to be very minimal. If anything we're no longer leaking an implementation detail.</p>\n\n</li>\n</ul>\n<h3 id=\"merge-1\" translation-result=\"on\">merge(合併)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#merge-1\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"merge-1\">merge<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#merge-1\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">仍然不推薦使用，請使用新的 <code><a href=\"api/index/function/mergeWith\" class=\"code-anchor\">mergeWith</a></code>。</p><p translation-origin=\"off\">Still deprecated, use the new <code><a href=\"api/index/function/mergeWith\" class=\"code-anchor\">mergeWith</a></code>.</p>\n\n</li>\n</ul>\n<h3 id=\"mergeall\" translation-result=\"on\">mergeAll(合併所有)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#mergeall\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"mergeall\">mergeAll<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#mergeall\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"mergescan\" translation-result=\"on\">mergeScan(合併掃描)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#mergescan\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"mergescan\">mergeScan<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#mergescan\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> 在完成之後將不再發出其內部狀態。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/mergeScan\" class=\"code-anchor\">mergeScan</a></code> will no longer emit its inner state again upon completion.</p>\n\n</li>\n</ul>\n<h3 id=\"pluck\" translation-result=\"on\">pluck(抽取)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#pluck\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"pluck\">pluck<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#pluck\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"race-1\" translation-result=\"on\">race(競速)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#race-1\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"race-1\">race<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#race-1\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"reduce\" translation-result=\"on\">reduce(歸結)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#reduce\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"reduce\">reduce<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#reduce\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"sample\" translation-result=\"on\">sample(取樣)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#sample\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"sample\">sample<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#sample\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/sample\" class=\"code-anchor\">sample</a></code> 運算子的通知器 observable 必須發出 next 通知來影響取樣。complete 通知不再影響取樣。</p><p translation-origin=\"off\">The <code><a href=\"api/index/function/sample\" class=\"code-anchor\">sample</a></code> operator's notifier observable must emit a next notification to effect a sample. Complete notifications no longer effect a sample.</p>\n\n</li>\n</ul>\n<h3 id=\"scan\" translation-result=\"on\">scan(掃描)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#scan\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"scan\">scan<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#scan\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"single\" translation-result=\"on\">single(單值)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#single\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"single\">single<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#single\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">現在，<code><a href=\"api/index/function/single\" class=\"code-anchor\">single</a></code> 運算子將在傳入的值不存在或與提供的謂詞不對應的情況下丟擲錯誤。引發的錯誤型別也已更新，請檢視文件以瞭解更改。</p><p translation-origin=\"off\">The <code><a href=\"api/index/function/single\" class=\"code-anchor\">single</a></code> operator will now throw for scenarios where values coming in are either not present, or do not match the provided predicate. Error types have thrown have also been updated, please check documentation for changes.</p>\n\n</li>\n</ul>\n<h3 id=\"skiplast\" translation-result=\"on\">skipLast(跳過最後)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#skiplast\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"skiplast\">skipLast<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#skiplast\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">當傳遞一個負數時，<code><a href=\"api/index/function/skipLast\" class=\"code-anchor\">skipLast</a></code> 將不再出錯，而是簡單地回傳源，就好像傳遞了 <code>0</code>。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/skipLast\" class=\"code-anchor\">skipLast</a></code> will no longer error when passed a negative number, rather it will simply return the source, as though <code>0</code> was passed.</p>\n\n</li>\n</ul>\n<h3 id=\"startwith\" translation-result=\"on\">startWith(從...開始)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#startwith\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"startwith\">startWith<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#startwith\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"switchall\" translation-result=\"on\">switchAll(全部切換)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#switchall\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"switchall\">switchAll<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#switchall\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"switchmapto\" translation-result=\"on\">switchMapTo(切換對映為)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#switchmapto\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"switchmapto\">switchMapTo<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#switchmapto\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"take\" translation-result=\"on\">take(取出)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#take\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"take\">take<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#take\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/take\" class=\"code-anchor\">take</a></code> 並且現在將為負數或 NaN 的引數丟擲執行時錯誤，這包括像 <code><a href=\"api/index/function/take\" class=\"code-anchor\">take</a>()</code> 這樣的非 TS 呼叫。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/take\" class=\"code-anchor\">take</a></code> and will now throw runtime error for arguments that are negative or NaN, this includes non-TS calls like <code><a href=\"api/index/function/take\" class=\"code-anchor\">take</a>()</code>.</p>\n\n</li>\n</ul>\n<h3 id=\"takelast\" translation-result=\"on\">takeLast(取出最後)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#takelast\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"takelast\">takeLast<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#takelast\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/takeLast\" class=\"code-anchor\">takeLast</a></code> 現在有執行時斷言，會為無效引數丟擲 <code>TypeError</code>。不帶引數或使用 <code>NaN</code> 引數呼叫 takeLast 將丟擲 <code>TypeError</code>。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/takeLast\" class=\"code-anchor\">takeLast</a></code> now has runtime assertions that throw <code>TypeError</code>s for invalid arguments. Calling takeLast without arguments or with an argument that is <code>NaN</code> will throw a <code>TypeError</code>.</p>\n\n</li>\n</ul>\n<h3 id=\"throttle\" translation-result=\"on\">throttle(瓶頸)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#throttle\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"throttle\">throttle<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#throttle\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/throttle\" class=\"code-anchor\">throttle</a></code> 運算子的持續時間選擇器回傳的 observable 必須發出 next 通知以結束持續時間。complete 通知不再結束持續時間。</p><p translation-origin=\"off\">The observable returned by the <code><a href=\"api/index/function/throttle\" class=\"code-anchor\">throttle</a></code> operator's duration selector must emit a next notification to end the duration. Complete notifications no longer end the duration.</p>\n\n</li>\n</ul>\n<h3 id=\"throwerror-1\" translation-result=\"on\">throwError(丟擲錯誤)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#throwerror-1\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"throwerror-1\">throwError<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#throwerror-1\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">在某種極端用法下，<code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a></code> 不再能夠直接將函式作為錯誤發出。如果你需要將函式作為錯誤推送，則必須使用工廠函式來回傳函式，如下所示： <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => functionToEmit)</code>，換句話說 <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => () => console.log('called later'))</code>。</p><p translation-origin=\"off\">In an extreme corner case for usage, <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a></code> is no longer able to emit a function as an error directly. If you need to push a function as an error, you will have to use the factory function to return the function like so: <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => functionToEmit)</code>, in other words <code><a href=\"api/index/function/throwError\" class=\"code-anchor\">throwError</a>(() => () => console.log('called later'))</code>.</p>\n\n</li>\n</ul>\n<h3 id=\"window\" translation-result=\"on\">window(視窗)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#window\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"window\">window<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#window\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code>windowBoundaries</code> 這個 Observable 不會再完成此結果。它只是用來通知視窗邊界。要獲得與舊行為相同的行為，你需要新增一個 <code><a href=\"api/index/function/endWith\" class=\"code-anchor\">endWith</a></code> 和一個 <code><a href=\"api/index/function/skipLast\" class=\"code-anchor\">skipLast</a>(1)</code>，如下所示： <code>source$.pipe(<a href=\"api/index/function/window\" class=\"code-anchor\">window</a>(notifier$.pipe(<a href=\"api/index/function/endWith\" class=\"code-anchor\">endWith</a>(true))), <a href=\"api/index/function/skipLast\" class=\"code-anchor\">skipLast</a>(1))</code> .</p><p translation-origin=\"off\">The <code>windowBoundaries</code> observable no longer completes the result. It was only ever meant to notify of the window boundary. To get the same behavior as the old behavior, you would need to add an <code><a href=\"api/index/function/endWith\" class=\"code-anchor\">endWith</a></code> and a <code><a href=\"api/index/function/skipLast\" class=\"code-anchor\">skipLast</a>(1)</code> like so: <code>source$.pipe(<a href=\"api/index/function/window\" class=\"code-anchor\">window</a>(notifier$.pipe(<a href=\"api/index/function/endWith\" class=\"code-anchor\">endWith</a>(true))), <a href=\"api/index/function/skipLast\" class=\"code-anchor\">skipLast</a>(1))</code>.</p>\n\n</li>\n</ul>\n<h3 id=\"windowtoggle\" translation-result=\"on\">windowToggle(視窗切換)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#windowtoggle\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"windowtoggle\">windowToggle<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#windowtoggle\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/windowToggle\" class=\"code-anchor\">windowToggle</a></code> 運算子的關閉選擇器回傳的 observable 必須發出 next 通知來關閉視窗。complete 通知不再關閉視窗。</p><p translation-origin=\"off\">The observable returned by the <code><a href=\"api/index/function/windowToggle\" class=\"code-anchor\">windowToggle</a></code> operator's closing selector must emit a next notification to close the window. Complete notifications no longer close the window.</p>\n\n</li>\n</ul>\n<h3 id=\"withlatestfrom\" translation-result=\"on\">withLatestFrom(與來自...的最新值合成)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#withlatestfrom\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"withlatestfrom\">withLatestFrom<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#withlatestfrom\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n</ul>\n<h3 id=\"zip-1\" translation-result=\"on\">zip(拉合)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#zip-1\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"zip-1\">zip<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#zip-1\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">泛型簽名已更改。不再顯式傳遞泛型。</p><p translation-origin=\"off\">Generic signatures have changed. Do not explicitly pass generics.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">仍然不推薦使用，請使用新的 <code><a href=\"api/index/function/zipWith\" class=\"code-anchor\">zipWith</a></code>。</p><p translation-origin=\"off\">Still deprecated, use the new <code><a href=\"api/index/function/zipWith\" class=\"code-anchor\">zipWith</a></code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/index/function/zip\" class=\"code-anchor\">zip</a></code> 運算子將不再『根據需要』迭代所提供的可迭代物件，而是將可迭代物件視為推送流，就像它們在 RxJS 中的其它任何地方一樣。這意味著傳遞一個無限迭代將導致執行緒鎖定，因為它將無休止地嘗試從該迭代中讀取。這使我們與所有其它 Rx 實現保持一致。要解決此問題，最好使用 <code><a href=\"api/index/function/map\" class=\"code-anchor\">map</a></code> 或 <code><a href=\"api/index/function/map\" class=\"code-anchor\">map</a></code> 和 <code><a href=\"api/index/function/zip\" class=\"code-anchor\">zip</a></code> 的某種組合。例如，<code><a href=\"api/index/function/zip\" class=\"code-anchor\">zip</a>(source$, iterator)</code> 要改為 <code>source$.pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(value => [value, iterator.next().value]))</code>。</p><p translation-origin=\"off\"><code><a href=\"api/index/function/zip\" class=\"code-anchor\">zip</a></code> operators will no longer iterate provided iterables \"as needed\", instead the iterables will be treated as push-streams just like they would be everywhere else in RxJS. This means that passing an endless iterable will result in the thread locking up, as it will endlessly try to read from that iterable. This puts us in-line with all other Rx implementations. To work around this, it is probably best to use <code><a href=\"api/index/function/map\" class=\"code-anchor\">map</a></code> or some combination of <code><a href=\"api/index/function/map\" class=\"code-anchor\">map</a></code> and <code><a href=\"api/index/function/zip\" class=\"code-anchor\">zip</a></code>. For example, <code><a href=\"api/index/function/zip\" class=\"code-anchor\">zip</a>(source$, iterator)</code> could\nbe <code>source$.pipe(<a href=\"api/index/function/map\" class=\"code-anchor\">map</a>(value => [value, iterator.next().value]))</code>.</p>\n\n</li>\n</ul>\n<h2 id=\"new-features-1\" translation-result=\"on\">新屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#new-features-1\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"new-features-1\">New Features<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#new-features-1\"><i class=\"material-icons\">link</i></a></h2>\n\n<h3 id=\"connect\" translation-result=\"on\">connect(連線)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#connect\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"connect\">connect<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#connect\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">新運算子包含了使用 <code>selector</code> 的 <code><a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a></code> 變體的用例。其中選擇器允許使用者在連線到多播源 Observer 之前定義多播行為。</p><p translation-origin=\"off\">New operator to cover the use cases of <code><a href=\"api/index/function/publish\" class=\"code-anchor\">publish</a></code> variants that use a <code>selector</code>. Wherein the selector allows the user to define multicast behavior prior to connection to the source observable for the multicast.</p>\n\n</li>\n</ul>\n<h3 id=\"share\" translation-result=\"on\">share(共享)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#share\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"share\">share<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#share\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">新增了允許完整設定用於多播的 <code><a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a></code> 型別以及該主體何時重置的功能。</p><p translation-origin=\"off\">Added functionality to allow complete configuration of what type of <code><a href=\"api/index/class/Subject\" class=\"code-anchor\">Subject</a></code> is used to multicast, and when that subject is reset.</p>\n\n</li>\n</ul>\n<h3 id=\"timeout\" translation-result=\"on\">timeout(超時)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#timeout\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"timeout\">timeout<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#timeout\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">為 <code><a href=\"api/index/function/timeout\" class=\"code-anchor\">timeout</a></code> 新增了更多設定選項，因此它可以用於僅當第一個項目沒能及時抵達時才超時，或者它可以用作各個項目之間的超時。使用者還可以傳遞一個 <code>Date</code> 物件來定義第一次抵達超時的絕對時間。將附加訊息新增到超時錯誤中，並能夠將元資料與超時一起傳遞以進行識別。</p><p translation-origin=\"off\">Added more configuration options to <code><a href=\"api/index/function/timeout\" class=\"code-anchor\">timeout</a></code>, so it could be used to timeout just if the first item doesn't arrive quickly enough, or it could be used as a timeout between each item. Users may also pass a <code>Date</code> object to define an absolute time for a timeout for the first time to arrive. Adds additional information to the timeout error, and the ability to pass along metadata with the timeout for identification purposes.</p>\n\n</li>\n</ul>\n<h3 id=\"zipwith-concatwith-mergewith-racewith\">zipWith, concatWith, mergeWith, raceWith<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#zipwith-concatwith-mergewith-racewith\"><i class=\"material-icons\">link</i></a></h3>\n<ul>\n<li>\n<p translation-result=\"on\">簡單地重新命名了運算子 <code><a href=\"api/index/function/zip\" class=\"code-anchor\">zip</a></code>、<code><a href=\"api/index/function/concat\" class=\"code-anchor\">concat</a></code>、<code><a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a></code> 和 <code><a href=\"api/index/function/race\" class=\"code-anchor\">race</a></code> 的版本。所以我們可以棄用那些舊名稱並使用新名稱而不會發生衝突。</p><p translation-origin=\"off\">Simply renamed versions of the operators <code><a href=\"api/index/function/zip\" class=\"code-anchor\">zip</a></code>, <code><a href=\"api/index/function/concat\" class=\"code-anchor\">concat</a></code>, <code><a href=\"api/index/function/merge\" class=\"code-anchor\">merge</a></code>, and <code><a href=\"api/index/function/race\" class=\"code-anchor\">race</a></code>. So we can deprecate those old names and use the new names without collisions.</p>\n\n</li>\n</ul>\n<h1 id=\"module-rxjsajax\" translation-result=\"on\">模組 <code>rxjs/ajax</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#module-rxjsajax\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"module-rxjsajax\">module <code>rxjs/ajax</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#module-rxjsajax\"><i class=\"material-icons\">link</i></a></h1>\n\n<h2 id=\"breaking-changes-2\" translation-result=\"on\">重大變化<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#breaking-changes-2\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"breaking-changes-2\">Breaking Changes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#breaking-changes-2\"><i class=\"material-icons\">link</i></a></h2>\n\n<h3 id=\"ajax\">ajax<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#ajax\"><i class=\"material-icons\">link</i></a></h3>\n<ul>\n<li>\n<p translation-result=\"on\"><code>ajax</code> 正文的序列化現在將在所有情況下使用預設的 XHR 行為。如果主體是 <code>Blob</code>、<code>ArrayBuffer</code>、任何陣列緩衝區檢視（如位元組序列，例如 <code>Uint8Array</code> 等）、<code>FormData</code>、<code>URLSearchParams</code>、<code>string</code> 或 <code>ReadableStream</code>，則使用預設處理。如果 <code>body</code> 是 <code>typeof</code> <code>\"object\"</code> 的，那麼它將透過 <code>JSON.stringify</code> 轉換為 JSON，並且 <code>Content-Type</code> 標頭將設定為 <code>application/json;charset=utf-8</code>。所有其它型別都會發出錯誤。</p><p translation-origin=\"off\"><code>ajax</code> body serialization will now use default XHR behavior in all cases. If the body is a <code>Blob</code>, <code>ArrayBuffer</code>, any array buffer view (like a byte sequence, e.g. <code>Uint8Array</code>, etc), <code>FormData</code>, <code>URLSearchParams</code>, <code>string</code>, or <code>ReadableStream</code>, default handling is use. If the <code>body</code> is otherwise <code>typeof</code> <code>\"object\"</code>, then it will be converted to JSON via <code>JSON.stringify</code>, and the <code>Content-Type</code> header will be set to <code>application/json;charset=utf-8</code>. All other types will emit an error.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">傳遞給 <code>ajax</code> 設定的 <code>Content-Type</code> 標頭不再對 AJAX 請求的序列化行為產生任何影響。</p><p translation-origin=\"off\">The <code>Content-Type</code> header passed to <code>ajax</code> configuration no longer has any effect on the serialization behavior of the AJAX request.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">對於 TypeScript 使用者，<code><a href=\"api/ajax/AjaxRequest\" class=\"code-anchor\">AjaxRequest</a></code> 不能再作為顯式建立 <code>ajax</code> 的型別。現在要改用 <code><a href=\"api/ajax/AjaxConfig\" class=\"code-anchor\">AjaxConfig</a></code>，雖然這兩種型別是相容的，但只有 <code><a href=\"api/ajax/AjaxConfig\" class=\"code-anchor\">AjaxConfig</a></code> 有 <code>progressSubscriber</code> 和 <code>createXHR</code>。</p><p translation-origin=\"off\">For TypeScript users, <code><a href=\"api/ajax/AjaxRequest\" class=\"code-anchor\">AjaxRequest</a></code> is no longer the type that should be explicitly used to create an <code>ajax</code>. It is now <code><a href=\"api/ajax/AjaxConfig\" class=\"code-anchor\">AjaxConfig</a></code>, although the two types are compatible, only <code><a href=\"api/ajax/AjaxConfig\" class=\"code-anchor\">AjaxConfig</a></code> has <code>progressSubscriber</code> and <code>createXHR</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">Ajax 實現放棄了對 IE10 及更低版本的支援。這使我們與其它實現保持一致，並有助於清理該區域的程式碼</p><p translation-origin=\"off\">Ajax implementation drops support for IE10 and lower. This puts us in-line with other implementations and helps clean up code in this area</p>\n\n</li>\n</ul>\n<h3 id=\"ajaxrequest\" translation-result=\"on\">AjaxRequest(Ajax 請求)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#ajaxrequest\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"ajaxrequest\">AjaxRequest<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#ajaxrequest\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/ajax/AjaxRequest\" class=\"code-anchor\">AjaxRequest</a></code> 不再用做呼叫 <code>ajax</code> 的設定引數。新型別是 <code><a href=\"api/ajax/AjaxConfig\" class=\"code-anchor\">AjaxConfig</a></code>。這樣做是為了消除具有不同用例的兩種非常相似的型別。<code><a href=\"api/ajax/AjaxRequest\" class=\"code-anchor\">AjaxRequest</a></code> 仍然存在，但屬性已更改，它用於顯示作為事件回應的一部分而傳送的最終請求訊息。</p><p translation-origin=\"off\"><code><a href=\"api/ajax/AjaxRequest\" class=\"code-anchor\">AjaxRequest</a></code> is no longer used to type the configuration argument for calls to <code>ajax</code>. The new type is <code><a href=\"api/ajax/AjaxConfig\" class=\"code-anchor\">AjaxConfig</a></code>. This was done to disambiguate two very similar types with different use cases. <code><a href=\"api/ajax/AjaxRequest\" class=\"code-anchor\">AjaxRequest</a></code> is still there, but properties have changed, and it is used to show what final request information was send as part of an event response.</p>\n\n</li>\n</ul>\n<h2 id=\"new-features-2\" translation-result=\"on\">新屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#new-features-2\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"new-features-2\">New Features<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#new-features-2\"><i class=\"material-icons\">link</i></a></h2>\n\n<h3 id=\"ajaxresponse\" translation-result=\"on\">AjaxResponse(Ajax 回應)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#ajaxresponse\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"ajaxresponse\">AjaxResponse<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#ajaxresponse\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">現在包括 <code>responseHeaders</code>。</p><p translation-origin=\"off\">Now includes <code>responseHeaders</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">現在包括用於檢查上傳和下載進度的事件 <code>type</code> 和 <code>total</code>（請參閱 <code>includeUploadProgress</code> 和 <code>includeDownloadProgress</code>）。</p><p translation-origin=\"off\">Now includes event <code>type</code> and <code>total</code> numbers for examining upload and download progress (see <code>includeUploadProgress</code> and <code>includeDownloadProgress</code>).</p>\n\n</li>\n</ul>\n<h3 id=\"includeuploadprogress\" translation-result=\"on\">includeUploadProgress(包括上傳進度)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#includeuploadprogress\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"includeuploadprogress\">includeUploadProgress<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#includeuploadprogress\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">發出請求的標誌，該請求將在回傳的 observable 中包含流式上傳進度事件。</p><p translation-origin=\"off\">A flag to make a request that will include streaming upload progress events in the returned observable.</p>\n\n</li>\n</ul>\n<h3 id=\"includedownloadprogress\" translation-result=\"on\">includeDownloadProgress(包括下載進度)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#includedownloadprogress\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"includedownloadprogress\">includeDownloadProgress<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#includedownloadprogress\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">發出請求的標誌，該請求將在回傳的 observable 中包含流式下載進度事件。</p><p translation-origin=\"off\">A flag to make a request that will include streaming upload progress events in the returned observable.</p>\n\n</li>\n</ul>\n<h3 id=\"queryparams\" translation-result=\"on\">queryParams(查詢引數)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#queryparams\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"queryparams\">queryParams<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#queryparams\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">用於在要發出請求的 URL 中如何設定查詢引數的設定。</p><p translation-origin=\"off\">Configuration for setting query parameters in the URL of the request to be made.</p>\n\n</li>\n</ul>\n<h3 id=\"xsrf-csrf-additions\" translation-result=\"on\">XSRF (CSRF) 補充：<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#xsrf-csrf-additions\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"xsrf-csrf-additions\">XSRF (CSRF) additions:<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#xsrf-csrf-additions\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">新增了 <code>xsrfCookieName</code> 和 <code>xsrfHeaderName</code> 以實現 CSRF 防護功能。</p><p translation-origin=\"off\"><code>xsrfCookieName</code> and <code>xsrfHeaderName</code> were added for cross-site request forgery prevention capabilities.</p>\n\n</li>\n</ul>\n<h1 id=\"module-rxjsfetch\" translation-result=\"on\">模組 <code>rxjs/fetch</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#module-rxjsfetch\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"module-rxjsfetch\">module <code>rxjs/fetch</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#module-rxjsfetch\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">沒有變化。</p><p translation-origin=\"off\">No changes.</p>\n\n<h1 id=\"module-rxjstesting\" translation-result=\"on\">模組 <code>rxjs/testing</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#module-rxjstesting\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"module-rxjstesting\">module <code>rxjs/testing</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#module-rxjstesting\"><i class=\"material-icons\">link</i></a></h1>\n\n<h2 id=\"new-features-3\" translation-result=\"on\">新屬性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#new-features-3\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"new-features-3\">New Features<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#new-features-3\"><i class=\"material-icons\">link</i></a></h2>\n\n<h3 id=\"testscheduler-expectobservabletoequal\">TestScheduler expectObservable().toEqual()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"6-to-7-change-summary#testscheduler-expectobservabletoequal\"><i class=\"material-icons\">link</i></a></h3>\n<ul>\n<li>\n<p translation-result=\"on\">一種比較 Observable 的相等性的新方法。如果所有發出的值都一樣，並且同時發生，那麼它們就是相等的。這主要用於重構運算子鏈並確保它們是等價的。</p><p translation-origin=\"off\">A new means of comparing the equality of to observables. If all emissions are the same, and at the same time, then they are equal. This is primarily useful for refactoring operator chains and making sure that they are equivalent.</p>\n\n</li>\n</ul>\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - /deprecations/to-promise\n - 6-to-7-change-summary#ajax\n - 6-to-7-change-summary#ajaxrequest\n - 6-to-7-change-summary#ajaxresponse\n - 6-to-7-change-summary#animationframes\n - 6-to-7-change-summary#asynciterable\n - 6-to-7-change-summary#asyncsubject\n - 6-to-7-change-summary#audit\n - 6-to-7-change-summary#audittime\n - 6-to-7-change-summary#behaviorsubject\n - 6-to-7-change-summary#bindcallback\n - 6-to-7-change-summary#breaking-changes\n - 6-to-7-change-summary#breaking-changes-1\n - 6-to-7-change-summary#breaking-changes-2\n - 6-to-7-change-summary#buffer\n - 6-to-7-change-summary#buffertoggle\n - 6-to-7-change-summary#bufferwhen\n - 6-to-7-change-summary#combinelatest\n - 6-to-7-change-summary#combinelatest-1\n - 6-to-7-change-summary#concat\n - 6-to-7-change-summary#concat-1\n - 6-to-7-change-summary#concatall\n - 6-to-7-change-summary#concatmapto\n - 6-to-7-change-summary#config\n - 6-to-7-change-summary#connect\n - 6-to-7-change-summary#connectable\n - 6-to-7-change-summary#connectableobservable\n - 6-to-7-change-summary#count\n - 6-to-7-change-summary#debounce\n - 6-to-7-change-summary#debouncetime\n - 6-to-7-change-summary#defaultifempty\n - 6-to-7-change-summary#defer\n - 6-to-7-change-summary#delaywhen\n - 6-to-7-change-summary#endwith\n - 6-to-7-change-summary#expand\n - 6-to-7-change-summary#finalize\n - 6-to-7-change-summary#firstvaluefrom\n - 6-to-7-change-summary#forkjoin\n - 6-to-7-change-summary#fromevent\n - 6-to-7-change-summary#groupedobservable\n - 6-to-7-change-summary#iif\n - 6-to-7-change-summary#includedownloadprogress\n - 6-to-7-change-summary#includeuploadprogress\n - 6-to-7-change-summary#isobservable\n - 6-to-7-change-summary#lastvaluefrom\n - 6-to-7-change-summary#map\n - 6-to-7-change-summary#merge\n - 6-to-7-change-summary#merge-1\n - 6-to-7-change-summary#mergeall\n - 6-to-7-change-summary#mergescan\n - 6-to-7-change-summary#module-rxjs\n - 6-to-7-change-summary#module-rxjsajax\n - 6-to-7-change-summary#module-rxjsfetch\n - 6-to-7-change-summary#module-rxjsoperators\n - 6-to-7-change-summary#module-rxjstesting\n - 6-to-7-change-summary#new-features\n - 6-to-7-change-summary#new-features-1\n - 6-to-7-change-summary#new-features-2\n - 6-to-7-change-summary#new-features-3\n - 6-to-7-change-summary#notification\n - 6-to-7-change-summary#observable\n - 6-to-7-change-summary#observable-observable\n - 6-to-7-change-summary#observableinput\n - 6-to-7-change-summary#of\n - 6-to-7-change-summary#onerrorresumenext\n - 6-to-7-change-summary#onstoppednotification\n - 6-to-7-change-summary#onunhandlederror\n - 6-to-7-change-summary#pairs\n - 6-to-7-change-summary#partition\n - 6-to-7-change-summary#pipe\n - 6-to-7-change-summary#pluck\n - 6-to-7-change-summary#queryparams\n - 6-to-7-change-summary#race\n - 6-to-7-change-summary#race-1\n - 6-to-7-change-summary#readablestream\n - 6-to-7-change-summary#reduce\n - 6-to-7-change-summary#replaysubject\n - 6-to-7-change-summary#replaysubject-1\n - 6-to-7-change-summary#rxjs-6x-to-7x-detailed-change-list\n - 6-to-7-change-summary#sample\n - 6-to-7-change-summary#scan\n - 6-to-7-change-summary#share\n - 6-to-7-change-summary#single\n - 6-to-7-change-summary#skiplast\n - 6-to-7-change-summary#startwith\n - 6-to-7-change-summary#subscribable\n - 6-to-7-change-summary#subscribableorpromise\n - 6-to-7-change-summary#subscriber\n - 6-to-7-change-summary#subscription\n - 6-to-7-change-summary#subscription-1\n - 6-to-7-change-summary#switchall\n - 6-to-7-change-summary#switchmapto\n - 6-to-7-change-summary#take\n - 6-to-7-change-summary#takelast\n - 6-to-7-change-summary#testscheduler-expectobservabletoequal\n - 6-to-7-change-summary#throttle\n - 6-to-7-change-summary#throwerror\n - 6-to-7-change-summary#throwerror-1\n - 6-to-7-change-summary#timeout\n - 6-to-7-change-summary#usedeprecatednextcontext\n - 6-to-7-change-summary#virtualaction\n - 6-to-7-change-summary#window\n - 6-to-7-change-summary#windowtoggle\n - 6-to-7-change-summary#withlatestfrom\n - 6-to-7-change-summary#xsrf-csrf-additions\n - 6-to-7-change-summary#zip\n - 6-to-7-change-summary#zip-1\n - 6-to-7-change-summary#zipwith-concatwith-mergewith-racewith\n - api/ajax/AjaxConfig\n - api/ajax/AjaxRequest\n - api/index/class/ConnectableObservable\n - api/index/class/Notification\n - api/index/class/Observable\n - api/index/class/ReplaySubject\n - api/index/class/Subject\n - api/index/class/Subscriber\n - api/index/class/Subscription\n - api/index/const/EMPTY\n - api/index/function/audit\n - api/index/function/auditTime\n - api/index/function/buffer\n - api/index/function/bufferToggle\n - api/index/function/bufferWhen\n - api/index/function/concat\n - api/index/function/concatWith\n - api/index/function/connectable\n - api/index/function/debounce\n - api/index/function/debounceTime\n - api/index/function/defaultIfEmpty\n - api/index/function/defer\n - api/index/function/delayWhen\n - api/index/function/endWith\n - api/index/function/finalize\n - api/index/function/from\n - api/index/function/fromEvent\n - api/index/function/ignoreElements\n - api/index/function/iif\n - api/index/function/map\n - api/index/function/merge\n - api/index/function/mergeScan\n - api/index/function/mergeWith\n - api/index/function/multicast\n - api/index/function/of\n - api/index/function/pairs\n - api/index/function/pipe\n - api/index/function/publish\n - api/index/function/race\n - api/index/function/sample\n - api/index/function/single\n - api/index/function/skipLast\n - api/index/function/take\n - api/index/function/takeLast\n - api/index/function/takeUntil\n - api/index/function/throttle\n - api/index/function/throwError\n - api/index/function/timeout\n - api/index/function/window\n - api/index/function/windowToggle\n - api/index/function/zip\n - api/index/function/zipWith\n - api/index/interface/EmptyError\n - api/index/interface/Observer\n - api/index/interface/Subscribable\n - api/index/type-alias/ObservableInput\n - https://github.com/ReactiveX/rxjs/pull/5696\n - https://jasmine.github.io/api/edge/Clock.html#mockDate\n - https://stackoverflow.com/a/54957061\n-->"
}