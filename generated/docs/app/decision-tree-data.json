{"1114":{"id":"1114","label":"我要启动一个新的 Observable","options":["34aa"]},"1528":{"id":"1528","label":"基于某种标准，并且输出两个 Observable：那些符合此标准的，和不符合此标准的","options":["abca"]},"1589":{"id":"1589","label":"从此 Observable 的尾部","options":["502c"]},"2356":{"id":"2356","label":"timer","path":"api/index/function/timer","docType":"function"},"2443":{"id":"2443","label":"从一个现有的事件源","options":["811e","244b"]},"2544":{"id":"2544","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["7e77"]},"2687":{"id":"2687","label":"我要输出根据源 Observer 发送的值计算出来的某个值","options":["def1","2a73","062e"]},"3102":{"id":"3102","label":"bufferToggle","path":"api/operators/bufferToggle","docType":"function"},"3263":{"id":"3263","label":"并且即使当前的嵌套 Observable 尚未完结，也要忽略进来的值","options":["4cb1"]},"4442":{"id":"4442","label":"当发生错误时","options":["86f8","230a"]},"4452":{"id":"4452","label":"skip","path":"api/operators/skip","docType":"function"},"4813":{"id":"4813","label":"distinctUntilChanged","path":"api/operators/distinctUntilChanged","docType":"function"},"4926":{"id":"4926","label":"每个来源中的每个值仅使用一次","options":["5aa0"]},"5564":{"id":"5564","label":"如果它们位于此 Observable 的首部","options":["d61a","6653","6083"]},"6033":{"id":"6033","label":"count","path":"api/operators/count","docType":"function"},"6083":{"id":"6083","label":"基于自定义逻辑","options":["ba94"]},"6360":{"id":"6360","label":"publishLast"},"6552":{"id":"6552","label":"我已经有了由某些 Observable 组合成的单一 Observable，并且","options":["b322","c1e8","00db","7682","bda2"]},"6653":{"id":"6653","label":"基于给定的数量","options":["9b8c"]},"6758":{"id":"6758","label":"NEVER","path":"api/index/const/NEVER","docType":"const"},"7027":{"id":"7027","label":"mergeMapTo","path":"api/operators/mergeMapTo","docType":"function"},"7305":{"id":"7305","label":"次元数据包含从最后一次发送值开始已过去时间","options":["4c2f"]},"7438":{"id":"7438","label":"switchMapTo","path":"api/operators/switchMapTo","docType":"function"},"7631":{"id":"7631","label":"基于某个按需创建的 Observable 的发送情况","options":["fe8c","7d8e"]},"7682":{"id":"7682","label":"我要输出根据源 Observer 发送的值计算出来的某个值","options":["00eb","4926"]},"7912":{"id":"7912","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["94fe"]},"8047":{"id":"8047","label":"fromEvent","path":"api/index/function/fromEvent","docType":"function"},"8074":{"id":"8074","label":"一个常量值","options":["2e6c"]},"8160":{"id":"8160","label":"mergeScan","path":"api/operators/mergeScan","docType":"function"},"8247":{"id":"8247","label":"发送每个时间窗口中的最后一个值","options":["9dd9","1a6c"]},"8652":{"id":"8652","label":"window","path":"api/operators/window","docType":"function"},"8671":{"id":"8671","label":"基于根据已发送的值计算出的一个键","options":["927e"]},"9257":{"id":"9257","label":"defer","path":"api/index/function/defer","docType":"function"},"9346":{"id":"9346","label":"expand","path":"api/operators/expand","docType":"function"},"9462":{"id":"9462","label":"subscribeOn","path":"api/operators/subscribeOn","docType":"function"},"9544":{"id":"9544","label":"bufferWhen","path":"api/operators/bufferWhen","docType":"function"},"2e6c":{"id":"2e6c","label":"mapTo","path":"api/operators/mapTo","docType":"function"},"207b":{"id":"207b","label":"map","path":"api/operators/map","docType":"function"},"2a37":{"id":"2a37","label":"一个通过公式算出来的值","options":["207b"]},"0ef4":{"id":"0ef4","label":"我要把它发送的每个值改成","options":["8074","2a37"]},"309b":{"id":"309b","label":"pluck"},"2fcb":{"id":"2fcb","label":"我要从它发送的每个值中取出一个属性","options":["309b"]},"a6cb":{"id":"a6cb","label":"tap","path":"api/operators/tap","docType":"function"},"c18d":{"id":"c18d","label":"我要监听即将发送的值，但不想影响它们","options":["a6cb"]},"8dd9":{"id":"8dd9","label":"filter","path":"api/operators/filter","docType":"function"},"20a7":{"id":"20a7","label":"基于自定义逻辑","options":["8dd9"]},"29dc":{"id":"29dc","label":"first","path":"api/operators/first","docType":"function"},"d61a":{"id":"d61a","label":"并且只要第一个值","options":["29dc"]},"9b8c":{"id":"9b8c","label":"take","path":"api/operators/take","docType":"function"},"ba94":{"id":"ba94","label":"takeWhile","path":"api/operators/takeWhile","docType":"function"},"2cc2":{"id":"2cc2","label":"elementAt","path":"api/operators/elementAt","docType":"function"},"a532":{"id":"a532","label":"如果它们精确的处于第 n 位","options":["2cc2"]},"34dd":{"id":"34dd","label":"last","path":"api/operators/last","docType":"function"},"d25e":{"id":"d25e","label":"并且只要最后一个值","options":["34dd"]},"16fc":{"id":"16fc","label":"takeLast","path":"api/operators/takeLast","docType":"function"},"66f9":{"id":"66f9","label":"基于给定的数量","options":["16fc"]},"f532":{"id":"f532","label":"如果它们位于此 Observable 的尾部","options":["d25e","66f9"]},"c808":{"id":"c808","label":"takeUntil","path":"api/operators/takeUntil","docType":"function"},"0800":{"id":"0800","label":"直到另一个 Observable 发送了值","options":["c808"]},"e0b4":{"id":"e0b4","label":"我要只允许部分值通过","options":["20a7","5564","a532","f532","0800"]},"61cf":{"id":"61cf","label":"ignoreElements","path":"api/operators/ignoreElements","docType":"function"},"f0a1":{"id":"f0a1","label":"全部","options":["61cf"]},"60c1":{"id":"60c1","label":"基于给定的数量","options":["4452"]},"26f4":{"id":"26f4","label":"skipWhile","path":"api/operators/skipWhile","docType":"function"},"deef":{"id":"deef","label":"基于自定义逻辑","options":["26f4"]},"d354":{"id":"d354","label":"从此 Observable 的首部","options":["60c1","deef"]},"502c":{"id":"502c","label":"skipLast","path":"api/operators/skipLast","docType":"function"},"2fb2":{"id":"2fb2","label":"skipUntil","path":"api/operators/skipUntil","docType":"function"},"8d6f":{"id":"8d6f","label":"直到另一个 Observable 发送了值","options":["2fb2"]},"0c11":{"id":"0c11","label":"发送恰好在当前值前面的那个","options":["4813"]},"3df9":{"id":"3df9","label":"distinct","path":"api/operators/distinct","docType":"function"},"b6a5":{"id":"b6a5","label":"以前任何时候曾发送过","options":["3df9"]},"612a":{"id":"612a","label":"根据值是否相等","options":["0c11","b6a5"]},"b3fa":{"id":"b3fa","label":"distinctUntilKeyChanged","path":"api/operators/distinctUntilKeyChanged","docType":"function"},"f026":{"id":"f026","label":"发送恰好在当前值前面的那个","options":["b3fa"]},"f2d0":{"id":"f2d0","label":"根据一个某个键或对象属性","options":["f026"]},"c313":{"id":"c313","label":"与某些以前发送的值匹配","options":["612a","f2d0"]},"44ad":{"id":"44ad","label":"throttle","path":"api/operators/throttle","docType":"function"},"9c19":{"id":"9c19","label":"这个时间窗口是基于另一个 Observable 的发送情况","options":["44ad"]},"5ff8":{"id":"5ff8","label":"throttleTime","path":"api/operators/throttleTime","docType":"function"},"ba63":{"id":"ba63","label":"这个时间窗口是根据某个时长来决定的","options":["5ff8"]},"0d23":{"id":"0d23","label":"发送每个时间窗口中的第一个值","options":["9c19","ba63"]},"56e4":{"id":"56e4","label":"audit","path":"api/operators/audit","docType":"function"},"9dd9":{"id":"9dd9","label":"这个时间窗口是基于另一个 Observable 的发送情况","options":["56e4"]},"dfbe":{"id":"dfbe","label":"auditTime","path":"api/operators/auditTime","docType":"function"},"1a6c":{"id":"1a6c","label":"这个时间窗口是根据某个时长来决定的","options":["dfbe"]},"6d74":{"id":"6d74","label":"debounce","path":"api/operators/debounce","docType":"function"},"e204":{"id":"e204","label":"此平静的间隔阈值由另一个 Observable 决定","options":["6d74"]},"cb2d":{"id":"cb2d","label":"debounceTime","path":"api/operators/debounceTime","docType":"function"},"3d5b":{"id":"3d5b","label":"此平静的间隔阈值是根据某个时长决定的","options":["cb2d"]},"b0da":{"id":"b0da","label":"等足够平静时就发送最后一个值","options":["e204","3d5b"]},"f323":{"id":"f323","label":"发生的过于频繁","options":["0d23","8247","b0da"]},"30ac":{"id":"30ac","label":"我要忽略某些值","options":["f0a1","d354","1589","8d6f","c313","f323"]},"a54f":{"id":"a54f","label":"reduce","path":"api/operators/reduce","docType":"function"},"690e":{"id":"690e","label":"并且只输出最终计算出的值","options":["a54f"]},"0c55":{"id":"0c55","label":"scan","path":"api/operators/scan","docType":"function"},"6f7c":{"id":"6f7c","label":"并且每当来源发送某个值时就输出计算好的值","options":["0c55"]},"556a":{"id":"556a","label":"并且当来源发送某个值时，就把计算好的值输出为一个嵌套 Observable","options":["8160"]},"5a43":{"id":"5a43","label":"switchScan","path":"api/operators/switchScan","docType":"function"},"8d57":{"id":"8d57","label":"并且每当来源发送某个值时，就把计算好的值输出为一个嵌套 Observable，同时取消对前一个嵌套 Observable 的订阅","options":["5a43"]},"b369":{"id":"b369","label":"我要使用已发送的所有值做某种计算","options":["690e","6f7c","556a","8d57"]},"de53":{"id":"de53","label":"materialize","path":"api/operators/materialize","docType":"function"},"c1ef":{"id":"c1ef","label":"此元数据描述每个通知（next、error 或 complete）","options":["de53"]},"4c2f":{"id":"4c2f","label":"timeInterval","path":"api/operators/timeInterval","docType":"function"},"2bb3":{"id":"2bb3","label":"我要用元数据包装它的各个消息","options":["c1ef","7305"]},"dd9b":{"id":"dd9b","label":"timeout","path":"api/operators/timeout","docType":"function"},"78cc":{"id":"78cc","label":"我要抛出一个错误","options":["dd9b"]},"3fea":{"id":"3fea","label":"timeoutWith","path":"api/operators/timeoutWith","docType":"function"},"2cf2":{"id":"2cf2","label":"我要切换到另一个 Observable","options":["3fea"]},"b2c3":{"id":"b2c3","label":"在某个非交互式间隔之后","options":["78cc","2cf2"]},"e0ea":{"id":"e0ea","label":"single","path":"api/operators/single","docType":"function"},"cd14":{"id":"cd14","label":"我要确保只有一个值","options":["e0ea"]},"1df4":{"id":"1df4","label":"我要知道它发送了多少个值","options":["6033"]},"fb90":{"id":"fb90","label":"startWith"},"791a":{"id":"791a","label":"我要在开头放一个值","options":["fb90"]},"0eca":{"id":"0eca","label":"delay","path":"api/operators/delay","docType":"function"},"f8e0":{"id":"f8e0","label":"基于给定的时间","options":["0eca"]},"5def":{"id":"5def","label":"delayWhen","path":"api/operators/delayWhen","docType":"function"},"5af2":{"id":"5af2","label":"基于另一个 Observable 的发送情况","options":["5def"]},"f022":{"id":"f022","label":"我要延迟后再发送","options":["f8e0","5af2"]},"b707":{"id":"b707","label":"toArray","path":"api/operators/toArray","docType":"function"},"a0ef":{"id":"a0ef","label":"并转换为数组","options":["b707"]},"874e":{"id":"874e","label":"Observable","path":"api/index/class/Observable","docType":"class","method":"toPromise"},"b95a":{"id":"b95a","label":"并且转换为 Promise","options":["874e"]},"1ec2":{"id":"1ec2","label":"直到此 Observable 完成","options":["a0ef","b95a"]},"a6d4":{"id":"a6d4","label":"pairwise","path":"api/operators/pairwise","docType":"function"},"9cf2":{"id":"9cf2","label":"连续配对，作为数组","options":["a6d4"]},"abca":{"id":"abca","label":"partition","path":"api/index/function/partition","docType":"function"},"822f":{"id":"822f","label":"bufferCount","path":"api/operators/bufferCount","docType":"function"},"1c4d":{"id":"1c4d","label":"并且把分好的组以数组形式发送","options":["822f"]},"ca64":{"id":"ca64","label":"windowCount","path":"api/operators/windowCount","docType":"function"},"375c":{"id":"375c","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["ca64"]},"63cd":{"id":"63cd","label":"根据特定大小的批次","options":["1c4d","375c"]},"325c":{"id":"325c","label":"bufferTime","path":"api/operators/bufferTime","docType":"function"},"92d6":{"id":"92d6","label":"并且把分好的组以数组的形式发送","options":["325c"]},"7e77":{"id":"7e77","label":"windowTime","path":"api/operators/windowTime","docType":"function"},"b231":{"id":"b231","label":"基于时间","options":["92d6","2544"]},"98c9":{"id":"98c9","label":"buffer","path":"api/operators/buffer","docType":"function"},"89d2":{"id":"89d2","label":"并且把分好的组以数组的形式发送","options":["98c9"]},"8d3d":{"id":"8d3d","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["8652"]},"5b4d":{"id":"5b4d","label":"直到另一个 Observable 发送了值","options":["89d2","8d3d"]},"fe8c":{"id":"fe8c","label":"并且把分好的组以数组的形式发送","options":["9544"]},"1b09":{"id":"1b09","label":"windowWhen","path":"api/operators/windowWhen","docType":"function"},"7d8e":{"id":"7d8e","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["1b09"]},"d17f":{"id":"d17f","label":"并且把分好的组以数组的形式发送","options":["3102"]},"94fe":{"id":"94fe","label":"windowToggle","path":"api/operators/windowToggle","docType":"function"},"d4fd":{"id":"d4fd","label":"基于另一个 Observable 开始一组，并基于第三个 Observable 结束这一组","options":["d17f","7912"]},"927e":{"id":"927e","label":"groupBy","path":"api/operators/groupBy","docType":"function"},"9bcb":{"id":"9bcb","label":"我要对这些值进行分组","options":["1ec2","9cf2","1528","63cd","b231","5b4d","7631","d4fd","8671"]},"b724":{"id":"b724","label":"这里的嵌套 Observable 对每个值都是一样的","options":["7027"]},"fcc3":{"id":"fcc3","label":"mergeMap","path":"api/operators/mergeMap","docType":"function"},"57cb":{"id":"57cb","label":"这里的嵌套 Observable 是根据每个值现计算的","options":["fcc3"]},"32f8":{"id":"32f8","label":"并且并行发送全部嵌套 Observable 所发送的值","options":["b724","57cb"]},"85d6":{"id":"85d6","label":"concatMapTo","path":"api/operators/concatMapTo","docType":"function"},"48e1":{"id":"48e1","label":"这里的嵌套 Observable 对每个值都是一样的","options":["85d6"]},"6d17":{"id":"6d17","label":"concatMap","path":"api/operators/concatMap","docType":"function"},"cd12":{"id":"cd12","label":"这里的嵌套 Observable 是根据每个值现计算的","options":["6d17"]},"841d":{"id":"841d","label":"并且依次发送每个嵌套 Observable 所发送的值","options":["48e1","cd12"]},"0e3b":{"id":"0e3b","label":"这里的嵌套 Observable 对每个值都是一样的","options":["7438"]},"38ae":{"id":"38ae","label":"switchMap","path":"api/operators/switchMap","docType":"function"},"89d7":{"id":"89d7","label":"这里的嵌套 Observable 是根据每个值现计算的","options":["38ae"]},"0b2a":{"id":"0b2a","label":"并且当新值抵达时，取消前一个嵌套 Observable","options":["0e3b","89d7"]},"4cb1":{"id":"4cb1","label":"exhaustMap","path":"api/operators/exhaustMap","docType":"function"},"ebe1":{"id":"ebe1","label":"并且对每一个新值递归启动一个新的 Observable","options":["9346"]},"db83":{"id":"db83","label":"我要为每个值开始一个新的 Observable","options":["32f8","841d","0b2a","3263","ebe1"]},"402d":{"id":"402d","label":"pipe","path":"api/index/function/pipe","docType":"function"},"0179":{"id":"0179","label":"我要执行自定义操作","options":["402d"]},"2cc6":{"id":"2cc6","label":"share","path":"api/operators/share","docType":"function"},"c354":{"id":"c354","label":"并且在第一个订阅者抵达时尽快启动","options":["2cc6"]},"9b23":{"id":"9b23","label":"publish"},"d82e":{"id":"d82e","label":"并且手动或用程序启动它","options":["9b23"]},"ec0c":{"id":"ec0c","label":"使用常规 Subject","options":["c354","d82e"]},"6fb0":{"id":"6fb0","label":"publishBehavior"},"aafa":{"id":"aafa","label":"使用 BehaviorSubject","options":["6fb0"]},"bd16":{"id":"bd16","label":"publishReplay"},"22a4":{"id":"22a4","label":"使用 ReplaySubject","options":["bd16"]},"0ea3":{"id":"0ea3","label":"使用 AsyncSubject","options":["6360"]},"d1af":{"id":"d1af","label":"multicast"},"2c9e":{"id":"2c9e","label":"使用某种特殊的 Subject 实现","options":["d1af"]},"be9c":{"id":"be9c","label":"我要在多个订阅者之间共享某个订阅","options":["ec0c","aafa","22a4","0ea3","2c9e"]},"ae54":{"id":"ae54","label":"catchError","path":"api/operators/catchError","docType":"function"},"86f8":{"id":"86f8","label":"我要启动一个新的 Observable","options":["ae54"]},"bf2b":{"id":"bf2b","label":"retry","path":"api/operators/retry","docType":"function"},"34eb":{"id":"34eb","label":"立即","options":["bf2b"]},"782d":{"id":"782d","label":"retryWhen","path":"api/operators/retryWhen","docType":"function"},"15be":{"id":"15be","label":"当另一个 Observable 发送值的时候","options":["782d"]},"230a":{"id":"230a","label":"我要重新订阅","options":["34eb","15be"]},"c060":{"id":"c060","label":"repeat","path":"api/operators/repeat","docType":"function"},"49f1":{"id":"49f1","label":"立即","options":["c060"]},"6c53":{"id":"6c53","label":"repeatWhen","path":"api/operators/repeatWhen","docType":"function"},"5e92":{"id":"5e92","label":"当另一个 Observable 发送值的时候","options":["6c53"]},"d7d2":{"id":"d7d2","label":"我要重新订阅","options":["49f1","5e92"]},"34aa":{"id":"34aa","label":"concat","path":"api/index/function/concat","docType":"function"},"e552":{"id":"e552","label":"当它完成时","options":["d7d2","1114"]},"8a77":{"id":"8a77","label":"finalize","path":"api/operators/finalize","docType":"function"},"ccd7":{"id":"ccd7","label":"当它完成、出错或退订时，我要执行某个函数","options":["8a77"]},"2aeb":{"id":"2aeb","label":"它会修改从调用到订阅之间的路由","options":["9462"]},"ff8e":{"id":"ff8e","label":"observeOn","path":"api/operators/observeOn","docType":"function"},"4a8a":{"id":"4a8a","label":"它会修改从发送值到 Observer 之间的路由","options":["ff8e"]},"582d":{"id":"582d","label":"我要更改调度器（Scheduler）","options":["2aeb","4a8a"]},"44fc":{"id":"44fc","label":"race","path":"api/index/function/race","docType":"function"},"9de7":{"id":"9de7","label":"我只想从首先发送值的 Observable 接收各个值","options":["44fc"]},"95ef":{"id":"95ef","label":"merge","path":"api/index/function/merge","docType":"function"},"0112":{"id":"0112","label":"我要输出所有值，而不管是从哪一个发送的","options":["95ef"]},"98fb":{"id":"98fb","label":"combineLatest","path":"api/index/function/combineLatest","docType":"function"},"def1":{"id":"def1","label":"当任何一个来源发送值的时候，使用每个来源发送的最后一个值","options":["98fb"]},"f868":{"id":"f868","label":"withLatestFrom","path":"api/operators/withLatestFrom","docType":"function"},"2a73":{"id":"2a73","label":"仅当主 Observable 发送值的时候，使用每个来源发送的最后一个值","options":["f868"]},"b6fa":{"id":"b6fa","label":"zip","path":"api/index/function/zip","docType":"function"},"062e":{"id":"062e","label":"每个来源中的每个值仅使用一次","options":["b6fa"]},"30aa":{"id":"30aa","label":"我要把这个 Observable 和其它的合并，并且","options":["9de7","0112","2687"]},"f372":{"id":"f372","label":"我已经有一个 Observable，并且","options":["0ef4","2fcb","c18d","e0b4","30ac","b369","2bb3","b2c3","cd14","1df4","791a","f022","9bcb","db83","0179","be9c","4442","e552","ccd7","582d","30aa"]},"20f0":{"id":"20f0","label":"race","path":"api/index/function/race","docType":"function"},"b322":{"id":"b322","label":"我只想从首先发送值的 Observable 接收各个值","options":["20f0"]},"7c2c":{"id":"7c2c","label":"forkJoin","path":"api/index/function/forkJoin","docType":"function"},"c1e8":{"id":"c1e8","label":"我想在它们全都完成时得到通知","options":["7c2c"]},"52ad":{"id":"52ad","label":"merge","path":"api/index/function/merge","docType":"function"},"00db":{"id":"00db","label":"我要输出所有值，而不管是从哪一个发送的","options":["52ad"]},"52a6":{"id":"52a6","label":"combineLatest","path":"api/index/function/combineLatest","docType":"function"},"00eb":{"id":"00eb","label":"当任何一个来源发送值的时候，使用每个来源发送的最后一个值","options":["52a6"]},"5aa0":{"id":"5aa0","label":"zip","path":"api/index/function/zip","docType":"function"},"3a6c":{"id":"3a6c","label":"concat","path":"api/index/function/concat","docType":"function"},"bda2":{"id":"bda2","label":"我要依次订阅它们","options":["3a6c"]},"429c":{"id":"429c","label":"Observable","path":"api/index/class/Observable","docType":"class","method":"create"},"89f2":{"id":"89f2","label":"使用自定义逻辑","options":["429c"]},"ce67":{"id":"ce67","label":"generate","path":"api/index/function/generate","docType":"function"},"f3c2":{"id":"f3c2","label":"使用一个类似于 for 循环的状态机","options":["ce67"]},"78a1":{"id":"78a1","label":"throwError","path":"api/index/function/throwError","docType":"function"},"16dd":{"id":"16dd","label":"抛出一个错误","options":["78a1"]},"2ff0":{"id":"2ff0","label":"EMPTY","path":"api/index/const/EMPTY","docType":"const"},"f1ec":{"id":"f1ec","label":"只完成它，而不发送任何值","options":["2ff0"]},"5b41":{"id":"5b41","label":"永远不会发送任何东西","options":["6758"]},"811e":{"id":"811e","label":"来自 DOM 或 Node.js 或类似的东西","options":["8047"]},"f72c":{"id":"f72c","label":"fromEventPattern","path":"api/index/function/fromEventPattern","docType":"function"},"244b":{"id":"244b","label":"它使用某个 API 来添加或移除事件处理器","options":["f72c"]},"77c5":{"id":"77c5","label":"from","path":"api/index/function/from","docType":"function"},"4f21":{"id":"4f21","label":"来自某个 Promise 或事件源","options":["77c5"]},"75b7":{"id":"75b7","label":"from","path":"api/index/function/from","docType":"function"},"ba00":{"id":"ba00","label":"针对某个数组中的那些值","options":["75b7"]},"d780":{"id":"d780","label":"range","path":"api/index/function/range","docType":"function"},"ac14":{"id":"ac14","label":"针对某个数字范围内的那些值","options":["d780"]},"19e3":{"id":"19e3","label":"of"},"0434":{"id":"0434","label":"针对通过参数给出的那些值","options":["19e3"]},"c38c":{"id":"c38c","label":"它是可迭代者","options":["ba00","ac14","0434"]},"107d":{"id":"107d","label":"interval","path":"api/index/function/interval","docType":"function"},"2c1a":{"id":"2c1a","label":"均匀的","options":["107d"]},"08d3":{"id":"08d3","label":"带有一个可选的首次延迟","options":["2356"]},"b8c4":{"id":"b8c4","label":"它基于定时器发送一些值","options":["2c1a","08d3"]},"e9e7":{"id":"e9e7","label":"它在被订阅时才按需创建","options":["9257"]},"5dab":{"id":"5dab","label":"我要创建一个新的 Observable","options":["89f2","f3c2","16dd","f1ec","5b41","2443","4f21","c38c","b8c4","e9e7"]},"e941":{"id":"e941","label":"bindCallback","path":"api/index/function/bindCallback","docType":"function"},"889d":{"id":"889d","label":"支持常规的回调 API","options":["e941"]},"4f85":{"id":"4f85","label":"bindNodeCallback","path":"api/index/function/bindNodeCallback","docType":"function"},"44c8":{"id":"44c8","label":"支持 Node.js 风格的回调 API","options":["4f85"]},"5deb":{"id":"5deb","label":"我要把某个回调函数转换为 Observable","options":["889d","44c8"]},"985e":{"id":"985e","label":"我还没有任何 Observable，并且","options":["5dab","5deb"]},"initial":{"id":"initial","options":["f372","6552","985e"]}}