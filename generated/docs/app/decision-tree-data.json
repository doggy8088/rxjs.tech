{"1404":{"id":"1404","label":"它使用某个 API 来添加或移除事件处理器","options":["6c50"]},"1856":{"id":"1856","label":"fromEvent","path":"api/index/function/fromEvent","docType":"function"},"2039":{"id":"2039","label":"我要执行自定义操作","options":["072c"]},"2738":{"id":"2738","label":"groupBy","path":"api/operators/groupBy","docType":"function"},"2776":{"id":"2776","label":"exhaustMap","path":"api/operators/exhaustMap","docType":"function"},"3019":{"id":"3019","label":"并且把分好的组以数组的形式发送","options":["52d4"]},"3070":{"id":"3070","label":"single","path":"api/operators/single","docType":"function"},"3242":{"id":"3242","label":"我要抛出一个错误","options":["3533"]},"3473":{"id":"3473","label":"并且只要最后一个值","options":["af7d"]},"3492":{"id":"3492","label":"这个时间窗口是基于另一个 Observable 的发送情况","options":["7d2d"]},"3533":{"id":"3533","label":"timeout","path":"api/operators/timeout","docType":"function"},"3591":{"id":"3591","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["eda6"]},"3902":{"id":"3902","label":"Observable","path":"api/index/class/Observable","docType":"class","method":"create"},"4191":{"id":"4191","label":"concatMap","path":"api/operators/concatMap","docType":"function"},"4305":{"id":"4305","label":"我要重新订阅","options":["5d66","e7b8"]},"4619":{"id":"4619","label":"从一个现有的事件源","options":["52a4","1404"]},"4918":{"id":"4918","label":"bufferWhen","path":"api/operators/bufferWhen","docType":"function"},"5421":{"id":"5421","label":"并且把分好的组以数组的形式发送","options":["08c4"]},"5658":{"id":"5658","label":"并且只要第一个值","options":["0973"]},"6119":{"id":"6119","label":"基于时间","options":["0285","8f09"]},"6464":{"id":"6464","label":"range","path":"api/index/function/range","docType":"function"},"6990":{"id":"6990","label":"我只想从首先发送值的 Observable 接收各个值","options":["fcea"]},"7045":{"id":"7045","label":"并且对每一个新值递归启动一个新的 Observable","options":["d158"]},"7134":{"id":"7134","label":"merge","path":"api/index/function/merge","docType":"function"},"7411":{"id":"7411","label":"并转换为数组","options":["d045"]},"7595":{"id":"7595","label":"并且把分好的组以数组形式发送","options":["7cf1"]},"7757":{"id":"7757","label":"race","path":"api/index/function/race","docType":"function"},"8177":{"id":"8177","label":"publishBehavior"},"8396":{"id":"8396","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["d695"]},"8646":{"id":"8646","label":"bindCallback","path":"api/index/function/bindCallback","docType":"function"},"9118":{"id":"9118","label":"NEVER","path":"api/index/const/NEVER","docType":"const"},"9324":{"id":"9324","label":"multicast"},"9532":{"id":"9532","label":"抛出一个错误","options":["93af"]},"9930":{"id":"9930","label":"这个时间窗口是根据某个时长来决定的","options":["1f3f"]},"8a6b":{"id":"8a6b","label":"mapTo","path":"api/operators/mapTo","docType":"function"},"1c14":{"id":"1c14","label":"一个常量值","options":["8a6b"]},"a00b":{"id":"a00b","label":"map","path":"api/operators/map","docType":"function"},"9fdf":{"id":"9fdf","label":"一个通过公式算出来的值","options":["a00b"]},"cbba":{"id":"cbba","label":"我要把它发送的每个值改成","options":["1c14","9fdf"]},"fc7f":{"id":"fc7f","label":"pluck"},"8c30":{"id":"8c30","label":"我要从它发送的每个值中取出一个属性","options":["fc7f"]},"faa3":{"id":"faa3","label":"tap","path":"api/operators/tap","docType":"function"},"f491":{"id":"f491","label":"我要监听即将发送的值，但不想影响它们","options":["faa3"]},"3fd5":{"id":"3fd5","label":"filter","path":"api/operators/filter","docType":"function"},"d4d9":{"id":"d4d9","label":"基于自定义逻辑","options":["3fd5"]},"0973":{"id":"0973","label":"first","path":"api/operators/first","docType":"function"},"32c9":{"id":"32c9","label":"take","path":"api/operators/take","docType":"function"},"21c4":{"id":"21c4","label":"基于给定的数量","options":["32c9"]},"d6c4":{"id":"d6c4","label":"takeWhile","path":"api/operators/takeWhile","docType":"function"},"2bfc":{"id":"2bfc","label":"基于自定义逻辑","options":["d6c4"]},"6f20":{"id":"6f20","label":"如果它们位于此 Observable 的首部","options":["5658","21c4","2bfc"]},"c82a":{"id":"c82a","label":"elementAt","path":"api/operators/elementAt","docType":"function"},"23b5":{"id":"23b5","label":"如果它们精确的处于第 n 位","options":["c82a"]},"af7d":{"id":"af7d","label":"last","path":"api/operators/last","docType":"function"},"deae":{"id":"deae","label":"takeLast","path":"api/operators/takeLast","docType":"function"},"757b":{"id":"757b","label":"基于给定的数量","options":["deae"]},"47b3":{"id":"47b3","label":"如果它们位于此 Observable 的尾部","options":["3473","757b"]},"a6d9":{"id":"a6d9","label":"takeUntil","path":"api/operators/takeUntil","docType":"function"},"da09":{"id":"da09","label":"直到另一个 Observable 发送了值","options":["a6d9"]},"9cfd":{"id":"9cfd","label":"我要只允许部分值通过","options":["d4d9","6f20","23b5","47b3","da09"]},"bce5":{"id":"bce5","label":"ignoreElements","path":"api/operators/ignoreElements","docType":"function"},"23df":{"id":"23df","label":"全部","options":["bce5"]},"351e":{"id":"351e","label":"skip","path":"api/operators/skip","docType":"function"},"afde":{"id":"afde","label":"基于给定的数量","options":["351e"]},"e645":{"id":"e645","label":"skipWhile","path":"api/operators/skipWhile","docType":"function"},"15f1":{"id":"15f1","label":"基于自定义逻辑","options":["e645"]},"83c5":{"id":"83c5","label":"从此 Observable 的首部","options":["afde","15f1"]},"2bc9":{"id":"2bc9","label":"skipLast","path":"api/operators/skipLast","docType":"function"},"c39a":{"id":"c39a","label":"从此 Observable 的尾部","options":["2bc9"]},"c492":{"id":"c492","label":"skipUntil","path":"api/operators/skipUntil","docType":"function"},"d7d4":{"id":"d7d4","label":"直到另一个 Observable 发送了值","options":["c492"]},"212a":{"id":"212a","label":"distinctUntilChanged","path":"api/operators/distinctUntilChanged","docType":"function"},"b3ee":{"id":"b3ee","label":"发送恰好在当前值前面的那个","options":["212a"]},"d4e3":{"id":"d4e3","label":"distinct","path":"api/operators/distinct","docType":"function"},"06b1":{"id":"06b1","label":"以前任何时候曾发送过","options":["d4e3"]},"a55e":{"id":"a55e","label":"publish"},"fa82":{"id":"fa82","label":"distinctUntilKeyChanged","path":"api/operators/distinctUntilKeyChanged","docType":"function"},"e5ad":{"id":"e5ad","label":"发送恰好在当前值前面的那个","options":["fa82"]},"e023":{"id":"e023","label":"根据一个某个键或对象属性","options":["e5ad"]},"6ec2":{"id":"6ec2","label":"与某些以前发送的值匹配","options":["a55e","e023"]},"23ea":{"id":"23ea","label":"throttle","path":"api/operators/throttle","docType":"function"},"b6e8":{"id":"b6e8","label":"这个时间窗口是基于另一个 Observable 的发送情况","options":["23ea"]},"81b1":{"id":"81b1","label":"throttleTime","path":"api/operators/throttleTime","docType":"function"},"47a5":{"id":"47a5","label":"这个时间窗口是根据某个时长来决定的","options":["81b1"]},"f664":{"id":"f664","label":"发送每个时间窗口中的第一个值","options":["b6e8","47a5"]},"7d2d":{"id":"7d2d","label":"audit","path":"api/operators/audit","docType":"function"},"1f3f":{"id":"1f3f","label":"auditTime","path":"api/operators/auditTime","docType":"function"},"efe7":{"id":"efe7","label":"发送每个时间窗口中的最后一个值","options":["3492","9930"]},"a94e":{"id":"a94e","label":"debounce","path":"api/operators/debounce","docType":"function"},"a838":{"id":"a838","label":"此平静的间隔阈值由另一个 Observable 决定","options":["a94e"]},"fa8a":{"id":"fa8a","label":"debounceTime","path":"api/operators/debounceTime","docType":"function"},"f5d9":{"id":"f5d9","label":"此平静的间隔阈值是根据某个时长决定的","options":["fa8a"]},"7eb8":{"id":"7eb8","label":"等足够平静时就发送最后一个值","options":["a838","f5d9"]},"c67d":{"id":"c67d","label":"发生的过于频繁","options":["f664","efe7","7eb8"]},"4e35":{"id":"4e35","label":"我要忽略某些值","options":["23df","83c5","c39a","d7d4","6ec2","c67d"]},"074e":{"id":"074e","label":"reduce","path":"api/operators/reduce","docType":"function"},"6b3e":{"id":"6b3e","label":"并且只输出最终计算出的值","options":["074e"]},"8acb":{"id":"8acb","label":"scan","path":"api/operators/scan","docType":"function"},"e8c8":{"id":"e8c8","label":"并且每当来源发送某个值时就输出计算好的值","options":["8acb"]},"98de":{"id":"98de","label":"mergeScan","path":"api/operators/mergeScan","docType":"function"},"c74f":{"id":"c74f","label":"并且当来源发送某个值时，就把计算好的值输出为一个嵌套 Observable","options":["98de"]},"829f":{"id":"829f","label":"switchScan","path":"api/operators/switchScan","docType":"function"},"59f2":{"id":"59f2","label":"并且每当来源发送某个值时，就把计算好的值输出为一个嵌套 Observable，同时取消对前一个嵌套 Observable 的订阅","options":["829f"]},"b8a5":{"id":"b8a5","label":"我要使用已发送的所有值做某种计算","options":["6b3e","e8c8","c74f","59f2"]},"0ca7":{"id":"0ca7","label":"materialize","path":"api/operators/materialize","docType":"function"},"eadf":{"id":"eadf","label":"此元数据描述每个通知（next、error 或 complete）","options":["0ca7"]},"87ca":{"id":"87ca","label":"timeInterval","path":"api/operators/timeInterval","docType":"function"},"dc61":{"id":"dc61","label":"次元数据包含从最后一次发送值开始已过去时间","options":["87ca"]},"b8fc":{"id":"b8fc","label":"我要用元数据包装它的各个消息","options":["eadf","dc61"]},"d6ae":{"id":"d6ae","label":"timeoutWith","path":"api/operators/timeoutWith","docType":"function"},"b152":{"id":"b152","label":"我要切换到另一个 Observable","options":["d6ae"]},"c54f":{"id":"c54f","label":"在某个非交互式间隔之后","options":["3242","b152"]},"c683":{"id":"c683","label":"我要确保只有一个值","options":["3070"]},"d8f9":{"id":"d8f9","label":"count","path":"api/operators/count","docType":"function"},"6b16":{"id":"6b16","label":"我要知道它发送了多少个值","options":["d8f9"]},"643f":{"id":"643f","label":"startWith"},"55cd":{"id":"55cd","label":"我要在开头放一个值","options":["643f"]},"4b2f":{"id":"4b2f","label":"delay","path":"api/operators/delay","docType":"function"},"29be":{"id":"29be","label":"基于给定的时间","options":["4b2f"]},"572f":{"id":"572f","label":"delayWhen","path":"api/operators/delayWhen","docType":"function"},"ccfd":{"id":"ccfd","label":"基于另一个 Observable 的发送情况","options":["572f"]},"b285":{"id":"b285","label":"我要延迟后再发送","options":["29be","ccfd"]},"d045":{"id":"d045","label":"toArray","path":"api/operators/toArray","docType":"function"},"f94a":{"id":"f94a","label":"Observable","path":"api/index/class/Observable","docType":"class","method":"toPromise"},"d7f4":{"id":"d7f4","label":"并且转换为 Promise","options":["f94a"]},"23a3":{"id":"23a3","label":"直到此 Observable 完成","options":["7411","d7f4"]},"a51d":{"id":"a51d","label":"pairwise","path":"api/operators/pairwise","docType":"function"},"0004":{"id":"0004","label":"连续配对，作为数组","options":["a51d"]},"f0e8":{"id":"f0e8","label":"partition","path":"api/index/function/partition","docType":"function"},"fb97":{"id":"fb97","label":"基于某种标准，并且输出两个 Observable：那些符合此标准的，和不符合此标准的","options":["f0e8"]},"7cf1":{"id":"7cf1","label":"bufferCount","path":"api/operators/bufferCount","docType":"function"},"8b0e":{"id":"8b0e","label":"windowCount","path":"api/operators/windowCount","docType":"function"},"c494":{"id":"c494","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["8b0e"]},"d3f8":{"id":"d3f8","label":"根据特定大小的批次","options":["7595","c494"]},"0034":{"id":"0034","label":"bufferTime","path":"api/operators/bufferTime","docType":"function"},"0285":{"id":"0285","label":"并且把分好的组以数组的形式发送","options":["0034"]},"dec5":{"id":"dec5","label":"windowTime","path":"api/operators/windowTime","docType":"function"},"8f09":{"id":"8f09","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["dec5"]},"08c4":{"id":"08c4","label":"buffer","path":"api/operators/buffer","docType":"function"},"d695":{"id":"d695","label":"window","path":"api/operators/window","docType":"function"},"9f2d":{"id":"9f2d","label":"直到另一个 Observable 发送了值","options":["5421","8396"]},"5ad1":{"id":"5ad1","label":"并且把分好的组以数组的形式发送","options":["4918"]},"eda6":{"id":"eda6","label":"windowWhen","path":"api/operators/windowWhen","docType":"function"},"bd73":{"id":"bd73","label":"基于某个按需创建的 Observable 的发送情况","options":["5ad1","3591"]},"52d4":{"id":"52d4","label":"bufferToggle","path":"api/operators/bufferToggle","docType":"function"},"99fb":{"id":"99fb","label":"windowToggle","path":"api/operators/windowToggle","docType":"function"},"21a6":{"id":"21a6","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["99fb"]},"e3b4":{"id":"e3b4","label":"基于另一个 Observable 开始一组，并基于第三个 Observable 结束这一组","options":["3019","21a6"]},"78e8":{"id":"78e8","label":"基于根据已发送的值计算出的一个键","options":["2738"]},"a2a4":{"id":"a2a4","label":"我要对这些值进行分组","options":["23a3","0004","fb97","d3f8","6119","9f2d","bd73","e3b4","78e8"]},"e6f5":{"id":"e6f5","label":"mergeMapTo","path":"api/operators/mergeMapTo","docType":"function"},"185f":{"id":"185f","label":"这里的嵌套 Observable 对每个值都是一样的","options":["e6f5"]},"367a":{"id":"367a","label":"mergeMap","path":"api/operators/mergeMap","docType":"function"},"f894":{"id":"f894","label":"这里的嵌套 Observable 是根据每个值现计算的","options":["367a"]},"2a66":{"id":"2a66","label":"并且并行发送全部嵌套 Observable 所发送的值","options":["185f","f894"]},"1d40":{"id":"1d40","label":"concatMapTo","path":"api/operators/concatMapTo","docType":"function"},"90c8":{"id":"90c8","label":"这里的嵌套 Observable 对每个值都是一样的","options":["1d40"]},"bfe9":{"id":"bfe9","label":"这里的嵌套 Observable 是根据每个值现计算的","options":["4191"]},"f937":{"id":"f937","label":"并且依次发送每个嵌套 Observable 所发送的值","options":["90c8","bfe9"]},"9fce":{"id":"9fce","label":"switchMapTo","path":"api/operators/switchMapTo","docType":"function"},"f2bc":{"id":"f2bc","label":"这里的嵌套 Observable 对每个值都是一样的","options":["9fce"]},"aecf":{"id":"aecf","label":"switchMap","path":"api/operators/switchMap","docType":"function"},"cc49":{"id":"cc49","label":"这里的嵌套 Observable 是根据每个值现计算的","options":["aecf"]},"6c62":{"id":"6c62","label":"并且当新值抵达时，取消前一个嵌套 Observable","options":["f2bc","cc49"]},"b7cf":{"id":"b7cf","label":"并且即使当前的嵌套 Observable 尚未完结，也要忽略进来的值","options":["2776"]},"d158":{"id":"d158","label":"expand","path":"api/operators/expand","docType":"function"},"56e0":{"id":"56e0","label":"我要为每个值开始一个新的 Observable","options":["2a66","f937","6c62","b7cf","7045"]},"072c":{"id":"072c","label":"pipe","path":"api/index/function/pipe","docType":"function"},"27c2":{"id":"27c2","label":"share","path":"api/operators/share","docType":"function"},"7b64":{"id":"7b64","label":"并且在第一个订阅者抵达时尽快启动","options":["27c2"]},"8ca9":{"id":"8ca9","label":"并且手动或用程序启动它","options":["a55e"]},"cb05":{"id":"cb05","label":"使用常规 Subject","options":["7b64","8ca9"]},"2ace":{"id":"2ace","label":"使用 BehaviorSubject","options":["8177"]},"222b":{"id":"222b","label":"publishReplay"},"fc44":{"id":"fc44","label":"使用 ReplaySubject","options":["222b"]},"9e2a":{"id":"9e2a","label":"publishLast"},"087f":{"id":"087f","label":"使用 AsyncSubject","options":["9e2a"]},"86ac":{"id":"86ac","label":"使用某种特殊的 Subject 实现","options":["9324"]},"ce00":{"id":"ce00","label":"我要在多个订阅者之间共享某个订阅","options":["cb05","2ace","fc44","087f","86ac"]},"d0f9":{"id":"d0f9","label":"catchError","path":"api/operators/catchError","docType":"function"},"5cea":{"id":"5cea","label":"我要启动一个新的 Observable","options":["d0f9"]},"15eb":{"id":"15eb","label":"retry","path":"api/operators/retry","docType":"function"},"5d66":{"id":"5d66","label":"立即","options":["15eb"]},"b6f7":{"id":"b6f7","label":"retryWhen","path":"api/operators/retryWhen","docType":"function"},"e7b8":{"id":"e7b8","label":"当另一个 Observable 发送值的时候","options":["b6f7"]},"fd2c":{"id":"fd2c","label":"当发生错误时","options":["5cea","4305"]},"568d":{"id":"568d","label":"repeat","path":"api/operators/repeat","docType":"function"},"f9d2":{"id":"f9d2","label":"立即","options":["568d"]},"c754":{"id":"c754","label":"repeatWhen","path":"api/operators/repeatWhen","docType":"function"},"6ba2":{"id":"6ba2","label":"当另一个 Observable 发送值的时候","options":["c754"]},"e081":{"id":"e081","label":"我要重新订阅","options":["f9d2","6ba2"]},"f1ee":{"id":"f1ee","label":"concat","path":"api/index/function/concat","docType":"function"},"a386":{"id":"a386","label":"我要启动一个新的 Observable","options":["f1ee"]},"deed":{"id":"deed","label":"当它完成时","options":["e081","a386"]},"b0c1":{"id":"b0c1","label":"finalize","path":"api/operators/finalize","docType":"function"},"2ea2":{"id":"2ea2","label":"当它完成、出错或退订时，我要执行某个函数","options":["b0c1"]},"ad90":{"id":"ad90","label":"subscribeOn","path":"api/operators/subscribeOn","docType":"function"},"1d85":{"id":"1d85","label":"它会修改从调用到订阅之间的路由","options":["ad90"]},"7b87":{"id":"7b87","label":"observeOn","path":"api/operators/observeOn","docType":"function"},"6ffe":{"id":"6ffe","label":"它会修改从发送值到 Observer 之间的路由","options":["7b87"]},"8c65":{"id":"8c65","label":"我要更改调度器（Scheduler）","options":["1d85","6ffe"]},"fcea":{"id":"fcea","label":"race","path":"api/index/function/race","docType":"function"},"0e12":{"id":"0e12","label":"我要输出所有值，而不管是从哪一个发送的","options":["7134"]},"0b48":{"id":"0b48","label":"combineLatest","path":"api/index/function/combineLatest","docType":"function"},"b122":{"id":"b122","label":"当任何一个来源发送值的时候，使用每个来源发送的最后一个值","options":["0b48"]},"99a1":{"id":"99a1","label":"withLatestFrom","path":"api/operators/withLatestFrom","docType":"function"},"3a0c":{"id":"3a0c","label":"仅当主 Observable 发送值的时候，使用每个来源发送的最后一个值","options":["99a1"]},"9eaa":{"id":"9eaa","label":"zip","path":"api/index/function/zip","docType":"function"},"f255":{"id":"f255","label":"每个来源中的每个值仅使用一次","options":["9eaa"]},"82fb":{"id":"82fb","label":"我要输出根据源 Observer 发送的值计算出来的某个值","options":["b122","3a0c","f255"]},"aafe":{"id":"aafe","label":"我要把这个 Observable 和其它的合并，并且","options":["6990","0e12","82fb"]},"0304":{"id":"0304","label":"我已经有一个 Observable，并且","options":["cbba","8c30","f491","9cfd","4e35","b8a5","b8fc","c54f","c683","6b16","55cd","b285","a2a4","56e0","2039","ce00","fd2c","deed","2ea2","8c65","aafe"]},"8c8c":{"id":"8c8c","label":"我只想从首先发送值的 Observable 接收各个值","options":["7757"]},"62f7":{"id":"62f7","label":"forkJoin","path":"api/index/function/forkJoin","docType":"function"},"165d":{"id":"165d","label":"我想在它们全都完成时得到通知","options":["62f7"]},"54f6":{"id":"54f6","label":"merge","path":"api/index/function/merge","docType":"function"},"e476":{"id":"e476","label":"我要输出所有值，而不管是从哪一个发送的","options":["54f6"]},"1fb8":{"id":"1fb8","label":"combineLatest","path":"api/index/function/combineLatest","docType":"function"},"7ab3":{"id":"7ab3","label":"当任何一个来源发送值的时候，使用每个来源发送的最后一个值","options":["1fb8"]},"b9d6":{"id":"b9d6","label":"zip","path":"api/index/function/zip","docType":"function"},"c768":{"id":"c768","label":"每个来源中的每个值仅使用一次","options":["b9d6"]},"2bac":{"id":"2bac","label":"我要输出根据源 Observer 发送的值计算出来的某个值","options":["7ab3","c768"]},"d004":{"id":"d004","label":"concat","path":"api/index/function/concat","docType":"function"},"ae1c":{"id":"ae1c","label":"我要依次订阅它们","options":["d004"]},"23d9":{"id":"23d9","label":"我已经有了由某些 Observable 组合成的单一 Observable，并且","options":["8c8c","165d","e476","2bac","ae1c"]},"bf88":{"id":"bf88","label":"使用自定义逻辑","options":["3902"]},"e755":{"id":"e755","label":"generate","path":"api/index/function/generate","docType":"function"},"fab8":{"id":"fab8","label":"使用一个类似于 for 循环的状态机","options":["e755"]},"93af":{"id":"93af","label":"throwError","path":"api/index/function/throwError","docType":"function"},"f398":{"id":"f398","label":"EMPTY","path":"api/index/const/EMPTY","docType":"const"},"7edc":{"id":"7edc","label":"只完成它，而不发送任何值","options":["f398"]},"8bab":{"id":"8bab","label":"永远不会发送任何东西","options":["9118"]},"52a4":{"id":"52a4","label":"来自 DOM 或 Node.js 或类似的东西","options":["1856"]},"6c50":{"id":"6c50","label":"fromEventPattern","path":"api/index/function/fromEventPattern","docType":"function"},"ffaa":{"id":"ffaa","label":"from","path":"api/index/function/from","docType":"function"},"fa67":{"id":"fa67","label":"来自某个 Promise 或事件源","options":["ffaa"]},"a4e7":{"id":"a4e7","label":"from","path":"api/index/function/from","docType":"function"},"b8e3":{"id":"b8e3","label":"针对某个数组中的那些值","options":["a4e7"]},"64ab":{"id":"64ab","label":"针对某个数字范围内的那些值","options":["6464"]},"febf":{"id":"febf","label":"of"},"d95a":{"id":"d95a","label":"针对通过参数给出的那些值","options":["febf"]},"150d":{"id":"150d","label":"它是可迭代者","options":["b8e3","64ab","d95a"]},"ac48":{"id":"ac48","label":"interval","path":"api/index/function/interval","docType":"function"},"d159":{"id":"d159","label":"均匀的","options":["ac48"]},"c093":{"id":"c093","label":"timer","path":"api/index/function/timer","docType":"function"},"75d0":{"id":"75d0","label":"带有一个可选的首次延迟","options":["c093"]},"af1e":{"id":"af1e","label":"它基于定时器发送一些值","options":["d159","75d0"]},"158f":{"id":"158f","label":"defer","path":"api/index/function/defer","docType":"function"},"5cbf":{"id":"5cbf","label":"它在被订阅时才按需创建","options":["158f"]},"244a":{"id":"244a","label":"我要创建一个新的 Observable","options":["bf88","fab8","9532","7edc","8bab","4619","fa67","150d","af1e","5cbf"]},"0ea3":{"id":"0ea3","label":"支持常规的回调 API","options":["8646"]},"b4e6":{"id":"b4e6","label":"bindNodeCallback","path":"api/index/function/bindNodeCallback","docType":"function"},"57ec":{"id":"57ec","label":"支持 Node.js 风格的回调 API","options":["b4e6"]},"4e39":{"id":"4e39","label":"我要把某个回调函数转换为 Observable","options":["0ea3","57ec"]},"65e7":{"id":"65e7","label":"我还没有任何 Observable，并且","options":["244a","4e39"]},"initial":{"id":"initial","options":["0304","23d9","65e7"]}}