{"1084":{"id":"1084","label":"我要在多个订阅者之间共享某个订阅","options":["788f","0406","3bd0","9b7f","3526"]},"1104":{"id":"1104","label":"race","path":"api/index/function/race","docType":"function"},"1130":{"id":"1130","label":"我要把某个回调函数转换为 Observable","options":["a1b9","0792"]},"1423":{"id":"1423","label":"我要执行自定义操作","options":["fd7d"]},"1560":{"id":"1560","label":"take","path":"api/operators/take","docType":"function"},"1959":{"id":"1959","label":"merge","path":"api/index/function/merge","docType":"function"},"2210":{"id":"2210","label":"takeUntil","path":"api/operators/takeUntil","docType":"function"},"2308":{"id":"2308","label":"distinctUntilKeyChanged","path":"api/operators/distinctUntilKeyChanged","docType":"function"},"2428":{"id":"2428","label":"retry","path":"api/operators/retry","docType":"function"},"2588":{"id":"2588","label":"这个时间窗口是基于另一个 Observable 的发送情况","options":["9f18"]},"2627":{"id":"2627","label":"如果它们位于此 Observable 的尾部","options":["dcb8","98f6"]},"3323":{"id":"3323","label":"当它完成时","options":["08b3","6f52"]},"3341":{"id":"3341","label":"我想在它们全都完成时得到通知","options":["0477"]},"3497":{"id":"3497","label":"repeat","path":"api/operators/repeat","docType":"function"},"3526":{"id":"3526","label":"使用某种特殊的 Subject 实现","options":["4e57"]},"3781":{"id":"3781","label":"我只想从首先发送值的 Observable 接收各个值","options":["1104"]},"3889":{"id":"3889","label":"等足够平静时就发送最后一个值","options":["6dff","cf15"]},"4757":{"id":"4757","label":"我要把它发送的每个值改成","options":["451b","cc7c"]},"5176":{"id":"5176","label":"skipLast","path":"api/operators/skipLast","docType":"function"},"5384":{"id":"5384","label":"这个时间窗口是根据某个时长来决定的","options":["338a"]},"5442":{"id":"5442","label":"并转换为数组","options":["7ac5"]},"5817":{"id":"5817","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["a013"]},"5884":{"id":"5884","label":"switchMapTo","path":"api/operators/switchMapTo","docType":"function"},"5971":{"id":"5971","label":"takeLast","path":"api/operators/takeLast","docType":"function"},"7288":{"id":"7288","label":"基于给定的数量","options":["1560"]},"7630":{"id":"7630","label":"全部","options":["de1b"]},"8009":{"id":"8009","label":"并且把分好的组以数组的形式发送","options":["5f99"]},"8146":{"id":"8146","label":"mergeMap","path":"api/operators/mergeMap","docType":"function"},"8411":{"id":"8411","label":"distinct","path":"api/operators/distinct","docType":"function"},"9077":{"id":"9077","label":"auditTime","path":"api/operators/auditTime","docType":"function"},"9255":{"id":"9255","label":"我要启动一个新的 Observable","options":["7de1"]},"9259":{"id":"9259","label":"基于自定义逻辑","options":["cfc6"]},"9914":{"id":"9914","label":"retryWhen","path":"api/operators/retryWhen","docType":"function"},"5bfa":{"id":"5bfa","label":"mapTo","path":"api/operators/mapTo","docType":"function"},"451b":{"id":"451b","label":"一个常量值","options":["5bfa"]},"ac3f":{"id":"ac3f","label":"map","path":"api/operators/map","docType":"function"},"cc7c":{"id":"cc7c","label":"一个通过公式算出来的值","options":["ac3f"]},"ea27":{"id":"ea27","label":"pluck"},"54e2":{"id":"54e2","label":"我要从它发送的每个值中取出一个属性","options":["ea27"]},"af04":{"id":"af04","label":"tap","path":"api/operators/tap","docType":"function"},"d31c":{"id":"d31c","label":"我要监听即将发送的值，但不想影响它们","options":["af04"]},"d238":{"id":"d238","label":"filter","path":"api/operators/filter","docType":"function"},"5b1d":{"id":"5b1d","label":"基于自定义逻辑","options":["d238"]},"2b92":{"id":"2b92","label":"first","path":"api/operators/first","docType":"function"},"84e9":{"id":"84e9","label":"并且只要第一个值","options":["2b92"]},"088e":{"id":"088e","label":"takeWhile","path":"api/operators/takeWhile","docType":"function"},"b0fb":{"id":"b0fb","label":"基于自定义逻辑","options":["088e"]},"023c":{"id":"023c","label":"如果它们位于此 Observable 的首部","options":["84e9","7288","b0fb"]},"adf3":{"id":"adf3","label":"elementAt","path":"api/operators/elementAt","docType":"function"},"18fc":{"id":"18fc","label":"如果它们精确的处于第 n 位","options":["adf3"]},"e23e":{"id":"e23e","label":"last","path":"api/operators/last","docType":"function"},"dcb8":{"id":"dcb8","label":"并且只要最后一个值","options":["e23e"]},"98f6":{"id":"98f6","label":"基于给定的数量","options":["5971"]},"abfa":{"id":"abfa","label":"直到另一个 Observable 发送了值","options":["2210"]},"10f6":{"id":"10f6","label":"我要只允许部分值通过","options":["5b1d","023c","18fc","2627","abfa"]},"de1b":{"id":"de1b","label":"ignoreElements","path":"api/operators/ignoreElements","docType":"function"},"a49d":{"id":"a49d","label":"skip","path":"api/operators/skip","docType":"function"},"0788":{"id":"0788","label":"基于给定的数量","options":["a49d"]},"cfc6":{"id":"cfc6","label":"skipWhile","path":"api/operators/skipWhile","docType":"function"},"0446":{"id":"0446","label":"从此 Observable 的首部","options":["0788","9259"]},"ee69":{"id":"ee69","label":"从此 Observable 的尾部","options":["5176"]},"13e6":{"id":"13e6","label":"skipUntil","path":"api/operators/skipUntil","docType":"function"},"6c0b":{"id":"6c0b","label":"直到另一个 Observable 发送了值","options":["13e6"]},"0137":{"id":"0137","label":"distinctUntilChanged","path":"api/operators/distinctUntilChanged","docType":"function"},"44e2":{"id":"44e2","label":"发送恰好在当前值前面的那个","options":["0137"]},"0259":{"id":"0259","label":"以前任何时候曾发送过","options":["8411"]},"0da6":{"id":"0da6","label":"根据值是否相等","options":["44e2","0259"]},"fb3d":{"id":"fb3d","label":"发送恰好在当前值前面的那个","options":["2308"]},"bda0":{"id":"bda0","label":"根据一个某个键或对象属性","options":["fb3d"]},"a0eb":{"id":"a0eb","label":"与某些以前发送的值匹配","options":["0da6","bda0"]},"59f6":{"id":"59f6","label":"throttle","path":"api/operators/throttle","docType":"function"},"ab7c":{"id":"ab7c","label":"这个时间窗口是基于另一个 Observable 的发送情况","options":["59f6"]},"338a":{"id":"338a","label":"throttleTime","path":"api/operators/throttleTime","docType":"function"},"c2e1":{"id":"c2e1","label":"发送每个时间窗口中的第一个值","options":["ab7c","5384"]},"9f18":{"id":"9f18","label":"audit","path":"api/operators/audit","docType":"function"},"86a7":{"id":"86a7","label":"这个时间窗口是根据某个时长来决定的","options":["9077"]},"c817":{"id":"c817","label":"发送每个时间窗口中的最后一个值","options":["2588","86a7"]},"67b9":{"id":"67b9","label":"debounce","path":"api/operators/debounce","docType":"function"},"6dff":{"id":"6dff","label":"此平静的间隔阈值由另一个 Observable 决定","options":["67b9"]},"bfd1":{"id":"bfd1","label":"debounceTime","path":"api/operators/debounceTime","docType":"function"},"cf15":{"id":"cf15","label":"此平静的间隔阈值是根据某个时长决定的","options":["bfd1"]},"27a8":{"id":"27a8","label":"发生的过于频繁","options":["c2e1","c817","3889"]},"1a2c":{"id":"1a2c","label":"我要忽略某些值","options":["7630","0446","ee69","6c0b","a0eb","27a8"]},"1c68":{"id":"1c68","label":"reduce","path":"api/operators/reduce","docType":"function"},"2b46":{"id":"2b46","label":"并且只输出最终计算出的值","options":["1c68"]},"f570":{"id":"f570","label":"scan","path":"api/operators/scan","docType":"function"},"39fb":{"id":"39fb","label":"并且每当来源发送某个值时就输出计算好的值","options":["f570"]},"f88c":{"id":"f88c","label":"mergeScan","path":"api/operators/mergeScan","docType":"function"},"a27b":{"id":"a27b","label":"并且当来源发送某个值时，就把计算好的值输出为一个嵌套 Observable","options":["f88c"]},"e679":{"id":"e679","label":"switchScan","path":"api/operators/switchScan","docType":"function"},"ea8e":{"id":"ea8e","label":"并且每当来源发送某个值时，就把计算好的值输出为一个嵌套 Observable，同时取消对前一个嵌套 Observable 的订阅","options":["e679"]},"cf93":{"id":"cf93","label":"我要使用已发送的所有值做某种计算","options":["2b46","39fb","a27b","ea8e"]},"b899":{"id":"b899","label":"materialize","path":"api/operators/materialize","docType":"function"},"90de":{"id":"90de","label":"此元数据描述每个通知（next、error 或 complete）","options":["b899"]},"7fc5":{"id":"7fc5","label":"timeInterval","path":"api/operators/timeInterval","docType":"function"},"c837":{"id":"c837","label":"次元数据包含从最后一次发送值开始已过去时间","options":["7fc5"]},"9ae9":{"id":"9ae9","label":"我要用元数据包装它的各个消息","options":["90de","c837"]},"6ab8":{"id":"6ab8","label":"timeout","path":"api/operators/timeout","docType":"function"},"eb34":{"id":"eb34","label":"我要抛出一个错误","options":["6ab8"]},"d2b7":{"id":"d2b7","label":"timeoutWith","path":"api/operators/timeoutWith","docType":"function"},"9bd8":{"id":"9bd8","label":"我要切换到另一个 Observable","options":["d2b7"]},"a94e":{"id":"a94e","label":"在某个非交互式间隔之后","options":["eb34","9bd8"]},"af13":{"id":"af13","label":"single","path":"api/operators/single","docType":"function"},"d591":{"id":"d591","label":"我要确保只有一个值","options":["af13"]},"18eb":{"id":"18eb","label":"count","path":"api/operators/count","docType":"function"},"f1a4":{"id":"f1a4","label":"我要知道它发送了多少个值","options":["18eb"]},"53a5":{"id":"53a5","label":"startWith"},"9d09":{"id":"9d09","label":"我要在开头放一个值","options":["53a5"]},"d91c":{"id":"d91c","label":"delay","path":"api/operators/delay","docType":"function"},"eb4d":{"id":"eb4d","label":"基于给定的时间","options":["d91c"]},"059f":{"id":"059f","label":"delayWhen","path":"api/operators/delayWhen","docType":"function"},"1bc4":{"id":"1bc4","label":"基于另一个 Observable 的发送情况","options":["059f"]},"ee5d":{"id":"ee5d","label":"我要延迟后再发送","options":["eb4d","1bc4"]},"7ac5":{"id":"7ac5","label":"toArray","path":"api/operators/toArray","docType":"function"},"bcb7":{"id":"bcb7","label":"Observable","path":"api/index/class/Observable","docType":"class","method":"toPromise"},"da9f":{"id":"da9f","label":"并且转换为 Promise","options":["bcb7"]},"76fe":{"id":"76fe","label":"直到此 Observable 完成","options":["5442","da9f"]},"3ac0":{"id":"3ac0","label":"pairwise","path":"api/operators/pairwise","docType":"function"},"d91d":{"id":"d91d","label":"连续配对，作为数组","options":["3ac0"]},"bdd8":{"id":"bdd8","label":"partition","path":"api/index/function/partition","docType":"function"},"8e2d":{"id":"8e2d","label":"基于某种标准，并且输出两个 Observable：那些符合此标准的，和不符合此标准的","options":["bdd8"]},"5bd5":{"id":"5bd5","label":"bufferCount","path":"api/operators/bufferCount","docType":"function"},"1c59":{"id":"1c59","label":"并且把分好的组以数组形式发送","options":["5bd5"]},"8e8a":{"id":"8e8a","label":"windowCount","path":"api/operators/windowCount","docType":"function"},"b0a6":{"id":"b0a6","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["8e8a"]},"0f9e":{"id":"0f9e","label":"根据特定大小的批次","options":["1c59","b0a6"]},"9d11":{"id":"9d11","label":"bufferTime","path":"api/operators/bufferTime","docType":"function"},"f133":{"id":"f133","label":"并且把分好的组以数组的形式发送","options":["9d11"]},"a013":{"id":"a013","label":"windowTime","path":"api/operators/windowTime","docType":"function"},"9e81":{"id":"9e81","label":"基于时间","options":["f133","5817"]},"6c13":{"id":"6c13","label":"buffer","path":"api/operators/buffer","docType":"function"},"1dd5":{"id":"1dd5","label":"并且把分好的组以数组的形式发送","options":["6c13"]},"bac8":{"id":"bac8","label":"window","path":"api/operators/window","docType":"function"},"3ed9":{"id":"3ed9","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["bac8"]},"236e":{"id":"236e","label":"直到另一个 Observable 发送了值","options":["1dd5","3ed9"]},"27dd":{"id":"27dd","label":"bufferWhen","path":"api/operators/bufferWhen","docType":"function"},"77b9":{"id":"77b9","label":"并且把分好的组以数组的形式发送","options":["27dd"]},"8c2f":{"id":"8c2f","label":"windowWhen","path":"api/operators/windowWhen","docType":"function"},"f5c3":{"id":"f5c3","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["8c2f"]},"d6a4":{"id":"d6a4","label":"基于某个按需创建的 Observable 的发送情况","options":["77b9","f5c3"]},"5f99":{"id":"5f99","label":"bufferToggle","path":"api/operators/bufferToggle","docType":"function"},"102b":{"id":"102b","label":"windowToggle","path":"api/operators/windowToggle","docType":"function"},"63a4":{"id":"63a4","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["102b"]},"dc44":{"id":"dc44","label":"基于另一个 Observable 开始一组，并基于第三个 Observable 结束这一组","options":["8009","63a4"]},"6ae0":{"id":"6ae0","label":"groupBy","path":"api/operators/groupBy","docType":"function"},"c87f":{"id":"c87f","label":"基于根据已发送的值计算出的一个键","options":["6ae0"]},"cf64":{"id":"cf64","label":"我要对这些值进行分组","options":["76fe","d91d","8e2d","0f9e","9e81","236e","d6a4","dc44","c87f"]},"e9be":{"id":"e9be","label":"mergeMapTo","path":"api/operators/mergeMapTo","docType":"function"},"f23a":{"id":"f23a","label":"这里的嵌套 Observable 对每个值都是一样的","options":["e9be"]},"1c44":{"id":"1c44","label":"这里的嵌套 Observable 是根据每个值现计算的","options":["8146"]},"b837":{"id":"b837","label":"并且并行发送全部嵌套 Observable 所发送的值","options":["f23a","1c44"]},"af9d":{"id":"af9d","label":"concatMapTo","path":"api/operators/concatMapTo","docType":"function"},"86ef":{"id":"86ef","label":"这里的嵌套 Observable 对每个值都是一样的","options":["af9d"]},"80b4":{"id":"80b4","label":"concatMap","path":"api/operators/concatMap","docType":"function"},"4c61":{"id":"4c61","label":"这里的嵌套 Observable 是根据每个值现计算的","options":["80b4"]},"2ab6":{"id":"2ab6","label":"并且依次发送每个嵌套 Observable 所发送的值","options":["86ef","4c61"]},"f8dc":{"id":"f8dc","label":"这里的嵌套 Observable 对每个值都是一样的","options":["5884"]},"bcaf":{"id":"bcaf","label":"switchMap","path":"api/operators/switchMap","docType":"function"},"ce64":{"id":"ce64","label":"这里的嵌套 Observable 是根据每个值现计算的","options":["bcaf"]},"79eb":{"id":"79eb","label":"并且当新值抵达时，取消前一个嵌套 Observable","options":["f8dc","ce64"]},"108b":{"id":"108b","label":"exhaustMap","path":"api/operators/exhaustMap","docType":"function"},"bcd2":{"id":"bcd2","label":"并且即使当前的嵌套 Observable 尚未完结，也要忽略进来的值","options":["108b"]},"292f":{"id":"292f","label":"expand","path":"api/operators/expand","docType":"function"},"a072":{"id":"a072","label":"并且对每一个新值递归启动一个新的 Observable","options":["292f"]},"7b46":{"id":"7b46","label":"我要为每个值开始一个新的 Observable","options":["b837","2ab6","79eb","bcd2","a072"]},"fd7d":{"id":"fd7d","label":"pipe","path":"api/index/function/pipe","docType":"function"},"344a":{"id":"344a","label":"share","path":"api/operators/share","docType":"function"},"e549":{"id":"e549","label":"并且在第一个订阅者抵达时尽快启动","options":["344a"]},"42a1":{"id":"42a1","label":"publish"},"b0a4":{"id":"b0a4","label":"并且手动或用程序启动它","options":["42a1"]},"788f":{"id":"788f","label":"使用常规 Subject","options":["e549","b0a4"]},"11b3":{"id":"11b3","label":"publishBehavior"},"0406":{"id":"0406","label":"使用 BehaviorSubject","options":["11b3"]},"f03e":{"id":"f03e","label":"publishReplay"},"3bd0":{"id":"3bd0","label":"使用 ReplaySubject","options":["f03e"]},"e8de":{"id":"e8de","label":"publishLast"},"9b7f":{"id":"9b7f","label":"使用 AsyncSubject","options":["e8de"]},"4e57":{"id":"4e57","label":"multicast"},"7de1":{"id":"7de1","label":"catchError","path":"api/operators/catchError","docType":"function"},"4fb3":{"id":"4fb3","label":"立即","options":["2428"]},"6f46":{"id":"6f46","label":"当另一个 Observable 发送值的时候","options":["9914"]},"fc52":{"id":"fc52","label":"我要重新订阅","options":["4fb3","6f46"]},"e479":{"id":"e479","label":"当发生错误时","options":["9255","fc52"]},"3d51":{"id":"3d51","label":"立即","options":["3497"]},"e695":{"id":"e695","label":"repeatWhen","path":"api/operators/repeatWhen","docType":"function"},"7f24":{"id":"7f24","label":"当另一个 Observable 发送值的时候","options":["e695"]},"08b3":{"id":"08b3","label":"我要重新订阅","options":["3d51","7f24"]},"230c":{"id":"230c","label":"concat","path":"api/index/function/concat","docType":"function"},"6f52":{"id":"6f52","label":"我要启动一个新的 Observable","options":["230c"]},"0bd7":{"id":"0bd7","label":"finalize","path":"api/operators/finalize","docType":"function"},"bc6b":{"id":"bc6b","label":"当它完成、出错或退订时，我要执行某个函数","options":["0bd7"]},"ceed":{"id":"ceed","label":"subscribeOn","path":"api/operators/subscribeOn","docType":"function"},"c6a5":{"id":"c6a5","label":"它会修改从调用到订阅之间的路由","options":["ceed"]},"d384":{"id":"d384","label":"observeOn","path":"api/operators/observeOn","docType":"function"},"20ae":{"id":"20ae","label":"它会修改从发送值到 Observer 之间的路由","options":["d384"]},"2c5a":{"id":"2c5a","label":"我要更改调度器（Scheduler）","options":["c6a5","20ae"]},"6efe":{"id":"6efe","label":"race","path":"api/index/function/race","docType":"function"},"1a55":{"id":"1a55","label":"我只想从首先发送值的 Observable 接收各个值","options":["6efe"]},"39ec":{"id":"39ec","label":"merge","path":"api/index/function/merge","docType":"function"},"a0a1":{"id":"a0a1","label":"我要输出所有值，而不管是从哪一个发送的","options":["39ec"]},"a6f5":{"id":"a6f5","label":"combineLatest","path":"api/index/function/combineLatest","docType":"function"},"bcc3":{"id":"bcc3","label":"当任何一个来源发送值的时候，使用每个来源发送的最后一个值","options":["a6f5"]},"c4b9":{"id":"c4b9","label":"withLatestFrom","path":"api/operators/withLatestFrom","docType":"function"},"93e4":{"id":"93e4","label":"仅当主 Observable 发送值的时候，使用每个来源发送的最后一个值","options":["c4b9"]},"33cd":{"id":"33cd","label":"zip","path":"api/index/function/zip","docType":"function"},"636b":{"id":"636b","label":"每个来源中的每个值仅使用一次","options":["33cd"]},"0374":{"id":"0374","label":"我要输出根据源 Observer 发送的值计算出来的某个值","options":["bcc3","93e4","636b"]},"2bfd":{"id":"2bfd","label":"我要把这个 Observable 和其它的合并，并且","options":["1a55","a0a1","0374"]},"d5f3":{"id":"d5f3","label":"我已经有一个 Observable，并且","options":["4757","54e2","d31c","10f6","1a2c","cf93","9ae9","a94e","d591","f1a4","9d09","ee5d","cf64","7b46","1423","1084","e479","3323","bc6b","2c5a","2bfd"]},"0477":{"id":"0477","label":"forkJoin","path":"api/index/function/forkJoin","docType":"function"},"c978":{"id":"c978","label":"我要输出所有值，而不管是从哪一个发送的","options":["1959"]},"ccd1":{"id":"ccd1","label":"combineLatest","path":"api/index/function/combineLatest","docType":"function"},"0ab1":{"id":"0ab1","label":"当任何一个来源发送值的时候，使用每个来源发送的最后一个值","options":["ccd1"]},"9eca":{"id":"9eca","label":"zip","path":"api/index/function/zip","docType":"function"},"26c4":{"id":"26c4","label":"每个来源中的每个值仅使用一次","options":["9eca"]},"642b":{"id":"642b","label":"我要输出根据源 Observer 发送的值计算出来的某个值","options":["0ab1","26c4"]},"ef03":{"id":"ef03","label":"concat","path":"api/index/function/concat","docType":"function"},"ba89":{"id":"ba89","label":"我要依次订阅它们","options":["ef03"]},"c294":{"id":"c294","label":"我已经有了由某些 Observable 组合成的单一 Observable，并且","options":["3781","3341","c978","642b","ba89"]},"99df":{"id":"99df","label":"Observable","path":"api/index/class/Observable","docType":"class","method":"create"},"ec0a":{"id":"ec0a","label":"使用自定义逻辑","options":["99df"]},"0bbb":{"id":"0bbb","label":"generate","path":"api/index/function/generate","docType":"function"},"fbef":{"id":"fbef","label":"使用一个类似于 for 循环的状态机","options":["0bbb"]},"7f6c":{"id":"7f6c","label":"throwError","path":"api/index/function/throwError","docType":"function"},"bc2e":{"id":"bc2e","label":"抛出一个错误","options":["7f6c"]},"0d72":{"id":"0d72","label":"EMPTY","path":"api/index/const/EMPTY","docType":"const"},"0520":{"id":"0520","label":"只完成它，而不发送任何值","options":["0d72"]},"cd5a":{"id":"cd5a","label":"NEVER","path":"api/index/const/NEVER","docType":"const"},"19f1":{"id":"19f1","label":"永远不会发送任何东西","options":["cd5a"]},"e11a":{"id":"e11a","label":"fromEvent","path":"api/index/function/fromEvent","docType":"function"},"f517":{"id":"f517","label":"来自 DOM 或 Node.js 或类似的东西","options":["e11a"]},"aafc":{"id":"aafc","label":"fromEventPattern","path":"api/index/function/fromEventPattern","docType":"function"},"a57f":{"id":"a57f","label":"它使用某个 API 来添加或移除事件处理器","options":["aafc"]},"6eaa":{"id":"6eaa","label":"从一个现有的事件源","options":["f517","a57f"]},"604f":{"id":"604f","label":"from","path":"api/index/function/from","docType":"function"},"ca78":{"id":"ca78","label":"来自某个 Promise 或事件源","options":["604f"]},"f1f4":{"id":"f1f4","label":"from","path":"api/index/function/from","docType":"function"},"71e4":{"id":"71e4","label":"针对某个数组中的那些值","options":["f1f4"]},"47eb":{"id":"47eb","label":"range","path":"api/index/function/range","docType":"function"},"ca7a":{"id":"ca7a","label":"针对某个数字范围内的那些值","options":["47eb"]},"eb04":{"id":"eb04","label":"of"},"a2f2":{"id":"a2f2","label":"针对通过参数给出的那些值","options":["eb04"]},"53ed":{"id":"53ed","label":"它是可迭代者","options":["71e4","ca7a","a2f2"]},"e35c":{"id":"e35c","label":"interval","path":"api/index/function/interval","docType":"function"},"89ac":{"id":"89ac","label":"均匀的","options":["e35c"]},"5e96":{"id":"5e96","label":"timer","path":"api/index/function/timer","docType":"function"},"8af0":{"id":"8af0","label":"带有一个可选的首次延迟","options":["5e96"]},"0655":{"id":"0655","label":"它基于定时器发送一些值","options":["89ac","8af0"]},"e2b8":{"id":"e2b8","label":"defer","path":"api/index/function/defer","docType":"function"},"8ac8":{"id":"8ac8","label":"它在被订阅时才按需创建","options":["e2b8"]},"0b04":{"id":"0b04","label":"我要创建一个新的 Observable","options":["ec0a","fbef","bc2e","0520","19f1","6eaa","ca78","53ed","0655","8ac8"]},"a2ff":{"id":"a2ff","label":"bindCallback","path":"api/index/function/bindCallback","docType":"function"},"a1b9":{"id":"a1b9","label":"支持常规的回调 API","options":["a2ff"]},"5c3e":{"id":"5c3e","label":"bindNodeCallback","path":"api/index/function/bindNodeCallback","docType":"function"},"0792":{"id":"0792","label":"支持 Node.js 风格的回调 API","options":["5c3e"]},"9f2c":{"id":"9f2c","label":"我还没有任何 Observable，并且","options":["0b04","1130"]},"initial":{"id":"initial","options":["d5f3","c294","9f2c"]}}