{"1104":{"id":"1104","label":"bufferWhen","path":"api/operators/bufferWhen","docType":"function"},"1224":{"id":"1224","label":"distinct","path":"api/operators/distinct","docType":"function"},"1241":{"id":"1241","label":"它会修改从发送值到 Observer 之间的路由","options":["9028"]},"1643":{"id":"1643","label":"我要把它发送的每个值改成","options":["06fb","e52a"]},"2097":{"id":"2097","label":"基于另一个 Observable 开始一组，并基于第三个 Observable 结束这一组","options":["9933","0e85"]},"2212":{"id":"2212","label":"根据特定大小的批次","options":["30f4","55c2"]},"2434":{"id":"2434","label":"根据一个某个键或对象属性","options":["a68a"]},"2481":{"id":"2481","label":"并且手动或用程序启动它","options":["cc42"]},"2873":{"id":"2873","label":"使用 AsyncSubject","options":["724c"]},"3256":{"id":"3256","label":"我要执行自定义操作","options":["93b8"]},"4502":{"id":"4502","label":"基于给定的数量","options":["f8db"]},"4700":{"id":"4700","label":"当另一个 Observable 发送值的时候","options":["76be"]},"4833":{"id":"4833","label":"throttleTime","path":"api/operators/throttleTime","docType":"function"},"5256":{"id":"5256","label":"基于给定的数量","options":["1c13"]},"6064":{"id":"6064","label":"我要从它发送的每个值中取出一个属性","options":["8d7a"]},"6275":{"id":"6275","label":"zip","path":"api/index/function/zip","docType":"function"},"6334":{"id":"6334","label":"根据值是否相等","options":["87de","8032"]},"6479":{"id":"6479","label":"我已经有一个 Observable，并且","options":["1643","6064","75f6","f656","6959","cff0","a0ce","f72e","7729","2e72","d605","dd4a","64b6","70a9","3256","a98c","fa04","80cf","c20b","3cee","a08d"]},"6833":{"id":"6833","label":"defer","path":"api/index/function/defer","docType":"function"},"6959":{"id":"6959","label":"我要忽略某些值","options":["82f7","fe10","b715","6cea","ed4f","976c"]},"7148":{"id":"7148","label":"这个时间窗口是根据某个时长来决定的","options":["4833"]},"7405":{"id":"7405","label":"count","path":"api/operators/count","docType":"function"},"7460":{"id":"7460","label":"bufferToggle","path":"api/operators/bufferToggle","docType":"function"},"7705":{"id":"7705","label":"publishBehavior"},"7729":{"id":"7729","label":"我要确保只有一个值","options":["ded3"]},"7792":{"id":"7792","label":"toArray","path":"api/operators/toArray","docType":"function"},"8032":{"id":"8032","label":"以前任何时候曾发送过","options":["1224"]},"8081":{"id":"8081","label":"来自 DOM 或 Node.js 或类似的东西","options":["56a6"]},"8346":{"id":"8346","label":"我要依次订阅它们","options":["4e50"]},"8387":{"id":"8387","label":"bindCallback","path":"api/index/function/bindCallback","docType":"function"},"8674":{"id":"8674","label":"generate","path":"api/index/function/generate","docType":"function"},"8802":{"id":"8802","label":"连续配对，作为数组","options":["34d2"]},"8818":{"id":"8818","label":"如果它们位于此 Observable 的首部","options":["9e8e","feee","d129"]},"9028":{"id":"9028","label":"observeOn","path":"api/operators/observeOn","docType":"function"},"9061":{"id":"9061","label":"skipUntil","path":"api/operators/skipUntil","docType":"function"},"9270":{"id":"9270","label":"subscribeOn","path":"api/operators/subscribeOn","docType":"function"},"9386":{"id":"9386","label":"switchMapTo","path":"api/operators/switchMapTo","docType":"function"},"9933":{"id":"9933","label":"并且把分好的组以数组的形式发送","options":["7460"]},"f1ea":{"id":"f1ea","label":"mapTo","path":"api/operators/mapTo","docType":"function"},"06fb":{"id":"06fb","label":"一个常量值","options":["f1ea"]},"1fb7":{"id":"1fb7","label":"map","path":"api/operators/map","docType":"function"},"e52a":{"id":"e52a","label":"一个通过公式算出来的值","options":["1fb7"]},"8d7a":{"id":"8d7a","label":"pluck"},"1c5a":{"id":"1c5a","label":"tap","path":"api/operators/tap","docType":"function"},"75f6":{"id":"75f6","label":"我要监听即将发送的值，但不想影响它们","options":["1c5a"]},"2a14":{"id":"2a14","label":"filter","path":"api/operators/filter","docType":"function"},"f17a":{"id":"f17a","label":"基于自定义逻辑","options":["2a14"]},"5d4a":{"id":"5d4a","label":"first","path":"api/operators/first","docType":"function"},"9e8e":{"id":"9e8e","label":"并且只要第一个值","options":["5d4a"]},"558b":{"id":"558b","label":"take","path":"api/operators/take","docType":"function"},"feee":{"id":"feee","label":"基于给定的数量","options":["558b"]},"d337":{"id":"d337","label":"takeWhile","path":"api/operators/takeWhile","docType":"function"},"d129":{"id":"d129","label":"基于自定义逻辑","options":["d337"]},"5b7a":{"id":"5b7a","label":"elementAt","path":"api/operators/elementAt","docType":"function"},"fe75":{"id":"fe75","label":"如果它们精确的处于第 n 位","options":["5b7a"]},"792a":{"id":"792a","label":"last","path":"api/operators/last","docType":"function"},"d1bb":{"id":"d1bb","label":"并且只要最后一个值","options":["792a"]},"f8db":{"id":"f8db","label":"takeLast","path":"api/operators/takeLast","docType":"function"},"3cdf":{"id":"3cdf","label":"如果它们位于此 Observable 的尾部","options":["d1bb","4502"]},"21df":{"id":"21df","label":"takeUntil","path":"api/operators/takeUntil","docType":"function"},"00c2":{"id":"00c2","label":"直到另一个 Observable 发送了值","options":["21df"]},"f656":{"id":"f656","label":"我要只允许部分值通过","options":["f17a","8818","fe75","3cdf","00c2"]},"ff51":{"id":"ff51","label":"ignoreElements","path":"api/operators/ignoreElements","docType":"function"},"82f7":{"id":"82f7","label":"全部","options":["ff51"]},"1c13":{"id":"1c13","label":"skip","path":"api/operators/skip","docType":"function"},"0a58":{"id":"0a58","label":"skipWhile","path":"api/operators/skipWhile","docType":"function"},"756b":{"id":"756b","label":"基于自定义逻辑","options":["0a58"]},"fe10":{"id":"fe10","label":"从此 Observable 的首部","options":["5256","756b"]},"ee4c":{"id":"ee4c","label":"skipLast","path":"api/operators/skipLast","docType":"function"},"b715":{"id":"b715","label":"从此 Observable 的尾部","options":["ee4c"]},"6cea":{"id":"6cea","label":"直到另一个 Observable 发送了值","options":["9061"]},"ff0a":{"id":"ff0a","label":"distinctUntilChanged","path":"api/operators/distinctUntilChanged","docType":"function"},"87de":{"id":"87de","label":"发送恰好在当前值前面的那个","options":["ff0a"]},"880f":{"id":"880f","label":"distinctUntilKeyChanged","path":"api/operators/distinctUntilKeyChanged","docType":"function"},"a68a":{"id":"a68a","label":"发送恰好在当前值前面的那个","options":["880f"]},"ed4f":{"id":"ed4f","label":"与某些以前发送的值匹配","options":["6334","2434"]},"f490":{"id":"f490","label":"throttle","path":"api/operators/throttle","docType":"function"},"228b":{"id":"228b","label":"这个时间窗口是基于另一个 Observable 的发送情况","options":["f490"]},"a238":{"id":"a238","label":"发送每个时间窗口中的第一个值","options":["228b","7148"]},"23f6":{"id":"23f6","label":"audit","path":"api/operators/audit","docType":"function"},"420c":{"id":"420c","label":"这个时间窗口是基于另一个 Observable 的发送情况","options":["23f6"]},"f5c2":{"id":"f5c2","label":"auditTime","path":"api/operators/auditTime","docType":"function"},"1f8c":{"id":"1f8c","label":"这个时间窗口是根据某个时长来决定的","options":["f5c2"]},"658a":{"id":"658a","label":"发送每个时间窗口中的最后一个值","options":["420c","1f8c"]},"fec1":{"id":"fec1","label":"debounce","path":"api/operators/debounce","docType":"function"},"736f":{"id":"736f","label":"此平静的间隔阈值由另一个 Observable 决定","options":["fec1"]},"ef08":{"id":"ef08","label":"debounceTime","path":"api/operators/debounceTime","docType":"function"},"802c":{"id":"802c","label":"此平静的间隔阈值是根据某个时长决定的","options":["ef08"]},"3b32":{"id":"3b32","label":"等足够平静时就发送最后一个值","options":["736f","802c"]},"976c":{"id":"976c","label":"发生的过于频繁","options":["a238","658a","3b32"]},"6ca5":{"id":"6ca5","label":"reduce","path":"api/operators/reduce","docType":"function"},"d25f":{"id":"d25f","label":"并且只输出最终计算出的值","options":["6ca5"]},"c22e":{"id":"c22e","label":"scan","path":"api/operators/scan","docType":"function"},"4d98":{"id":"4d98","label":"并且每当来源发送某个值时就输出计算好的值","options":["c22e"]},"2e8a":{"id":"2e8a","label":"mergeScan","path":"api/operators/mergeScan","docType":"function"},"ee33":{"id":"ee33","label":"并且当来源发送某个值时，就把计算好的值输出为一个嵌套 Observable","options":["2e8a"]},"7b19":{"id":"7b19","label":"switchScan","path":"api/operators/switchScan","docType":"function"},"3a77":{"id":"3a77","label":"并且每当来源发送某个值时，就把计算好的值输出为一个嵌套 Observable，同时取消对前一个嵌套 Observable 的订阅","options":["7b19"]},"cff0":{"id":"cff0","label":"我要使用已发送的所有值做某种计算","options":["d25f","4d98","ee33","3a77"]},"ecff":{"id":"ecff","label":"materialize","path":"api/operators/materialize","docType":"function"},"0709":{"id":"0709","label":"此元数据描述每个通知（next、error 或 complete）","options":["ecff"]},"0d63":{"id":"0d63","label":"timeInterval","path":"api/operators/timeInterval","docType":"function"},"ff11":{"id":"ff11","label":"次元数据包含从最后一次发送值开始已过去时间","options":["0d63"]},"a0ce":{"id":"a0ce","label":"我要用元数据包装它的各个消息","options":["0709","ff11"]},"e871":{"id":"e871","label":"timeout","path":"api/operators/timeout","docType":"function"},"3b8a":{"id":"3b8a","label":"我要抛出一个错误","options":["e871"]},"0be5":{"id":"0be5","label":"timeoutWith","path":"api/operators/timeoutWith","docType":"function"},"941d":{"id":"941d","label":"我要切换到另一个 Observable","options":["0be5"]},"f72e":{"id":"f72e","label":"在某个非交互式间隔之后","options":["3b8a","941d"]},"ded3":{"id":"ded3","label":"single","path":"api/operators/single","docType":"function"},"2e72":{"id":"2e72","label":"我要知道它发送了多少个值","options":["7405"]},"03d2":{"id":"03d2","label":"startWith"},"d605":{"id":"d605","label":"我要在开头放一个值","options":["03d2"]},"b449":{"id":"b449","label":"delay","path":"api/operators/delay","docType":"function"},"15a1":{"id":"15a1","label":"基于给定的时间","options":["b449"]},"dd09":{"id":"dd09","label":"delayWhen","path":"api/operators/delayWhen","docType":"function"},"61c1":{"id":"61c1","label":"基于另一个 Observable 的发送情况","options":["dd09"]},"dd4a":{"id":"dd4a","label":"我要延迟后再发送","options":["15a1","61c1"]},"3a43":{"id":"3a43","label":"并转换为数组","options":["7792"]},"d51e":{"id":"d51e","label":"Observable","path":"api/index/class/Observable","docType":"class","method":"toPromise"},"92cb":{"id":"92cb","label":"并且转换为 Promise","options":["d51e"]},"9c36":{"id":"9c36","label":"直到此 Observable 完成","options":["3a43","92cb"]},"34d2":{"id":"34d2","label":"pairwise","path":"api/operators/pairwise","docType":"function"},"ed18":{"id":"ed18","label":"partition","path":"api/index/function/partition","docType":"function"},"c924":{"id":"c924","label":"基于某种标准，并且输出两个 Observable：那些符合此标准的，和不符合此标准的","options":["ed18"]},"bf74":{"id":"bf74","label":"bufferCount","path":"api/operators/bufferCount","docType":"function"},"30f4":{"id":"30f4","label":"并且把分好的组以数组形式发送","options":["bf74"]},"0d9b":{"id":"0d9b","label":"windowCount","path":"api/operators/windowCount","docType":"function"},"55c2":{"id":"55c2","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["0d9b"]},"4d9c":{"id":"4d9c","label":"bufferTime","path":"api/operators/bufferTime","docType":"function"},"6a6b":{"id":"6a6b","label":"并且把分好的组以数组的形式发送","options":["4d9c"]},"de4d":{"id":"de4d","label":"windowTime","path":"api/operators/windowTime","docType":"function"},"ad64":{"id":"ad64","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["de4d"]},"21d7":{"id":"21d7","label":"基于时间","options":["6a6b","ad64"]},"2e69":{"id":"2e69","label":"buffer","path":"api/operators/buffer","docType":"function"},"368e":{"id":"368e","label":"并且把分好的组以数组的形式发送","options":["2e69"]},"e91a":{"id":"e91a","label":"window","path":"api/operators/window","docType":"function"},"8dbb":{"id":"8dbb","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["e91a"]},"2f8b":{"id":"2f8b","label":"直到另一个 Observable 发送了值","options":["368e","8dbb"]},"1c05":{"id":"1c05","label":"并且把分好的组以数组的形式发送","options":["1104"]},"b90c":{"id":"b90c","label":"windowWhen","path":"api/operators/windowWhen","docType":"function"},"9b9f":{"id":"9b9f","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["b90c"]},"a994":{"id":"a994","label":"基于某个按需创建的 Observable 的发送情况","options":["1c05","9b9f"]},"2dba":{"id":"2dba","label":"windowToggle","path":"api/operators/windowToggle","docType":"function"},"0e85":{"id":"0e85","label":"并且把分好的组以嵌套 Observable 的形式发送","options":["2dba"]},"2fb2":{"id":"2fb2","label":"groupBy","path":"api/operators/groupBy","docType":"function"},"891b":{"id":"891b","label":"基于根据已发送的值计算出的一个键","options":["2fb2"]},"64b6":{"id":"64b6","label":"我要对这些值进行分组","options":["9c36","8802","c924","2212","21d7","2f8b","a994","2097","891b"]},"f1dc":{"id":"f1dc","label":"mergeMapTo","path":"api/operators/mergeMapTo","docType":"function"},"646a":{"id":"646a","label":"这里的嵌套 Observable 对每个值都是一样的","options":["f1dc"]},"93f6":{"id":"93f6","label":"mergeMap","path":"api/operators/mergeMap","docType":"function"},"ab94":{"id":"ab94","label":"这里的嵌套 Observable 是根据每个值现计算的","options":["93f6"]},"953e":{"id":"953e","label":"并且并行发送全部嵌套 Observable 所发送的值","options":["646a","ab94"]},"a82e":{"id":"a82e","label":"concatMapTo","path":"api/operators/concatMapTo","docType":"function"},"a315":{"id":"a315","label":"这里的嵌套 Observable 对每个值都是一样的","options":["a82e"]},"8f4f":{"id":"8f4f","label":"concatMap","path":"api/operators/concatMap","docType":"function"},"97e0":{"id":"97e0","label":"这里的嵌套 Observable 是根据每个值现计算的","options":["8f4f"]},"cd17":{"id":"cd17","label":"并且依次发送每个嵌套 Observable 所发送的值","options":["a315","97e0"]},"35c8":{"id":"35c8","label":"这里的嵌套 Observable 对每个值都是一样的","options":["9386"]},"06cf":{"id":"06cf","label":"switchMap","path":"api/operators/switchMap","docType":"function"},"5e5f":{"id":"5e5f","label":"这里的嵌套 Observable 是根据每个值现计算的","options":["06cf"]},"97df":{"id":"97df","label":"并且当新值抵达时，取消前一个嵌套 Observable","options":["35c8","5e5f"]},"338a":{"id":"338a","label":"exhaustMap","path":"api/operators/exhaustMap","docType":"function"},"3a23":{"id":"3a23","label":"并且即使当前的嵌套 Observable 尚未完结，也要忽略进来的值","options":["338a"]},"92bd":{"id":"92bd","label":"expand","path":"api/operators/expand","docType":"function"},"646e":{"id":"646e","label":"并且对每一个新值递归启动一个新的 Observable","options":["92bd"]},"70a9":{"id":"70a9","label":"我要为每个值开始一个新的 Observable","options":["953e","cd17","97df","3a23","646e"]},"93b8":{"id":"93b8","label":"pipe","path":"api/index/function/pipe","docType":"function"},"49cc":{"id":"49cc","label":"share","path":"api/operators/share","docType":"function"},"e310":{"id":"e310","label":"并且在第一个订阅者抵达时尽快启动","options":["49cc"]},"cc42":{"id":"cc42","label":"publish"},"4f73":{"id":"4f73","label":"使用常规 Subject","options":["e310","2481"]},"621b":{"id":"621b","label":"使用 BehaviorSubject","options":["7705"]},"6f7f":{"id":"6f7f","label":"publishReplay"},"03ef":{"id":"03ef","label":"使用 ReplaySubject","options":["6f7f"]},"724c":{"id":"724c","label":"publishLast"},"598a":{"id":"598a","label":"multicast"},"0e08":{"id":"0e08","label":"使用某种特殊的 Subject 实现","options":["598a"]},"a98c":{"id":"a98c","label":"我要在多个订阅者之间共享某个订阅","options":["4f73","621b","03ef","2873","0e08"]},"0049":{"id":"0049","label":"catchError","path":"api/operators/catchError","docType":"function"},"d58e":{"id":"d58e","label":"我要启动一个新的 Observable","options":["0049"]},"2b9f":{"id":"2b9f","label":"retry","path":"api/operators/retry","docType":"function"},"d986":{"id":"d986","label":"立即","options":["2b9f"]},"76be":{"id":"76be","label":"retryWhen","path":"api/operators/retryWhen","docType":"function"},"4cfb":{"id":"4cfb","label":"我要重新订阅","options":["d986","4700"]},"fa04":{"id":"fa04","label":"当发生错误时","options":["d58e","4cfb"]},"5e10":{"id":"5e10","label":"repeat","path":"api/operators/repeat","docType":"function"},"cf7e":{"id":"cf7e","label":"立即","options":["5e10"]},"e639":{"id":"e639","label":"repeatWhen","path":"api/operators/repeatWhen","docType":"function"},"8e7c":{"id":"8e7c","label":"当另一个 Observable 发送值的时候","options":["e639"]},"037e":{"id":"037e","label":"我要重新订阅","options":["cf7e","8e7c"]},"d7e3":{"id":"d7e3","label":"concat","path":"api/index/function/concat","docType":"function"},"0c62":{"id":"0c62","label":"我要启动一个新的 Observable","options":["d7e3"]},"80cf":{"id":"80cf","label":"当它完成时","options":["037e","0c62"]},"8fdb":{"id":"8fdb","label":"finalize","path":"api/operators/finalize","docType":"function"},"c20b":{"id":"c20b","label":"当它完成、出错或退订时，我要执行某个函数","options":["8fdb"]},"da1a":{"id":"da1a","label":"它会修改从调用到订阅之间的路由","options":["9270"]},"3cee":{"id":"3cee","label":"我要更改调度器（Scheduler）","options":["da1a","1241"]},"0d9c":{"id":"0d9c","label":"race","path":"api/index/function/race","docType":"function"},"fc73":{"id":"fc73","label":"我只想从首先发送值的 Observable 接收各个值","options":["0d9c"]},"f6f6":{"id":"f6f6","label":"merge","path":"api/index/function/merge","docType":"function"},"c7cf":{"id":"c7cf","label":"我要输出所有值，而不管是从哪一个发送的","options":["f6f6"]},"ed1d":{"id":"ed1d","label":"combineLatest","path":"api/index/function/combineLatest","docType":"function"},"a33d":{"id":"a33d","label":"当任何一个来源发送值的时候，使用每个来源发送的最后一个值","options":["ed1d"]},"1de6":{"id":"1de6","label":"withLatestFrom","path":"api/operators/withLatestFrom","docType":"function"},"0bed":{"id":"0bed","label":"仅当主 Observable 发送值的时候，使用每个来源发送的最后一个值","options":["1de6"]},"01fe":{"id":"01fe","label":"每个来源中的每个值仅使用一次","options":["6275"]},"37ee":{"id":"37ee","label":"我要输出根据源 Observer 发送的值计算出来的某个值","options":["a33d","0bed","01fe"]},"a08d":{"id":"a08d","label":"我要把这个 Observable 和其它的合并，并且","options":["fc73","c7cf","37ee"]},"e12c":{"id":"e12c","label":"race","path":"api/index/function/race","docType":"function"},"ce84":{"id":"ce84","label":"我只想从首先发送值的 Observable 接收各个值","options":["e12c"]},"c1aa":{"id":"c1aa","label":"forkJoin","path":"api/index/function/forkJoin","docType":"function"},"d461":{"id":"d461","label":"我想在它们全都完成时得到通知","options":["c1aa"]},"e7f8":{"id":"e7f8","label":"merge","path":"api/index/function/merge","docType":"function"},"56f8":{"id":"56f8","label":"我要输出所有值，而不管是从哪一个发送的","options":["e7f8"]},"68a4":{"id":"68a4","label":"combineLatest","path":"api/index/function/combineLatest","docType":"function"},"27cf":{"id":"27cf","label":"当任何一个来源发送值的时候，使用每个来源发送的最后一个值","options":["68a4"]},"2d3d":{"id":"2d3d","label":"zip","path":"api/index/function/zip","docType":"function"},"1e3a":{"id":"1e3a","label":"每个来源中的每个值仅使用一次","options":["2d3d"]},"fdf2":{"id":"fdf2","label":"我要输出根据源 Observer 发送的值计算出来的某个值","options":["27cf","1e3a"]},"4e50":{"id":"4e50","label":"concat","path":"api/index/function/concat","docType":"function"},"f769":{"id":"f769","label":"我已经有了由某些 Observable 组合成的单一 Observable，并且","options":["ce84","d461","56f8","fdf2","8346"]},"53ca":{"id":"53ca","label":"Observable","path":"api/index/class/Observable","docType":"class","method":"create"},"c6c0":{"id":"c6c0","label":"使用自定义逻辑","options":["53ca"]},"cb51":{"id":"cb51","label":"使用一个类似于 for 循环的状态机","options":["8674"]},"3b60":{"id":"3b60","label":"throwError","path":"api/index/function/throwError","docType":"function"},"a8a8":{"id":"a8a8","label":"抛出一个错误","options":["3b60"]},"c58d":{"id":"c58d","label":"EMPTY","path":"api/index/const/EMPTY","docType":"const"},"111d":{"id":"111d","label":"只完成它，而不发送任何值","options":["c58d"]},"5ff6":{"id":"5ff6","label":"NEVER","path":"api/index/const/NEVER","docType":"const"},"46fb":{"id":"46fb","label":"永远不会发送任何东西","options":["5ff6"]},"56a6":{"id":"56a6","label":"fromEvent","path":"api/index/function/fromEvent","docType":"function"},"062a":{"id":"062a","label":"fromEventPattern","path":"api/index/function/fromEventPattern","docType":"function"},"b03e":{"id":"b03e","label":"它使用某个 API 来添加或移除事件处理器","options":["062a"]},"ba83":{"id":"ba83","label":"从一个现有的事件源","options":["8081","b03e"]},"7f23":{"id":"7f23","label":"from","path":"api/index/function/from","docType":"function"},"17bc":{"id":"17bc","label":"来自某个 Promise 或事件源","options":["7f23"]},"562d":{"id":"562d","label":"from","path":"api/index/function/from","docType":"function"},"1d9e":{"id":"1d9e","label":"针对某个数组中的那些值","options":["562d"]},"73e7":{"id":"73e7","label":"range","path":"api/index/function/range","docType":"function"},"19ad":{"id":"19ad","label":"针对某个数字范围内的那些值","options":["73e7"]},"ace3":{"id":"ace3","label":"of"},"031c":{"id":"031c","label":"针对通过参数给出的那些值","options":["ace3"]},"c303":{"id":"c303","label":"它是可迭代者","options":["1d9e","19ad","031c"]},"902b":{"id":"902b","label":"interval","path":"api/index/function/interval","docType":"function"},"d473":{"id":"d473","label":"均匀的","options":["902b"]},"854e":{"id":"854e","label":"timer","path":"api/index/function/timer","docType":"function"},"2b75":{"id":"2b75","label":"带有一个可选的首次延迟","options":["854e"]},"7a40":{"id":"7a40","label":"它基于定时器发送一些值","options":["d473","2b75"]},"0148":{"id":"0148","label":"它在被订阅时才按需创建","options":["6833"]},"29be":{"id":"29be","label":"我要创建一个新的 Observable","options":["c6c0","cb51","a8a8","111d","46fb","ba83","17bc","c303","7a40","0148"]},"337a":{"id":"337a","label":"支持常规的回调 API","options":["8387"]},"e878":{"id":"e878","label":"bindNodeCallback","path":"api/index/function/bindNodeCallback","docType":"function"},"fe04":{"id":"fe04","label":"支持 Node.js 风格的回调 API","options":["e878"]},"0985":{"id":"0985","label":"我要把某个回调函数转换为 Observable","options":["337a","fe04"]},"d9a9":{"id":"d9a9","label":"我还没有任何 Observable，并且","options":["29be","0985"]},"initial":{"id":"initial","options":["6479","f769","d9a9"]}}