{"version":3,"mappings":"4fAoBIA,kBAAuBA,SAAUA,4BAAVA,8BAWrBC,EAXqBD,QAWdE,IAAPD,EAAN,WAhBAE,uBA0CUC,WAAQ,GAoBgBA,0BA9ClC,iCAc2BC,WAGF,OAAOD,KAAKE,SAjBrCC,IA8C4C,SApC/BC,GACTJ,KAAKE,QAAUE,EACfJ,KAAKK,QAAU,CACb,gBAAiBL,KAAKC,OACtB,eAAgBD,KAAKC,UAd3B,gBAuBoDK,WAE7B,OAAON,KAAKO,OAzBnCJ,IAiBqCD,SAI1BE,GACPJ,KAAKO,MAAQH,EACbJ,KAAKQ,SAA2C,IAAjCR,KAAKM,KAAKG,QAAQ,aAvBrC,oBA+B2DC,WAE/B,OAAOV,KAAKW,WAjCxCR,IAyBmCI,SAIpBH,GAEXJ,KAAKW,UAAwB,MAAZP,GAAsC,mBAAfA,KA/B5C,8BAiCwCO,SAIfP,GACrBJ,KAAKU,SAAWN,IAtCpB,+BAsCoBA,SAIMA,GACtBJ,KAAKU,SAAWN,IA3CpB,6BAoDEQ,WACEZ,KAAKa,QAAQC,KAAOd,KAAKe,QAAQC,cAAcC,0CArDnDpB,MAqDmDoB,oCArDtCpB,8BAAoBqB,qDAkDP,MAlDOA,qBAkDpBC,IAAa,wkBA9DtBvB,mBAAoCA,SAAyBA,QAC7DA,0BACAA,6BADSA,gCACCA,oCAAmB,sBAAnBA,CAAmB,sBAAnBA,CAAmB,cAAnBA,CAAmB,kBAAnBA,CAAmB,sBAAnBA,CAAmB,kEAUpBC,GAAbuB,WCpBaC,EAAb,eAAMxB,EALNE,uBAMEC,4BAAoCF,gDADzBD,4DAJF,CAAEyB,KAAcF,QAIdvB,EAAb","names":["e","o","u","constructor","this","header","_header","set","n","classes","path","_path","isAvoid","indexOf","hidecopy","_hidecopy","ngAfterViewInit","aioCode","code","content","nativeElement","innerHTML","selectors","p","m","C","s"],"sources":["webpack:///src/app/custom-elements/code/code-example.component.ts","webpack:///src/app/custom-elements/code/code-example.module.ts"],"sourcesContent":["/* tslint:disable component-selector */\nimport { Component, HostBinding, ElementRef, ViewChild, Input, AfterViewInit } from '@angular/core';\nimport { CodeComponent } from './code.component';\n\n/**\n * An embeddable code block that displays nicely formatted code.\n * Example usage:\n *\n * ```\n * <code-example language=\"ts\" linenums=\"2\" class=\"special\" header=\"Do Stuff\">\n * // a code block\n * console.log('do stuff');\n * </code-example>\n * ```\n */\n@Component({\n  selector: 'code-example',\n  template: `\n    <!-- Content projection is used to get the content HTML provided to this component -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n    <header *ngIf=\"header\">{{header}}</header>\n    <aio-code [ngClass]=\"classes\"\n              [language]=\"language\"\n              [linenums]=\"linenums\"\n              [path]=\"path\"\n              [region]=\"region\"\n              [hideCopy]=\"hidecopy\"\n              [header]=\"header\">\n    </aio-code>\n  `,\n})\nexport class CodeExampleComponent implements AfterViewInit {\n  classes: {};\n\n  @Input() language: string;\n\n  @Input() linenums: string;\n\n  @Input() region: string;\n\n  @Input()\n  set header(header: string) {\n    this._header = header;\n    this.classes = {\n      'headed-code': !!this.header,\n      'simple-code': !this.header,\n    };\n  }\n  get header(): string { return this._header; }\n  private _header: string;\n\n  @Input()\n  set path(path: string) {\n    this._path = path;\n    this.isAvoid = this.path.indexOf('.avoid.') !== -1;\n  }\n  get path(): string { return this._path; }\n  private _path = '';\n\n  @Input()\n  set hidecopy(hidecopy: boolean) {\n    // Coerce the boolean value.\n    this._hidecopy = hidecopy != null && `${hidecopy}` !== 'false';\n  }\n  get hidecopy(): boolean { return this._hidecopy; }\n  private _hidecopy: boolean;\n\n  @Input('hide-copy')\n  set hyphenatedHideCopy(hidecopy: boolean) {\n    this.hidecopy = hidecopy;\n  }\n\n  @Input('hideCopy')\n  set capitalizedHideCopy(hidecopy: boolean) {\n    this.hidecopy = hidecopy;\n  }\n\n  @HostBinding('class.avoidFile') isAvoid = false;\n\n  @ViewChild('content', { static: true }) content: ElementRef;\n\n  @ViewChild(CodeComponent, { static: true }) aioCode: CodeComponent;\n\n  ngAfterViewInit() {\n    this.aioCode.code = this.content.nativeElement.innerHTML;\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeExampleComponent } from './code-example.component';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, CodeModule ],\n  declarations: [ CodeExampleComponent ],\n  exports: [ CodeExampleComponent ]\n})\nexport class CodeExampleModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = CodeExampleComponent;\n}\n"]}