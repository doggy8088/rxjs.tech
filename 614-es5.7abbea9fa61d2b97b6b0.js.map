{"version":3,"mappings":"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","names":["i","g","constructor","e","s","this","T","A","f","sectionsSubject","pipe","v","onDestroy","firstTime","fetchSections","_sections","subscribe","logger","log","y","forEach","deprecated","items","every","n","stability","ngOnDestroy","next","apiBase","apiListJsonDefault","http","get","error","t","factory","ɵfac","L","O","J","value","title","ngOnInit","filteredSections","S","apiService","sections","criteriaSubject","m","criteria","map","Object","filterSection","initializeSearchCriteria","setQuery","setSearchCriteria","query","toLowerCase","trim","setStatus","toggleStatusMenu","status","setType","toggleTypeMenu","type","showStatusMenu","showTypeMenu","l","filter","u","r","docType","securityRisk","name","indexOf","length","locationService","search","_this$locationService","queryEl","nativeElement","statuses","find","types","searchCriteria","setLocationSearch","_this$searchCriteria","setSearch","assign","selectors","Q","imports","c","d","p"],"sources":["webpack:///src/app/custom-elements/api/api.service.ts","webpack:///src/app/custom-elements/api/api-list.component.html","webpack:///src/app/custom-elements/api/api-list.component.ts","webpack:///src/app/custom-elements/api/api-list.module.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\n\nimport { Logger } from 'app/shared/logger.service';\nimport { DOC_CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\nexport interface ApiItem {\n  name: string;\n  title: string;\n  path: string;\n  docType: string;\n  stability: string;\n  securityRisk: boolean;\n}\n\nexport interface ApiSection {\n  path: string;\n  name: string;\n  title: string;\n  deprecated: boolean;\n  items: ApiItem[]|null;\n}\n\n@Injectable()\nexport class ApiService implements OnDestroy {\n\n  private apiBase = DOC_CONTENT_URL_PREFIX + 'api/';\n  private apiListJsonDefault = 'api-list.json';\n  private firstTime = true;\n  private onDestroy = new Subject();\n  private sectionsSubject = new ReplaySubject<ApiSection[]>(1);\n  private _sections = this.sectionsSubject.pipe(takeUntil(this.onDestroy));\n\n  /**\n   * Return a cached observable of API sections from a JSON file.\n   * API sections is an array of Angular top modules and metadata about their API documents (items).\n   */\n  get sections() {\n\n    if (this.firstTime) {\n      this.firstTime = false;\n      this.fetchSections(); // TODO: get URL for fetchSections by configuration?\n\n      // makes sectionsSubject hot; subscribe ensures stays alive (always refCount > 0);\n      this._sections.subscribe(sections => this.logger.log('ApiService got API sections') );\n    }\n\n    return this._sections.pipe(tap(sections => {\n      sections.forEach(section => {\n        section.deprecated = !!section.items &&\n            section.items.every(item => item.stability === 'deprecated');\n      });\n    }));\n  }\n\n  constructor(private http: HttpClient, private logger: Logger) { }\n\n  ngOnDestroy() {\n    this.onDestroy.next(null);\n  }\n\n /**\n  * Fetch API sections from a JSON file.\n  * API sections is an array of Angular top modules and metadata about their API documents (items).\n  * Updates `sections` observable\n  *\n  * @param {string} [src] - Name of the api list JSON file\n  */\n  fetchSections(src?: string) {\n    // TODO: get URL by configuration?\n    const url = this.apiBase + (src || this.apiListJsonDefault);\n    this.http.get<ApiSection[]>(url)\n      .pipe(\n        takeUntil(this.onDestroy),\n        tap(() => this.logger.log(`Got API sections from ${url}`)),\n      )\n      .subscribe(\n        sections => this.sectionsSubject.next(sections),\n        (err: HttpErrorResponse) => {\n          // TODO: handle error\n          this.logger.error(err);\n          throw err; // rethrow for now.\n        }\n      );\n  }\n}\n","<div class=\"l-flex-wrap api-filter\">\n\n  <aio-select (change)=\"setType($event.option)\"\n              [options]=\"types\"\n              [selected]=\"type\"\n              [showSymbol]=\"true\"\n              label=\"类别：\">\n  </aio-select>\n\n  <!-- <aio-select (change)=\"setStatus($event.option)\"\n              [options]=\"statuses\"\n              [selected]=\"status\"\n              label=\"Status:\">\n  </aio-select> -->\n\n  <div class=\"form-search\">\n    <input #filter placeholder=\"过滤\" aria-label=\"Filter\" (input)=\"setQuery($event.target.value)\">\n    <i class=\"material-icons\">search</i>\n  </div>\n</div>\n\n<article class=\"api-list-container l-content-small docs-content\">\n  <div *ngFor=\"let section of filteredSections | async\">\n    <h2 [id]=\"section.title\" *ngIf=\"section.items\">{{section.title}}</h2>\n    <ul class=\"api-list\" *ngIf=\"section.items?.length\">\n      <ng-container *ngFor=\"let item of section.items\">\n        <li class=\"api-item\">\n          <a [href]=\"item.path\">\n            <span class=\"symbol {{item.docType}}\"></span>\n            <span class=\"stability {{item.stability}}\">{{item.title}} {{!item.stability || item.stability === 'stable' ? '' : '(' + item.stability + ')'}}</span>\n          </a>\n        </li>\n      </ng-container>\n    </ul>\n  </div>\n</article>\n","/*\n* API List & Filter Component\n*\n* A page that displays a formatted list of the public Angular API entities.\n* Clicking on a list item triggers navigation to the corresponding API entity document.\n* Can add/remove API entity links based on filter settings.\n*/\n\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { LocationService } from 'app/shared/location.service';\n\nimport { Option } from 'app/shared/select/select.component';\n\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiSection, ApiService } from './api.service';\n\nclass SearchCriteria {\n  query ? = '';\n  status ? = 'all';\n  type ? = 'all';\n}\n\n@Component({\n  selector: 'aio-api-list',\n  templateUrl: './api-list.component.html',\n})\nexport class ApiListComponent implements OnInit {\n\n  filteredSections: Observable<ApiSection[]>;\n\n  showStatusMenu = false;\n  showTypeMenu = false;\n\n  private criteriaSubject = new ReplaySubject<SearchCriteria>(1);\n  private searchCriteria = new SearchCriteria();\n\n  status: Option;\n  type: Option;\n\n  // API types\n  types: Option[] = [\n    { value: 'all', title: '全部' },\n    { value: 'class', title: '类' },\n    { value: 'const', title: '常量'},\n    { value: 'enum', title: '枚举' },\n    { value: 'function', title: '函数' },\n    { value: 'interface', title: '接口' },\n    { value: 'type-alias', title: '类型别名' },\n  ];\n\n  statuses: Option[] = [\n    { value: 'all', title: '全部' },\n    { value: 'deprecated', title: '已弃用' },\n    { value: 'security-risk', title: '有安全风险' }\n  ];\n\n  @ViewChild('filter', { static: true }) queryEl: ElementRef;\n\n  constructor(\n    private apiService: ApiService,\n    private locationService: LocationService) { }\n\n  ngOnInit() {\n    this.filteredSections =\n        combineLatest(\n          this.apiService.sections,\n          this.criteriaSubject\n        ).pipe(\n          map( results => ({ sections: results[0], criteria: results[1]})),\n          map( results => (\n               results.sections\n                  .map(section => ({ ...section, items: this.filterSection(section, results.criteria) }))\n          ))\n        );\n\n    this.initializeSearchCriteria();\n  }\n\n  // TODO: may need to debounce as the original did\n  // although there shouldn't be any perf consequences if we don't\n  setQuery(query: string) {\n    this.setSearchCriteria({query: (query || '').toLowerCase().trim() });\n  }\n\n  setStatus(status: Option) {\n    this.toggleStatusMenu();\n    this.status = status;\n    this.setSearchCriteria({status: status.value});\n  }\n\n  setType(type: Option) {\n    this.toggleTypeMenu();\n    this.type = type;\n    this.setSearchCriteria({type: type.value});\n  }\n\n  toggleStatusMenu() {\n    this.showStatusMenu = !this.showStatusMenu;\n  }\n\n  toggleTypeMenu() {\n    this.showTypeMenu = !this.showTypeMenu;\n  }\n\n  //////// Private //////////\n\n  private filterSection(section: ApiSection, { query, status, type }: SearchCriteria) {\n    const items = section.items!.filter(item => {\n      return matchesType() && matchesStatus() && matchesQuery();\n\n      function matchesQuery() {\n        return !query ||\n          section.name.indexOf(query) !== -1 ||\n          item.name.indexOf(query) !== -1;\n      }\n\n      function matchesStatus() {\n        return status === 'all' ||\n          status === item.stability ||\n          (status === 'security-risk' && item.securityRisk);\n      }\n\n      function matchesType() {\n        return type === 'all' || type === item.docType;\n      }\n    });\n\n    // If there are no items we still return an empty array if the section name matches and the type is 'package'\n    return items.length ? items : (type === 'package' && (!query || section.name.indexOf(query) !== -1)) ? [] : null;\n  }\n\n  // Get initial search criteria from URL search params\n  private initializeSearchCriteria() {\n    const {query, status, type} = this.locationService.search();\n\n    const q = (query || '').toLowerCase();\n    // Hack: can't bind to query because input cursor always forced to end-of-line.\n    this.queryEl.nativeElement.value = q;\n\n    this.status = this.statuses.find(x => x.value === status) || this.statuses[0];\n    this.type = this.types.find(x => x.value === type) || this.types[0];\n\n    this.searchCriteria = {\n      query: q,\n      status: this.status.value,\n      type: this.type.value\n    };\n\n    this.criteriaSubject.next(this.searchCriteria);\n  }\n\n  private setLocationSearch() {\n    const {query, status, type} = this.searchCriteria;\n    const params = {\n      query:  query ? query : undefined,\n      status: status !== 'all' ? status : undefined,\n      type:   type   !== 'all' ? type   : undefined\n    };\n\n    this.locationService.setSearch('API Search', params);\n  }\n\n  private setSearchCriteria(criteria: SearchCriteria) {\n    this.criteriaSubject.next(Object.assign(this.searchCriteria, criteria));\n    this.setLocationSearch();\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ApiListComponent } from './api-list.component';\nimport { ApiService } from './api.service';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, SharedModule, HttpClientModule ],\n  declarations: [ ApiListComponent ],\n  providers: [ ApiService ]\n})\nexport class ApiListModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = ApiListComponent;\n}\n"]}